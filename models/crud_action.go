// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// CrudAction crud action
//
// swagger:model CrudAction
type CrudAction string

func NewCrudAction(value CrudAction) *CrudAction {
	return &value
}

// Pointer returns a pointer to a freshly-allocated CrudAction.
func (m CrudAction) Pointer() *CrudAction {
	return &m
}

const (

	// CrudActionCrudActionINVALID captures enum value "CrudAction__INVALID__"
	CrudActionCrudActionINVALID CrudAction = "CrudAction__INVALID__"

	// CrudActionCrudActionNotApplicable captures enum value "CrudActionNotApplicable"
	CrudActionCrudActionNotApplicable CrudAction = "CrudActionNotApplicable"

	// CrudActionCrudActionCreate captures enum value "CrudActionCreate"
	CrudActionCrudActionCreate CrudAction = "CrudActionCreate"

	// CrudActionCrudActionRead captures enum value "CrudActionRead"
	CrudActionCrudActionRead CrudAction = "CrudActionRead"

	// CrudActionCrudActionUpdate captures enum value "CrudActionUpdate"
	CrudActionCrudActionUpdate CrudAction = "CrudActionUpdate"

	// CrudActionCrudActionDelete captures enum value "CrudActionDelete"
	CrudActionCrudActionDelete CrudAction = "CrudActionDelete"

	// CrudActionCrudActionQuery captures enum value "CrudActionQuery"
	CrudActionCrudActionQuery CrudAction = "CrudActionQuery"

	// CrudActionCrudActionQueryNext captures enum value "CrudActionQueryNext"
	CrudActionCrudActionQueryNext CrudAction = "CrudActionQueryNext"

	// CrudActionCrudActionReadSelf captures enum value "CrudActionReadSelf"
	CrudActionCrudActionReadSelf CrudAction = "CrudActionReadSelf"

	// CrudActionCrudActionUpdateSelf captures enum value "CrudActionUpdateSelf"
	CrudActionCrudActionUpdateSelf CrudAction = "CrudActionUpdateSelf"
)

// for schema
var crudActionEnum []interface{}

func init() {
	var res []CrudAction
	if err := json.Unmarshal([]byte(`["CrudAction__INVALID__","CrudActionNotApplicable","CrudActionCreate","CrudActionRead","CrudActionUpdate","CrudActionDelete","CrudActionQuery","CrudActionQueryNext","CrudActionReadSelf","CrudActionUpdateSelf"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		crudActionEnum = append(crudActionEnum, v)
	}
}

func (m CrudAction) validateCrudActionEnum(path, location string, value CrudAction) error {
	if err := validate.EnumCase(path, location, value, crudActionEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this crud action
func (m CrudAction) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateCrudActionEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this crud action based on context it is used
func (m CrudAction) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
