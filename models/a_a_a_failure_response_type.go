// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// AAAFailureResponseType a a a failure response type
//
// swagger:model AAAFailureResponseType
type AAAFailureResponseType string

func NewAAAFailureResponseType(value AAAFailureResponseType) *AAAFailureResponseType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated AAAFailureResponseType.
func (m AAAFailureResponseType) Pointer() *AAAFailureResponseType {
	return &m
}

const (

	// AAAFailureResponseTypeINVALID captures enum value "__INVALID__"
	AAAFailureResponseTypeINVALID AAAFailureResponseType = "__INVALID__"

	// AAAFailureResponseTypeAAAFailureResponseTypeNone captures enum value "AAAFailureResponseTypeNone"
	AAAFailureResponseTypeAAAFailureResponseTypeNone AAAFailureResponseType = "AAAFailureResponseTypeNone"

	// AAAFailureResponseTypeAAAFailureResponseTypeLogin captures enum value "AAAFailureResponseTypeLogin"
	AAAFailureResponseTypeAAAFailureResponseTypeLogin AAAFailureResponseType = "AAAFailureResponseTypeLogin"

	// AAAFailureResponseTypeAAAFailureResponseTypeRefresh captures enum value "AAAFailureResponseTypeRefresh"
	AAAFailureResponseTypeAAAFailureResponseTypeRefresh AAAFailureResponseType = "AAAFailureResponseTypeRefresh"

	// AAAFailureResponseTypeAAAFailureResponseTypeLogout captures enum value "AAAFailureResponseTypeLogout"
	AAAFailureResponseTypeAAAFailureResponseTypeLogout AAAFailureResponseType = "AAAFailureResponseTypeLogout"

	// AAAFailureResponseTypeAAAFailureResponseTypeSessionDetails captures enum value "AAAFailureResponseTypeSessionDetails"
	AAAFailureResponseTypeAAAFailureResponseTypeSessionDetails AAAFailureResponseType = "AAAFailureResponseTypeSessionDetails"

	// AAAFailureResponseTypeAAAFailureResponseTypeCredentialChange captures enum value "AAAFailureResponseTypeCredentialChange"
	AAAFailureResponseTypeAAAFailureResponseTypeCredentialChange AAAFailureResponseType = "AAAFailureResponseTypeCredentialChange"

	// AAAFailureResponseTypeAAAFailureResponseTypeQueryAllSessionDetails captures enum value "AAAFailureResponseTypeQueryAllSessionDetails"
	AAAFailureResponseTypeAAAFailureResponseTypeQueryAllSessionDetails AAAFailureResponseType = "AAAFailureResponseTypeQueryAllSessionDetails"

	// AAAFailureResponseTypeAAAFailureResponseTypeGenerateToken captures enum value "AAAFailureResponseTypeGenerateToken"
	AAAFailureResponseTypeAAAFailureResponseTypeGenerateToken AAAFailureResponseType = "AAAFailureResponseTypeGenerateToken"
)

// for schema
var aAAFailureResponseTypeEnum []interface{}

func init() {
	var res []AAAFailureResponseType
	if err := json.Unmarshal([]byte(`["__INVALID__","AAAFailureResponseTypeNone","AAAFailureResponseTypeLogin","AAAFailureResponseTypeRefresh","AAAFailureResponseTypeLogout","AAAFailureResponseTypeSessionDetails","AAAFailureResponseTypeCredentialChange","AAAFailureResponseTypeQueryAllSessionDetails","AAAFailureResponseTypeGenerateToken"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		aAAFailureResponseTypeEnum = append(aAAFailureResponseTypeEnum, v)
	}
}

func (m AAAFailureResponseType) validateAAAFailureResponseTypeEnum(path, location string, value AAAFailureResponseType) error {
	if err := validate.EnumCase(path, location, value, aAAFailureResponseTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this a a a failure response type
func (m AAAFailureResponseType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAAAFailureResponseTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this a a a failure response type based on context it is used
func (m AAAFailureResponseType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
