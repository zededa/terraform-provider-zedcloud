{
    "swagger": "2.0",
    "info": {
        "title": "ZEDEDA App Profiles Service",
        "description": "The ZEDEDA App Profiles Service is part of ZEDEDA Edge Orchestration Platform. This service enables customers to define their app profiles on ZEDEDA platform and to manage them remotely.",
        "termsOfService": "https://www.zededa.com/terms",
        "version": "1.0",
        "contact": {
            "name": "ZEDEDA API Support",
            "url": "https://www.zededa.com/support",
            "email": "support@zededa.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "tags": [
        {
            "name": "AppProfileService"
        },
        {
            "name": "AssetGroupService"
        },
        {
            "name": "ProfileDeploymentService"
        }
    ],
    "basePath": "/api",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/v1/appprofiles": {
            "get": {
                "summary": "Query app profiles",
                "description": "Query the app profile records.",
                "operationId": "AppProfileService_QueryAppProfiles",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/AppProfiles"
                        }
                    },
                    "400": {
                        "description": "Bad Request. The API gateway did not process the request because of invalid value of filter parameters.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "summary",
                        "description": "summary flag",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "filter.namePattern",
                        "description": "app profile name pattern",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.id",
                        "description": "app profile id",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "next.pageToken",
                        "description": "Page Token",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "next.orderBy",
                        "description": "OrderBy helps in sorting the list response",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "next.pageNum",
                        "description": "Page Number",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "next.pageSize",
                        "description": "Defines the page size",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "next.totalPages",
                        "description": "Total number of pages to be fetched.",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "fields",
                        "description": "Fields to select: id, name, title, description",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "AppProfileService"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/app-profiles"
                }
            },
            "post": {
                "summary": "Create app profile",
                "description": "Create an app profile record.",
                "operationId": "AppProfileService_CreateAppProfile",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request. The API gateway did not process the request because of missing parameter or invalid value of parameters.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict. The API gateway did not process the request because this app profile record will conflict with an already existing app profile record.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AppProfile"
                        }
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "AppProfileService"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/app-profiles"
                }
            }
        },
        "/v1/appprofiles/id/{id}": {
            "get": {
                "summary": "Get app profile",
                "description": "Get the configuration (without security details) of an app profile record.",
                "operationId": "AppProfileService_GetAppProfile",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/AppProfileRead"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found. The API gateway did not process the request because the requested resource could not be found.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "Unique Id of the App profile",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "AppProfileService"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/app-profiles"
                }
            },
            "delete": {
                "summary": "Delete app profile",
                "description": "Delete an app profile record.",
                "operationId": "AppProfileService_DeleteAppProfile",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found. The API gateway did not process the request because the requested resource could not be found.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict. The API gateway did not process the request because there are instances of this app profile deployed in edge node(s)",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "Unique Id of the App profile",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "AppProfileService"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/app-profiles"
                }
            },
            "put": {
                "summary": "Update app profile",
                "description": "Update an app profile record. The usual pattern to update an app profile record is to retrieve the record and update with the modified values in a new body to update the app profile record.",
                "operationId": "AppProfileService_UpdateAppProfile",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found. The API gateway did not process the request because the requested resource could not be found.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict. The API gateway did not process the request because this operation will conflict with an already existing app profile record.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "unique id for an App profile",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "user defined name for the App profile"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "user defined title for the app profile"
                                },
                                "appPolicies": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ProfileAppPolicy"
                                    },
                                    "description": "list of app instance policies"
                                },
                                "networkPolicies": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ProfileNetworkPolicy"
                                    },
                                    "description": "list of network instance policies"
                                },
                                "volumePolicies": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ProfileVolumePolicy"
                                    },
                                    "description": "list of volume instance policies"
                                }
                            }
                        }
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "AppProfileService"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/app-profiles"
                }
            }
        },
        "/v1/appprofiles/id/{id}/version": {
            "get": {
                "summary": "Query app profile versions by app profile id",
                "description": "Query the app profile version records using app profile id",
                "operationId": "AppProfileService_QueryAppProfileRevisionById",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/AppProfileVersionListResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request. The API gateway did not process the request because of invalid value of filter parameters.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "unique id for an App profile",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "next.pageToken",
                        "description": "Page Token",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "next.orderBy",
                        "description": "OrderBy helps in sorting the list response",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "next.pageNum",
                        "description": "Page Number",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "next.pageSize",
                        "description": "Defines the page size",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "next.totalPages",
                        "description": "Total number of pages to be fetched.",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "name",
                        "description": "user defined name for the App profile",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "AppProfileService"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/app-profiles"
                }
            }
        },
        "/v1/appprofiles/name/{name}": {
            "get": {
                "summary": "Get app profile by name",
                "description": "Get the configuration (without security details) of an app profile record by name.",
                "operationId": "AppProfileService_GetAppProfileByName",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/AppProfileRead"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found. The API gateway did not process the request because the requested resource could not be found.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "description": "User defined name of the app profile, unique across the enterprise. Once app profile is created, name can\u2019t be changed",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "AppProfileService"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/app-profiles"
                }
            }
        },
        "/v1/appprofiles/name/{name}/version": {
            "get": {
                "summary": "Query app profile versions by app profile name",
                "description": "Query the app profile version records using app profile name",
                "operationId": "AppProfileService_QueryAppProfileRevisionByName",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/AppProfileVersionListResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request. The API gateway did not process the request because of invalid value of filter parameters.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "description": "user defined name for the App profile",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "next.pageToken",
                        "description": "Page Token",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "next.orderBy",
                        "description": "OrderBy helps in sorting the list response",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "next.pageNum",
                        "description": "Page Number",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "next.pageSize",
                        "description": "Defines the page size",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "next.totalPages",
                        "description": "Total number of pages to be fetched.",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "id",
                        "description": "unique id for an App profile",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "AppProfileService"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/app-profiles"
                }
            }
        },
        "/v1/assetgroups": {
            "get": {
                "summary": "Query asset groups",
                "description": "Query the asset group records.",
                "operationId": "AssetGroupService_QueryAssetGroups",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/AssetGroupList"
                        }
                    },
                    "400": {
                        "description": "Bad Request. The API gateway did not process the request because of invalid value of filter parameters.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "projectNamePattern",
                        "description": "project name pattern",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "namePattern",
                        "description": "asset group name pattern",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "next.pageToken",
                        "description": "Page Token",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "next.orderBy",
                        "description": "OrderBy helps in sorting the list response",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "next.pageNum",
                        "description": "Page Number",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "next.pageSize",
                        "description": "Defines the page size",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "next.totalPages",
                        "description": "Total number of pages to be fetched.",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "summary",
                        "description": "Only summary of the records required",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "AssetGroupService"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/assetgroups"
                }
            },
            "post": {
                "summary": "Create asset group",
                "description": "Create a asset group record.",
                "operationId": "AssetGroupService_CreateAssetGroup",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request. The API gateway did not process the request because of missing parameter or invalid value of parameters.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict. The API gateway did not process the request because this asset group record will conflict with an already existing asset group record.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AssetGroup"
                        }
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "AssetGroupService"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/assetgroups"
                }
            }
        },
        "/v1/assetgroups/id/{id}": {
            "get": {
                "summary": "Get asset group",
                "description": "Get the configuration (without security details) of a asset group record.",
                "operationId": "AssetGroupService_GetAssetGroup",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/AssetGroupRead"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found. The API gateway did not process the request because the requested resource could not be found.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "unique Id of the asset group",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "AssetGroupService"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/assetgroups"
                }
            },
            "delete": {
                "summary": "Delete asset group",
                "description": "Delete a asset group record.",
                "operationId": "AssetGroupService_DeleteAssetGroup",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found. The API gateway did not process the request because the requested resource could not be found.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict. The API gateway did not process the request because there are instances of this asset group deployed in edge node(s)",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "unique Id of the asset group",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "AssetGroupService"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/assetgroups"
                }
            },
            "put": {
                "summary": "Update asset group",
                "description": "Update a asset group record. The usual pattern to update a asset group record is to retrieve the record and update with the modified values in a new body to update the asset group record.",
                "operationId": "AssetGroupService_UpdateAssetGroup",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found. The API gateway did not process the request because the requested resource could not be found.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict. The API gateway did not process the request because this operation will conflict with an already existing asset group record.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "unique Id of the asset group.",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "User defined name of the asset group, unique across the enterprise. Once asset group is created, name can\u2019t be changed.",
                                    "maxLength": 256,
                                    "minLength": 3,
                                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                                    "uniqueItems": true
                                },
                                "title": {
                                    "type": "string",
                                    "description": "User defined title of the asset group. Title can be changed at any time.",
                                    "maxLength": 256,
                                    "minLength": 3,
                                    "pattern": "[a-zA-Z0-9]+[a-zA-Z0-9!-~ ]+"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Detailed description of the asset group.",
                                    "maxLength": 256
                                },
                                "projectId": {
                                    "type": "string",
                                    "description": "project id"
                                },
                                "assetIds": {
                                    "$ref": "#/definitions/AssetIDs"
                                },
                                "assetTags": {
                                    "$ref": "#/definitions/AssetTags"
                                }
                            },
                            "description": "Assetgroups is a proto that should be used by user-agents to create/update asset groups to group various assets like devices",
                            "title": "Asset groups",
                            "required": [
                                "name"
                            ]
                        }
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "AssetGroupService"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/assetgroups"
                }
            }
        },
        "/v1/assetgroups/name/{name}": {
            "get": {
                "summary": "Get asset group by name",
                "description": "Get the configuration (without security details) of a asset group record by name.",
                "operationId": "AssetGroupService_GetAssetGroupByName",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/AssetGroupRead"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found. The API gateway did not process the request because the requested resource could not be found.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "description": "User defined name of the asset group, unique across the enterprise. Once object is created, name can\u2019t be changed",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "AssetGroupService"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/assetgroups"
                }
            }
        },
        "/v1/profiledeployments": {
            "get": {
                "summary": "Query profile deployments",
                "description": "Query the profile deployment records.",
                "operationId": "ProfileDeploymentService_QueryProfileDeployments",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/ProfileDeploymentList"
                        }
                    },
                    "400": {
                        "description": "Bad Request. The API gateway did not process the request because of invalid value of filter parameters.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "filter.profileDeploymentId",
                        "description": "Unique id of the asset, unique across the enterprise.",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.namePattern",
                        "description": "deployment name pattern",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "next.pageToken",
                        "description": "Page Token",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "next.orderBy",
                        "description": "OrderBy helps in sorting the list response",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "next.pageNum",
                        "description": "Page Number",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "next.pageSize",
                        "description": "Defines the page size",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "next.totalPages",
                        "description": "Total number of pages to be fetched.",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "ProfileDeploymentService"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/profiledeployments"
                }
            },
            "post": {
                "summary": "Create profile deployment",
                "description": "Create a profile deployment record.",
                "operationId": "ProfileDeploymentService_CreateProfileDeployment",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request. The API gateway did not process the request because of missing parameter or invalid value of parameters.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict. The API gateway did not process the request because this profile deployment record will conflict with an already existing profile deployment record.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProfileDeployment"
                        }
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "ProfileDeploymentService"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/profiledeployments"
                }
            }
        },
        "/v1/profiledeployments/id/{id}": {
            "get": {
                "summary": "Get profile deployment",
                "description": "Get the configuration (without security details) of a profile deployment record.",
                "operationId": "ProfileDeploymentService_GetProfileDeployment",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/ProfileDeployment"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found. The API gateway did not process the request because the requested resource could not be found.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "unique Id of the deployment",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "ProfileDeploymentService"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/profiledeployments"
                }
            },
            "delete": {
                "summary": "Delete profile deployment",
                "description": "Delete a profile deployment record.",
                "operationId": "ProfileDeploymentService_DeleteProfileDeployment",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found. The API gateway did not process the request because the requested resource could not be found.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict. The API gateway did not process the request because there are instances of this profile deployment deployed in edge node(s)",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "unique Id of the deployment",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "ProfileDeploymentService"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/profiledeployments"
                }
            },
            "put": {
                "summary": "Update profile deployment",
                "description": "Update a profile deployment record. The usual pattern to update a profile deployment record is to retrieve the record and update with the modified values in a new body to update the profile deployment record.",
                "operationId": "ProfileDeploymentService_UpdateProfileDeployment",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found. The API gateway did not process the request because the requested resource could not be found.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict. The API gateway did not process the request because this operation will conflict with an already existing profile deployment record.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "unique Id of the deployment.",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "User defined name of the deployment, unique across the enterprise. Once deployment is created, name can\u2019t be changed.",
                                    "maxLength": 256,
                                    "minLength": 3,
                                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                                    "uniqueItems": true
                                },
                                "title": {
                                    "type": "string",
                                    "description": "User defined title of the deployment. Title can be changed at any time.",
                                    "maxLength": 256,
                                    "minLength": 3,
                                    "pattern": "[a-zA-Z0-9]+[a-zA-Z0-9!-~ ]+"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Detailed description of the deployment.",
                                    "maxLength": 256
                                },
                                "projectId": {
                                    "type": "string",
                                    "description": "project id"
                                },
                                "appProfileInfo": {
                                    "$ref": "#/definitions/AppProfileInfo",
                                    "description": "app profile id"
                                },
                                "targetAssetGroup": {
                                    "$ref": "#/definitions/TargetAssetGroup",
                                    "description": "asset group info"
                                },
                                "status": {
                                    "type": "string"
                                }
                            },
                            "description": "Profile Deployment is a proto that should be used by user-agents to create/update deployments",
                            "title": "Deployments for Application profile",
                            "required": [
                                "name",
                                "appProfileInfo",
                                "projectId",
                                "targetAssetGroup"
                            ]
                        }
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "ProfileDeploymentService"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/profiledeployments"
                }
            }
        },
        "/v1/profiledeployments/id/{id}/resourcestatus": {
            "get": {
                "summary": "Query profile deployments resource status",
                "description": "Query the profile deployment resourcs status.",
                "operationId": "ProfileDeploymentService_QueryProfileDeploymentResourceStatus",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/ProfileDeploymentResourceDetailedStatusResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request. The API gateway did not process the request because of invalid value of filter parameters.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "unique Id of the deployment.",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "next.pageToken",
                        "description": "Page Token",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "next.orderBy",
                        "description": "OrderBy helps in sorting the list response",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "next.pageNum",
                        "description": "Page Number",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "next.pageSize",
                        "description": "Defines the page size",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "next.totalPages",
                        "description": "Total number of pages to be fetched.",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "ProfileDeploymentService"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/profiledeployments"
                }
            }
        },
        "/v1/profiledeployments/name/{name}": {
            "get": {
                "summary": "Get profile deployment by name",
                "description": "Get the configuration (without security details) of a profile deployment record by name.",
                "operationId": "ProfileDeploymentService_GetProfileDeploymentByName",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/ProfileDeployment"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found. The API gateway did not process the request because the requested resource could not be found.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "description": "User defined name of the deployment, unique across the enterprise. Once object is created, name can\u2019t be changed",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "ProfileDeploymentService"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/profiledeployments"
                }
            }
        }
    },
    "definitions": {
        "Acl": {
            "type": "object",
            "properties": {
                "matches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Match"
                    },
                    "description": "Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port"
                },
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AclAction"
                    },
                    "description": "Chain of actions to be taken on matching network traffic"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Access Control List"
                }
            }
        },
        "AclAction": {
            "type": "object",
            "properties": {
                "drop": {
                    "type": "boolean",
                    "description": "Drop the packet",
                    "title": "Not used by ZedUI"
                },
                "limit": {
                    "type": "boolean",
                    "description": "UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane",
                    "title": "Limit action on ACL rule"
                },
                "limitValue": {
                    "$ref": "#/definitions/LimitParams",
                    "description": "Value to be used for limit action (Required if limit is true)",
                    "title": "only valid if limit flag is set, see below.\nNot used by ZedUI"
                },
                "limitrate": {
                    "type": "integer",
                    "format": "int64",
                    "description": "UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane",
                    "title": "Rate limit in ACL rule"
                },
                "limitunit": {
                    "type": "string",
                    "description": "UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane",
                    "title": "Rate limit unit in ACL rule"
                },
                "limitburst": {
                    "type": "integer",
                    "format": "int64",
                    "description": "UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane",
                    "title": "Rate limit burst in ACL rule"
                },
                "portmap": {
                    "type": "boolean",
                    "description": "UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane",
                    "title": "Enable device to app port mapping for incoming ACL rule, implicitly added by ZedUI code"
                },
                "portmapto": {
                    "$ref": "#/definitions/MapParams",
                    "description": "UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane",
                    "title": "Device to app port mapping for incoming ACL rule"
                }
            }
        },
        "AppCategory": {
            "type": "string",
            "enum": [
                "APP_CATEGORY_UNSPECIFIED",
                "APP_CATEGORY_OPERATING_SYSTEM",
                "APP_CATEGORY_INDUSTRIAL",
                "APP_CATEGORY_EDGE_APPLICATION",
                "APP_CATEGORY_NETWORKING",
                "APP_CATEGORY_SECURITY",
                "APP_CATEGORY_DATA_ANALYTICS",
                "APP_CATEGORY_CLOUD_APPLICATION",
                "APP_CATEGORY_DEVOPS",
                "APP_CATEGORY_OTHERS"
            ],
            "default": "APP_CATEGORY_UNSPECIFIED",
            "description": "- APP_CATEGORY_UNSPECIFIED: Invalid Edge Application Category\n - APP_CATEGORY_OPERATING_SYSTEM: Edge operating systems\n - APP_CATEGORY_INDUSTRIAL: Connectity solution for industrial protocols\n - APP_CATEGORY_EDGE_APPLICATION: Edge application framework featuring composite functions for data ingestion, buffering, analytics and export\n - APP_CATEGORY_NETWORKING: Edge networking services (e.g. SD-WAN, NFV)\n - APP_CATEGORY_SECURITY: Edge security services (e.g. protocol inspection, firewall)\n - APP_CATEGORY_DATA_ANALYTICS: Edge analytics (e.g. AI/ML) and data management (e.g. database, connectors) services\n - APP_CATEGORY_CLOUD_APPLICATION: Edge application runtimes, cloud connectivity and general application enablement\n - APP_CATEGORY_DEVOPS: Tools for Edge Application CI/CD and performance optimization\n - APP_CATEGORY_OTHERS: Miscellaneous functionality",
            "title": "Edge Application Category"
        },
        "AppInstanceLogs": {
            "type": "object",
            "properties": {
                "access": {
                    "type": "boolean",
                    "description": "Flags to enable / disable sending of logs generated by app instance to zedcloud"
                }
            },
            "description": "App Instance Logs configuration",
            "title": "App Instance Logs configuration",
            "required": [
                "access"
            ]
        },
        "AppProfile": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique id for an App profile"
                },
                "name": {
                    "type": "string",
                    "description": "user defined name for the App profile"
                },
                "title": {
                    "type": "string",
                    "description": "user defined title for the app profile"
                },
                "appPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProfileAppPolicy"
                    },
                    "description": "list of app instance policies"
                },
                "networkPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProfileNetworkPolicy"
                    },
                    "description": "list of network instance policies"
                },
                "volumePolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProfileVolumePolicy"
                    },
                    "description": "list of volume instance policies"
                }
            }
        },
        "AppProfileConfigSummary": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique id for app profile"
                },
                "name": {
                    "type": "string",
                    "description": "user defined app profile name"
                },
                "title": {
                    "type": "string",
                    "description": "user defined app profile title"
                },
                "description": {
                    "type": "string",
                    "description": "Detailed description of the app profile.",
                    "maxLength": 256
                },
                "appPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProfileAppPolicy"
                    },
                    "description": "list of app instance policies"
                },
                "networkPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProfileNetworkPolicy"
                    },
                    "description": "list of network instance policies"
                },
                "volumePolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProfileVolumePolicy"
                    },
                    "description": "list of volume instance policies"
                }
            }
        },
        "AppProfileFilter": {
            "type": "object",
            "properties": {
                "namePattern": {
                    "type": "string",
                    "description": "app profile name pattern"
                },
                "id": {
                    "type": "string",
                    "description": "app profile id"
                }
            }
        },
        "AppProfileInfo": {
            "type": "object",
            "properties": {
                "appProfileId": {
                    "type": "string",
                    "description": "Unique ID of the asset group.",
                    "readOnly": true,
                    "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                    "uniqueItems": true
                },
                "version": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "AppProfileRead": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique id for an App profile"
                },
                "name": {
                    "type": "string",
                    "description": "user defined name for the App profile"
                },
                "title": {
                    "type": "string",
                    "description": "user defined title for the app profile"
                },
                "appPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProfileAppPolicy"
                    },
                    "description": "list of app instance policies"
                },
                "networkPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProfileNetworkPolicy"
                    },
                    "description": "list of network instance policies"
                },
                "volumePolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProfileVolumePolicy"
                    },
                    "description": "list of volume instance policies"
                },
                "latestVersion": {
                    "type": "integer",
                    "format": "int64",
                    "description": "latest version of app profile"
                },
                "status": {
                    "$ref": "#/definitions/AppProfileStatusType",
                    "description": "status of the app profile"
                }
            }
        },
        "AppProfileStatusType": {
            "type": "string",
            "enum": [
                "APP_PROFILE_STATUS_TYPE_INACTIVE",
                "APP_PROFILE_STATUS_TYPE_ACTIVE"
            ],
            "default": "APP_PROFILE_STATUS_TYPE_INACTIVE"
        },
        "AppProfileVersion": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique id for an App profile"
                },
                "name": {
                    "type": "string",
                    "description": "user defined name for the App profile"
                },
                "title": {
                    "type": "string",
                    "description": "user defined title for the app profile"
                },
                "appPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProfileAppPolicy"
                    },
                    "description": "list of app instance policies"
                },
                "networkPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProfileNetworkPolicy"
                    },
                    "description": "list of network instance policies"
                },
                "volumePolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProfileVolumePolicy"
                    },
                    "description": "list of volume instance policies"
                },
                "version": {
                    "type": "integer",
                    "format": "int64",
                    "description": "latest version of app profile"
                }
            }
        },
        "AppProfileVersionListResp": {
            "type": "object",
            "properties": {
                "versionList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AppProfileVersion"
                    },
                    "description": "App profile version list response"
                },
                "next": {
                    "$ref": "#/definitions/Cursor",
                    "description": "cursor next"
                }
            }
        },
        "AppProfiles": {
            "type": "object",
            "properties": {
                "summaryByState": {
                    "$ref": "#/definitions/Summary",
                    "description": "app profile by summary"
                },
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AppProfileConfigSummary"
                    },
                    "description": "App profile summary list response"
                },
                "next": {
                    "$ref": "#/definitions/Cursor",
                    "description": "cursor next"
                }
            }
        },
        "AppType": {
            "type": "string",
            "enum": [
                "APP_TYPE_UNSPECIFIED",
                "APP_TYPE_VM",
                "APP_TYPE_VM_RUNTIME",
                "APP_TYPE_CONTAINER",
                "APP_TYPE_MODULE",
                "APP_TYPE_DOCKER_COMPOSE"
            ],
            "default": "APP_TYPE_UNSPECIFIED",
            "description": "type of app bundle."
        },
        "AssetGroup": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique Id of the asset group.",
                    "readOnly": true,
                    "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                    "uniqueItems": true
                },
                "name": {
                    "type": "string",
                    "description": "User defined name of the asset group, unique across the enterprise. Once asset group is created, name can\u2019t be changed.",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                    "uniqueItems": true
                },
                "title": {
                    "type": "string",
                    "description": "User defined title of the asset group. Title can be changed at any time.",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9]+[a-zA-Z0-9!-~ ]+"
                },
                "description": {
                    "type": "string",
                    "description": "Detailed description of the asset group.",
                    "maxLength": 256
                },
                "projectId": {
                    "type": "string",
                    "description": "project id"
                },
                "assetIds": {
                    "$ref": "#/definitions/AssetIDs"
                },
                "assetTags": {
                    "$ref": "#/definitions/AssetTags"
                }
            },
            "description": "Assetgroups is a proto that should be used by user-agents to create/update asset groups to group various assets like devices",
            "title": "Asset groups",
            "required": [
                "name"
            ]
        },
        "AssetGroupList": {
            "type": "object",
            "properties": {
                "next": {
                    "$ref": "#/definitions/Cursor",
                    "description": "cursor next"
                },
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AssetGroup"
                    },
                    "description": "asset group summary list"
                },
                "totalCount": {
                    "type": "integer",
                    "format": "int64",
                    "description": "asset group total count"
                }
            }
        },
        "AssetGroupRead": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique Id of the asset group.",
                    "readOnly": true,
                    "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                    "uniqueItems": true
                },
                "name": {
                    "type": "string",
                    "description": "User defined name of the asset group, unique across the enterprise. Once asset group is created, name can\u2019t be changed.",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                    "uniqueItems": true
                },
                "title": {
                    "type": "string",
                    "description": "User defined title of the asset group. Title can be changed at any time.",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9]+[a-zA-Z0-9!-~ ]+"
                },
                "description": {
                    "type": "string",
                    "description": "Detailed description of the asset group.",
                    "maxLength": 256
                },
                "projectId": {
                    "type": "string",
                    "description": "project id"
                },
                "assetIds": {
                    "$ref": "#/definitions/AssetIDs"
                },
                "assetTags": {
                    "$ref": "#/definitions/AssetTags"
                },
                "assetCount": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "AssetGroupRead - refers to the response object for reading a asset group"
        },
        "AssetIDs": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "title": "AssetIDs - represents a list of asset IDs"
        },
        "AssetTag": {
            "type": "object",
            "properties": {
                "tag": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.",
                    "maxLength": 32,
                    "pattern": "^[^<%&?/\\>]+$"
                }
            }
        },
        "AssetTags": {
            "type": "object",
            "properties": {
                "assetTag": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AssetTag"
                    }
                }
            }
        },
        "Author": {
            "type": "object",
            "properties": {
                "user": {
                    "type": "string",
                    "description": "UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field",
                    "title": "Name of the developer"
                },
                "group": {
                    "type": "string",
                    "title": "Not used by ZedUI"
                },
                "company": {
                    "type": "string",
                    "description": "UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field",
                    "title": "Company of the developer"
                },
                "website": {
                    "type": "string",
                    "description": "UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field",
                    "title": "Website of the developer company"
                },
                "email": {
                    "type": "string",
                    "description": "UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field",
                    "title": "Contact email of the developer company"
                }
            }
        },
        "ContainerDetail": {
            "type": "object",
            "properties": {
                "containerCreateOption": {
                    "type": "string",
                    "description": "Create options direct the creation of the Docker container",
                    "title": "Base64 encoded container specific details"
                }
            },
            "description": "common container detail."
        },
        "Cursor": {
            "type": "object",
            "properties": {
                "pageToken": {
                    "type": "string",
                    "description": "Page Token"
                },
                "orderBy": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "OrderBy helps in sorting the list response"
                },
                "pageNum": {
                    "type": "number",
                    "format": "int64",
                    "description": "Page Number"
                },
                "pageSize": {
                    "type": "number",
                    "format": "int64",
                    "description": "Defines the page size"
                },
                "totalPages": {
                    "type": "number",
                    "format": "int64",
                    "description": "Total number of pages to be fetched."
                }
            },
            "description": "Cursor helps in filtering the various list response like edge-app bundle list, model list, bundle list etc. ",
            "title": "Cursor is used as filter in list operation."
        },
        "CustomConfig": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of CustomConfig (Required)"
                },
                "add": {
                    "type": "boolean",
                    "description": "Add the Custom Config to App Instance (Optional. Default: False)"
                },
                "override": {
                    "type": "boolean",
                    "description": "Override existing custom config from App Bundle Manifest (Optional. Default: False)"
                },
                "allowStorageResize": {
                    "type": "boolean",
                    "description": "Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)"
                },
                "fieldDelimiter": {
                    "type": "string",
                    "description": "Field delimiter used in specifying variables in template. (Required)"
                },
                "template": {
                    "type": "string",
                    "description": "base64 encrypted template string. (Optional)"
                },
                "variableGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomConfigVariableGroup"
                    },
                    "description": "List of Variable groups. (Required)"
                }
            }
        },
        "CustomConfigVariableGroup": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the Variable Group(Required)"
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VariableGroupVariable"
                    },
                    "description": "List of variables(Required)"
                },
                "required": {
                    "type": "boolean",
                    "description": "Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)"
                },
                "condition": {
                    "$ref": "#/definitions/VariableGroupCondition",
                    "description": "Condition to apply the variable group. (Optional. Default: None)"
                }
            }
        },
        "DeploymentType": {
            "type": "string",
            "enum": [
                "DEPLOYMENT_TYPE_UNSPECIFIED",
                "DEPLOYMENT_TYPE_STAND_ALONE",
                "DEPLOYMENT_TYPE_AZURE",
                "DEPLOYMENT_TYPE_K3S",
                "DEPLOYMENT_TYPE_AWS",
                "DEPLOYMENT_TYPE_K3S_AZURE",
                "DEPLOYMENT_TYPE_K3S_AWS",
                "DEPLOYMENT_TYPE_VMWARE_VCE",
                "DEPLOYMENT_TYPE_VMWARE_TKG_ATTACH",
                "DEPLOYMENT_TYPE_DOCKER_RUNTIME"
            ],
            "default": "DEPLOYMENT_TYPE_UNSPECIFIED"
        },
        "Details": {
            "type": "object",
            "example": {
                "appCategory": "APP_CATEGORY_CLOUD_APPLICATION",
                "os": "Linux"
            },
            "properties": {
                "category": {
                    "type": "string",
                    "default": "All",
                    "description": "UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField",
                    "title": "Type of the Edge application"
                },
                "os": {
                    "type": "string",
                    "title": "Edge application's Operating System"
                },
                "appCategory": {
                    "$ref": "#/definitions/AppCategory",
                    "default": "APP_CATEGORY_OTHERS",
                    "title": "Edge application category"
                },
                "logo": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo",
                    "title": "App Logo"
                },
                "screenshotList": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields",
                    "title": "App Screenshots"
                },
                "licenseList": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License",
                    "title": "App Licenses"
                },
                "support": {
                    "type": "string",
                    "description": "UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field",
                    "title": "Support Description"
                },
                "agreementList": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field",
                    "title": "Developer Agreements"
                }
            },
            "description": "Edge Application Artifact Details",
            "title": "Edge Application detail",
            "required": [
                "appCategory"
            ]
        },
        "DhcpServerConfig": {
            "type": "object",
            "properties": {
                "subnet": {
                    "type": "string",
                    "description": "Subnet address"
                },
                "mask": {
                    "type": "string",
                    "description": "Subnet Mask"
                },
                "gateway": {
                    "type": "string",
                    "description": "IP Address of Network Gateway"
                },
                "domain": {
                    "type": "string",
                    "description": "Network domain"
                },
                "ntp": {
                    "type": "string",
                    "description": "IP Address of NTP Server",
                    "title": "ntp will be deprecated"
                },
                "dns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IP Addresses of DNS servers",
                    "title": "possible DNS ip address"
                },
                "dhcpRange": {
                    "$ref": "#/definitions/dhcpIpRange",
                    "description": "Range of IP addresses to be used for DHCP"
                },
                "ntpServers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NtpServer"
                    },
                    "description": "NTP Servers"
                }
            }
        },
        "DockerRuntimeProtocolVersion": {
            "type": "string",
            "enum": [
                "RuntimeProtocolVersion_Unknown",
                "RuntimeProtocolVersion_V1"
            ],
            "default": "RuntimeProtocolVersion_Unknown"
        },
        "DockerRuntimeVersion": {
            "type": "string",
            "enum": [
                "RuntimeVersion_Unknown",
                "RuntimeVersion_V1"
            ],
            "default": "RuntimeVersion_Unknown"
        },
        "EIDRegister": {
            "type": "object",
            "properties": {
                "AppCert": {
                    "type": "string",
                    "format": "byte",
                    "description": "app certificate"
                },
                "AppPublicKey": {
                    "type": "string",
                    "format": "byte",
                    "description": "App public key"
                },
                "AppPrivateKey": {
                    "type": "string",
                    "format": "byte",
                    "description": "App private key"
                },
                "UUID": {
                    "type": "string",
                    "description": "UUID"
                },
                "DisplayName": {
                    "type": "string",
                    "description": "Display name"
                },
                "LispInstance": {
                    "type": "number",
                    "format": "int64",
                    "description": "Lisp Instance"
                },
                "EID": {
                    "type": "string",
                    "description": "EID"
                },
                "EIDHashLen": {
                    "type": "number",
                    "format": "int64",
                    "description": "EID hash length"
                },
                "LispSignature": {
                    "type": "string",
                    "description": "Lisp Signature"
                },
                "LispMapServers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LispServer"
                    },
                    "description": "Lisp Map Server",
                    "title": "time CreateTime     time.Time"
                }
            },
            "description": "EID Register",
            "title": "EID Register detail",
            "required": [
                "AppCert",
                "AppPublicKey",
                "AppPrivateKey",
                "UUID",
                "DisplayName",
                "LispInstance",
                "EID",
                "EIDHashLen",
                "LispSignature",
                "LispMapServers"
            ]
        },
        "Interface": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Interface name used by the edge application"
                },
                "type": {
                    "type": "string",
                    "description": "Physical Adapter type for this interface. Applicable only when \"direct attach\" flag is true."
                },
                "optional": {
                    "type": "boolean",
                    "description": "Indicates if the interface is optional for edge application."
                },
                "directattach": {
                    "type": "boolean",
                    "description": "If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application."
                },
                "privateip": {
                    "type": "boolean",
                    "description": "If true, DHCP network can't be assigned and user needs to provide a static IP address."
                },
                "acls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Acl"
                    },
                    "description": "Traffic access control rules for this interface. Applicable only when \"direct attach\" flag is false."
                }
            }
        },
        "IoType": {
            "type": "string",
            "enum": [
                "IO_TYPE_UNSPECIFIED",
                "IO_TYPE_ETH",
                "IO_TYPE_USB",
                "IO_TYPE_COM",
                "IO_TYPE_AUDIO",
                "IO_TYPE_WLAN",
                "IO_TYPE_WWAN",
                "IO_TYPE_HDMI",
                "IO_TYPE_LTE",
                "IO_TYPE_STORAGE_NVME_DEVICE",
                "IO_TYPE_STORAGE_SATA_DEVICE",
                "IO_TYPE_ETH_PF",
                "IO_TYPE_ETH_VF",
                "IO_TYPE_USB_CONTROLLER",
                "IO_TYPE_USB_DEVICE",
                "IO_TYPE_CAN",
                "IO_TYPE_VCAN",
                "IO_TYPE_LCAN",
                "IO_TYPE_OTHER"
            ],
            "default": "IO_TYPE_UNSPECIFIED",
            "description": "- IO_TYPE_UNSPECIFIED: No operation/ Invalid peration\n - IO_TYPE_ETH: Ethernet\n - IO_TYPE_USB: USB Type - General\n - IO_TYPE_COM: Communication Port\n - IO_TYPE_AUDIO: Audio Port\n - IO_TYPE_WLAN: wireless LAN\n - IO_TYPE_WWAN: Wireless wide area network\n - IO_TYPE_HDMI: High-Definition Multimedia Interface\n - IO_TYPE_LTE: LTE Interfaces\n - IO_TYPE_STORAGE_NVME_DEVICE: Storage NVME device\n - IO_TYPE_STORAGE_SATA_DEVICE: Storage SATA device\n - IO_TYPE_ETH_PF: Physical Interface (PF) of the Virtual Functions\n - IO_TYPE_ETH_VF: Virtual Function (VF)\n - IO_TYPE_USB_CONTROLLER: USB Type - Controller\n - IO_TYPE_USB_DEVICE: USB Type - Device\n - IO_TYPE_CAN: CAN - Device\n - IO_TYPE_VCAN: VCAN - Virtual CAN device\n - IO_TYPE_LCAN: LCAN - Logical CAN device\n - IO_TYPE_OTHER: Other Io Types",
            "title": "Input/Output Type"
        },
        "LimitParams": {
            "type": "object",
            "properties": {
                "limitrate": {
                    "type": "integer",
                    "format": "int64",
                    "description": "UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane",
                    "title": "Rate limit in ACL rule"
                },
                "limitunit": {
                    "type": "string",
                    "description": "UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane",
                    "title": "Rate limit unit in ACL rule"
                },
                "limitburst": {
                    "type": "integer",
                    "format": "int64",
                    "description": "UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane",
                    "title": "Rate limit burst in ACL rule"
                }
            }
        },
        "LispConfig": {
            "type": "object",
            "properties": {
                "lispiid": {
                    "type": "number",
                    "format": "int64",
                    "description": "lisp id"
                },
                "allocate": {
                    "type": "boolean",
                    "description": "Allocate flag"
                },
                "exportprivate": {
                    "type": "boolean",
                    "description": "Export Private flag"
                },
                "allocationprefix": {
                    "type": "string",
                    "format": "byte",
                    "description": "Allocation Prefix"
                },
                "allocationprefixlen": {
                    "type": "number",
                    "format": "int64",
                    "description": "Allocation Prefix Length"
                },
                "sp": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ServicePoint"
                    },
                    "description": "Service Point List"
                }
            },
            "description": "List Configurations.",
            "title": "Lisp Configurations"
        },
        "LispServer": {
            "type": "object",
            "properties": {
                "nameOrIp": {
                    "type": "string",
                    "description": "name/IP"
                },
                "credential": {
                    "type": "string",
                    "description": "lisp credential"
                }
            },
            "description": "LispServer request paylod",
            "title": "LispServer payload detail",
            "required": [
                "nameOrIp",
                "credential"
            ]
        },
        "MapParams": {
            "type": "object",
            "properties": {
                "appPort": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Application Port value"
                }
            }
        },
        "Match": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Type of Match (Required)",
                    "title": "enum: host, protocol, adapter\nAt the device level it will pick right interface to apply this match"
                },
                "value": {
                    "type": "string",
                    "description": "Value of match (Required)"
                }
            }
        },
        "ModuleDetail": {
            "type": "object",
            "example": {
                "twinDetail": "IHsKICAgICAgIm5hbWUiOiAiU2VuZEludGVydmFsIiwKICAgICAgInZhbHVlIjogIjUiCiAgICB9"
            },
            "properties": {
                "twinDetail": {
                    "type": "string",
                    "description": "Base64 encoded module twin details, desired properties of the module will be updated to reflect these values"
                },
                "routes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Send messages between modules or send messages from modules to iot hub"
                },
                "environment": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Extra information to module to make configuration easier"
                },
                "moduleType": {
                    "$ref": "#/definitions/ModuleType",
                    "description": "Type of modules"
                }
            },
            "description": "Azure module specific details",
            "title": "Module detail"
        },
        "ModuleType": {
            "type": "string",
            "enum": [
                "MODULE_TYPE_UNSPECIFIED",
                "MODULE_TYPE_SYSTEM_DEFINED",
                "MODULE_TYPE_CUSTOM",
                "MODULE_TYPE_AZURE_EDGE_AGENT",
                "MODULE_TYPE_AZURE_EDGE_HUB"
            ],
            "default": "MODULE_TYPE_UNSPECIFIED",
            "description": "module type."
        },
        "NetInstOpaqueConfig": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "$ref": "#/definitions/OpaqueConfigType",
                    "description": "type of Opaque config"
                },
                "oconfig": {
                    "type": "string",
                    "description": "base64 encoded string of opaque config"
                },
                "lisp": {
                    "type": "string",
                    "$ref": "#/definitions/LispConfig",
                    "description": "Deprecated - Lisp config",
                    "title": "lisp - Deprecated"
                }
            },
            "description": "Network Instance Opaque config. This is service specific configuration."
        },
        "NetworkInstanceDhcpType": {
            "type": "string",
            "enum": [
                "NETWORK_INSTANCE_DHCP_TYPE_UNSPECIFIED",
                "NETWORK_INSTANCE_DHCP_TYPE_V4",
                "NETWORK_INSTANCE_DHCP_TYPE_V6",
                "NETWORK_INSTANCE_DHCP_TYPE_CRYPTOEID",
                "NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV4",
                "NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV6"
            ],
            "default": "NETWORK_INSTANCE_DHCP_TYPE_UNSPECIFIED",
            "title": "NetworkInstanceDhcpType: Used in the network instance provide\n   dhcp server configuration"
        },
        "NetworkInstanceKind": {
            "type": "string",
            "enum": [
                "NETWORK_INSTANCE_KIND_UNSPECIFIED",
                "NETWORK_INSTANCE_KIND_TRANSPARENT",
                "NETWORK_INSTANCE_KIND_SWITCH",
                "NETWORK_INSTANCE_KIND_LOCAL",
                "NETWORK_INSTANCE_KIND_CLOUD",
                "NETWORK_INSTANCE_KIND_MESH",
                "NETWORK_INSTANCE_KIND_HONEYPOT"
            ],
            "default": "NETWORK_INSTANCE_KIND_UNSPECIFIED"
        },
        "NtpServer": {
            "type": "object",
            "properties": {
                "server": {
                    "type": "string",
                    "description": "NTP Server IP or FQDN"
                }
            },
            "description": "NTP Server",
            "title": "NTP Server"
        },
        "ObjectType": {
            "type": "string",
            "enum": [
                "OBJECT_TYPE_UNSPECIFIED",
                "OBJECT_TYPE_USER",
                "OBJECT_TYPE_EDGE_NODE",
                "OBJECT_TYPE_EDGE_APP",
                "OBJECT_TYPE_IMAGE",
                "OBJECT_TYPE_EDGE_APP_INSTANCE",
                "OBJECT_TYPE_PROJECT",
                "OBJECT_TYPE_NETWORK",
                "OBJECT_TYPE_DATASTORE",
                "OBJECT_TYPE_SERVICE",
                "OBJECT_TYPE_SERVICE_INSTANCE",
                "OBJECT_TYPE_ENTERPRISE",
                "OBJECT_TYPE_ROLE",
                "OBJECT_TYPE_CREDENTIAL",
                "OBJECT_TYPE_NETWORK_INSTANCE",
                "OBJECT_TYPE_VOLUME_INSTANCE",
                "OBJECT_TYPE_REALM",
                "OBJECT_TYPE_AUTHPROFILE",
                "OBJECT_TYPE_POLICY",
                "OBJECT_TYPE_APP_POLICY",
                "OBJECT_TYPE_CLUSTER_INSTANCE",
                "OBJECT_TYPE_PLUGIN",
                "OBJECT_TYPE_DOC_POLICY",
                "OBJECT_TYPE_ORCHESTRATOR_CLUSTER",
                "OBJECT_TYPE_TAGS",
                "OBJECT_TYPE_EDGE_NODE_INTERFACE",
                "OBJECT_TYPE_DEPLOYMENT",
                "OBJECT_TYPE_ENTITLEMENTS",
                "OBJECT_TYPE_DATA_STREAM",
                "OBJECT_TYPE_API_USAGE",
                "OBJECT_TYPE_APP_INSTANCE_SNAPSHOT",
                "OBJECT_TYPE_PATCH_ENVELOPE",
                "OBJECT_TYPE_RESOURCE_USAGE_TRACK",
                "OBJECT_TYPE_PATCH_ENVELOPE_REFERENCE",
                "OBJECT_TYPE_DEV_PASSTHROUGH",
                "OBJECT_TYPE_EDGE_NODE_CLUSTER",
                "OBJECT_TYPE_ASSET_GROUP",
                "OBJECT_TYPE_APP_PROFILE",
                "OBJECT_TYPE_PROFILE_DEPLOYMENT"
            ],
            "default": "OBJECT_TYPE_UNSPECIFIED"
        },
        "OpaqueConfigType": {
            "type": "string",
            "enum": [
                "OPAQUE_CONFIG_TYPE_UNSPECIFIED",
                "OPAQUE_CONFIG_TYPE_VPN",
                "OPAQUE_CONFIG_TYPE_LISP"
            ],
            "default": "OPAQUE_CONFIG_TYPE_UNSPECIFIED"
        },
        "Param": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the Parameter (Required)"
                },
                "value": {
                    "type": "string",
                    "description": "Value of the parameter (Required)"
                }
            }
        },
        "Permission": {
            "type": "object"
        },
        "ProbeConfig": {
            "type": "object",
            "properties": {
                "enableGatewayPing": {
                    "type": "boolean",
                    "description": "Enable gateway ping"
                },
                "pingMaxCost": {
                    "type": "number",
                    "format": "int64",
                    "description": "Ping max cost"
                },
                "preferLowerCost": {
                    "type": "boolean",
                    "description": "Prefer lower cost"
                },
                "preferStrongerWwanSignal": {
                    "type": "boolean",
                    "description": "Prefer stronger WWAN signal"
                },
                "customProbeConfig": {
                    "type": "object",
                    "$ref": "#/definitions/configConnectivityProbe",
                    "description": "Custom probe configuration"
                }
            },
            "description": "Probing configuration",
            "title": "Probing configuration"
        },
        "ProfileAppConfig": {
            "type": "object",
            "properties": {
                "networks": {
                    "type": "integer",
                    "format": "int64",
                    "description": "user defined network options"
                },
                "drives": {
                    "type": "integer",
                    "format": "int64",
                    "description": "user defined drives",
                    "readOnly": true
                },
                "cpus": {
                    "type": "integer",
                    "format": "int64",
                    "description": "user defined cpus for bundle"
                },
                "memory": {
                    "type": "integer",
                    "format": "int64",
                    "description": "user defined memory for bundle"
                },
                "manifestJSON": {
                    "$ref": "#/definitions/VMManifest",
                    "description": "user defined manifest in JSON format"
                },
                "storage": {
                    "type": "integer",
                    "format": "int64",
                    "description": "user defined storage for bundle"
                },
                "nameProjectPart": {
                    "type": "string",
                    "description": "User provided name part  for the auto deployed app"
                },
                "nameAppPart": {
                    "type": "string",
                    "description": "User provided name part  for the auto deployed app"
                },
                "interfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appInterface"
                    },
                    "description": "application interfaces"
                },
                "startDelayInSeconds": {
                    "type": "integer",
                    "format": "int64",
                    "description": "start delay is the time in seconds EVE should wait after boot before starting the application instance"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.",
                    "maxLength": 32,
                    "pattern": "^[^<%&?/\\>]+$"
                },
                "logs": {
                    "$ref": "#/definitions/AppInstanceLogs",
                    "description": "App Instance logs"
                },
                "vminfo": {
                    "$ref": "#/definitions/vm",
                    "description": "virtual machine info"
                },
                "remoteConsole": {
                    "type": "boolean",
                    "description": "Remote console flag"
                },
                "newBundleVersionAvailable": {
                    "type": "boolean",
                    "description": "this flag denotes whether there is latest bundle available in the marketplace or not"
                },
                "bundleVersion": {
                    "type": "integer",
                    "format": "int64",
                    "description": "current bundle version"
                },
                "netInstTags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.",
                    "maxLength": 32,
                    "pattern": "^[^<%&?/\\>]+$"
                },
                "netInstName": {
                    "type": "string",
                    "description": "network instance name"
                }
            },
            "description": "Edge application gets installed/uninstalled to/from edge node(s) and perform specific edge computing tasks. Lifecycle of Edge application (upgrade/restart) on Edge node can be managed and monitored by ZEDEDA Cloud controller through this detailed configuration.",
            "title": "Edge application detailed configuration"
        },
        "ProfileAppPolicy": {
            "type": "object",
            "properties": {
                "metaData": {
                    "$ref": "#/definitions/ProfilePolicyCommon",
                    "description": "all the required metadata for a policy like id, name, different types of tags"
                },
                "appConfig": {
                    "$ref": "#/definitions/ProfileAppConfig",
                    "description": "app config for app profile"
                }
            }
        },
        "ProfileDeployment": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique Id of the deployment.",
                    "readOnly": true,
                    "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                    "uniqueItems": true
                },
                "name": {
                    "type": "string",
                    "description": "User defined name of the deployment, unique across the enterprise. Once deployment is created, name can\u2019t be changed.",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                    "uniqueItems": true
                },
                "title": {
                    "type": "string",
                    "description": "User defined title of the deployment. Title can be changed at any time.",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9]+[a-zA-Z0-9!-~ ]+"
                },
                "description": {
                    "type": "string",
                    "description": "Detailed description of the deployment.",
                    "maxLength": 256
                },
                "projectId": {
                    "type": "string",
                    "description": "project id"
                },
                "appProfileInfo": {
                    "$ref": "#/definitions/AppProfileInfo",
                    "description": "app profile id"
                },
                "targetAssetGroup": {
                    "$ref": "#/definitions/TargetAssetGroup",
                    "description": "asset group info"
                },
                "status": {
                    "type": "string"
                }
            },
            "description": "Profile Deployment is a proto that should be used by user-agents to create/update deployments",
            "title": "Deployments for Application profile",
            "required": [
                "name",
                "appProfileInfo",
                "projectId",
                "targetAssetGroup"
            ]
        },
        "ProfileDeploymentFilter": {
            "type": "object",
            "properties": {
                "profileDeploymentId": {
                    "type": "string",
                    "description": "Unique id of the asset, unique across the enterprise.",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                    "uniqueItems": true
                },
                "namePattern": {
                    "type": "string",
                    "description": "deployment name pattern"
                }
            }
        },
        "ProfileDeploymentList": {
            "type": "object",
            "properties": {
                "next": {
                    "$ref": "#/definitions/Cursor",
                    "description": "cursor next"
                },
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProfileDeployment"
                    },
                    "description": "deployment summary list"
                }
            }
        },
        "ProfileDeploymentResourceDetailedStatus": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique Id of the deployment.",
                    "readOnly": true,
                    "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                    "uniqueItems": true
                },
                "name": {
                    "type": "string",
                    "description": "User defined name of the deployment, unique across the enterprise. Once deployment is created, name can\u2019t be changed.",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                    "uniqueItems": true
                },
                "title": {
                    "type": "string",
                    "description": "User defined title of the deployment. Title can be changed at any time.",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9]+[a-zA-Z0-9!-~ ]+"
                },
                "description": {
                    "type": "string",
                    "description": "Detailed description of the deployment.",
                    "maxLength": 256
                },
                "projectId": {
                    "type": "string",
                    "description": "project id"
                },
                "appProfileInfo": {
                    "type": "object",
                    "$ref": "#/definitions/AppProfileInfo",
                    "description": "app profile id"
                },
                "targetAssetGroup": {
                    "type": "object",
                    "$ref": "#/definitions/TargetAssetGroup",
                    "description": "asset group info"
                },
                "objectStatus": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProfileDeploymentResourceObjectStatus"
                    },
                    "description": "list of status of objects created by deployment"
                }
            }
        },
        "ProfileDeploymentResourceDetailedStatusResp": {
            "type": "object",
            "properties": {
                "resourceStatus": {
                    "$ref": "#/definitions/ProfileDeploymentResourceDetailedStatus",
                    "description": "List of status of deployment resources"
                },
                "next": {
                    "$ref": "#/definitions/Cursor",
                    "description": "Requested page details of filtered records"
                }
            }
        },
        "ProfileDeploymentResourceObjectStatus": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique ID of the object.",
                    "readOnly": true,
                    "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                    "uniqueItems": true
                },
                "objectType": {
                    "$ref": "#/definitions/ObjectType",
                    "description": "object type"
                },
                "objectRunState": {
                    "$ref": "#/definitions/RunState",
                    "description": "object run state"
                }
            }
        },
        "ProfileNetworkConfig": {
            "type": "object",
            "properties": {
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.",
                    "maxLength": 32,
                    "pattern": "^[^<%&?/\\>]+$"
                },
                "port": {
                    "type": "string",
                    "description": "name of port mapping in the model",
                    "title": "name of port mapping in the model"
                },
                "portTags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.",
                    "maxLength": 32,
                    "pattern": "^[^<%&?/\\>]+$"
                },
                "kind": {
                    "$ref": "#/definitions/NetworkInstanceKind",
                    "description": "Kind of Network Instance ( Local, Switch etc )"
                },
                "type": {
                    "$ref": "#/definitions/NetworkInstanceDhcpType",
                    "description": "Type of DHCP for this Network Instance"
                },
                "ip": {
                    "$ref": "#/definitions/DhcpServerConfig",
                    "description": "Dhcp Server Configuration"
                },
                "dnsList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StaticDNSList"
                    },
                    "description": "List of Static DNS entries"
                },
                "opaque": {
                    "$ref": "#/definitions/NetInstOpaqueConfig",
                    "description": "Service specific Config"
                },
                "deviceDefault": {
                    "type": "boolean",
                    "description": "flag to indicate if this is the default network instance for the device",
                    "title": "flag to indicate if this is default network"
                },
                "propagateConnectedRoutes": {
                    "type": "boolean",
                    "description": "Automatically propagate connected routes",
                    "title": "flag to indicate automatically propagate connected routes"
                },
                "staticRoutes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StaticIPRoute"
                    },
                    "description": "List of Static IP routes",
                    "title": "list of static IP routes"
                }
            }
        },
        "ProfileNetworkPolicy": {
            "type": "object",
            "properties": {
                "metaData": {
                    "$ref": "#/definitions/ProfilePolicyCommon",
                    "description": "all the required metadata for a policy like id, name, different types of tags"
                },
                "networkConfig": {
                    "$ref": "#/definitions/ProfileNetworkConfig",
                    "description": "network instance config details"
                }
            }
        },
        "ProfilePolicyCommon": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique id for an policy"
                },
                "name": {
                    "type": "string",
                    "description": "user defined policy name"
                },
                "title": {
                    "type": "string",
                    "description": "user defined policy title"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "user defined key-value pairs of a policy"
                }
            }
        },
        "ProfileVolumeConfig": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "$ref": "#/definitions/VolumeInstanceType",
                    "description": "type of Volume Instance"
                },
                "multiattach": {
                    "type": "boolean",
                    "description": "flag to enable the volume to be attached to multiple app instances"
                },
                "cleartext": {
                    "type": "boolean",
                    "description": "flag to keep the contents of the volume unencrypted (in clear text)"
                },
                "accessmode": {
                    "type": "string",
                    "$ref": "#/definitions/VolumeInstanceAccessMode",
                    "description": "Access mode"
                },
                "sizeBytes": {
                    "type": "integer",
                    "format": "uint64",
                    "description": "size of volume"
                },
                "image": {
                    "type": "string",
                    "description": "name of the image"
                },
                "contentTreeId": {
                    "type": "string",
                    "description": "content tree ID"
                },
                "label": {
                    "type": "string",
                    "description": "label"
                },
                "purge": {
                    "$ref": "#/definitions/ZedCloudOpsCmd",
                    "description": "Purge Counter information"
                },
                "contentTreeTargetCondition": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "user defined key-value pairs of a content tree that will be used for targeting by block storage"
                },
                "blockStorageTags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "user defined key-value pairs of a block storage, will be used for targeting content tree"
                }
            }
        },
        "ProfileVolumePolicy": {
            "type": "object",
            "properties": {
                "metaData": {
                    "$ref": "#/definitions/ProfilePolicyCommon",
                    "description": "all the required metadata for a policy like id, name, different types of tags"
                },
                "volumeConfig": {
                    "$ref": "#/definitions/ProfileVolumeConfig",
                    "description": "volume instance config details"
                }
            }
        },
        "Resource": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the Resource (Required)"
                },
                "value": {
                    "type": "string",
                    "description": "Value of Resource (Required)"
                }
            }
        },
        "RunState": {
            "type": "string",
            "enum": [
                "RUN_STATE_UNSPECIFIED",
                "RUN_STATE_ONLINE",
                "RUN_STATE_HALTED",
                "RUN_STATE_INIT",
                "RUN_STATE_REBOOTING",
                "RUN_STATE_OFFLINE",
                "RUN_STATE_UNKNOWN",
                "RUN_STATE_UNPROVISIONED",
                "RUN_STATE_PROVISIONED",
                "RUN_STATE_SUSPECT",
                "RUN_STATE_DOWNLOADING",
                "RUN_STATE_RESTARTING",
                "RUN_STATE_PURGING",
                "RUN_STATE_HALTING",
                "RUN_STATE_ERROR",
                "RUN_STATE_VERIFYING",
                "RUN_STATE_LOADING",
                "RUN_STATE_CREATING_VOLUME",
                "RUN_STATE_BOOTING",
                "RUN_STATE_MAINTENANCE_MODE",
                "RUN_STATE_START_DELAYED",
                "RUN_STATE_BASEOS_UPDATING",
                "RUN_STATE_PREPARING_POWEROFF",
                "RUN_STATE_POWERING_OFF",
                "RUN_STATE_PREPARED_POWEROFF"
            ],
            "default": "RUN_STATE_UNSPECIFIED",
            "description": "- RUN_STATE_ONLINE: Entity Online\n - RUN_STATE_HALTED: Entity Halted\n - RUN_STATE_INIT: Entity Initializing\n - RUN_STATE_REBOOTING: Entity Rebooting\n - RUN_STATE_OFFLINE: Entity Offline\n - RUN_STATE_UNKNOWN: Entity state Unknown\n - RUN_STATE_UNPROVISIONED: Entity Unprovisioned\n - RUN_STATE_PROVISIONED: Entity Provisioned\n - RUN_STATE_SUSPECT: Entity Suspect\n - RUN_STATE_DOWNLOADING: Edge-node downloading entity artifacts\n - RUN_STATE_RESTARTING: Entity Restarting\n - RUN_STATE_PURGING: Entity Purging\n - RUN_STATE_HALTING: Entity Halting\n - RUN_STATE_ERROR: Entity encountered an error\n - RUN_STATE_VERIFYING: Verification of downloaded Artifacts in Progress.\n - RUN_STATE_LOADING: Loading of Artifacts into local datastore in Progress.\n - RUN_STATE_CREATING_VOLUME: Volume creation from artifacts in Progress\n - RUN_STATE_BOOTING: Entity booting up\n - RUN_STATE_MAINTENANCE_MODE: Entity maintenance mode\n - RUN_STATE_START_DELAYED: Application start delayed as per configuration\n - RUN_STATE_BASEOS_UPDATING: Device BaseOs Update in Progress\n - RUN_STATE_PREPARING_POWEROFF: device preparing power off - shutting down all app instances\n - RUN_STATE_POWERING_OFF: device powering off from local profile server\n - RUN_STATE_PREPARED_POWEROFF: device prepared power off - all app instances are shut down",
            "title": "RunState - On update, please update RunState_HttpRequest as well"
        },
        "ServicePoint": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "object",
                    "$ref": "#/definitions/spType",
                    "description": "Service Point Type"
                },
                "NameOrIp": {
                    "type": "string",
                    "description": "Service name/ service name"
                },
                "Credential": {
                    "type": "string",
                    "description": "Service credentials"
                }
            },
            "description": "Service Point",
            "title": "Service Point"
        },
        "StaticDNSList": {
            "type": "object",
            "properties": {
                "hostname": {
                    "type": "string",
                    "description": "Host name"
                },
                "addrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Addresses"
                }
            },
            "description": "Static DNS list",
            "title": "Static DNS list"
        },
        "StaticIPRoute": {
            "type": "object",
            "properties": {
                "prefix": {
                    "type": "string",
                    "description": "IP Prefix"
                },
                "gateway": {
                    "type": "string",
                    "description": "Gateway IP"
                },
                "outputPort": {
                    "type": "string",
                    "description": "Output Port"
                },
                "probeConfig": {
                    "type": "object",
                    "$ref": "#/definitions/ProbeConfig",
                    "description": "Probe Configuration"
                }
            },
            "description": "Static IP Routes",
            "title": "Static IP Routes"
        },
        "Summary": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Summary description"
                },
                "total": {
                    "type": "number",
                    "format": "int64",
                    "description": "Total"
                },
                "values": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": "Values: Map for storing <string, uint32>"
                }
            },
            "description": "Summary is used to store the Summary details",
            "title": "Summary is used to store the Summary details"
        },
        "TargetAssetGroup": {
            "type": "object",
            "properties": {
                "groupId": {
                    "type": "string",
                    "description": "unique Id of the asset group.",
                    "readOnly": true,
                    "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
                    "uniqueItems": true
                }
            }
        },
        "UserDataTemplate": {
            "type": "object",
            "properties": {
                "customConfig": {
                    "$ref": "#/definitions/CustomConfig"
                }
            }
        },
        "VMManifest": {
            "type": "object",
            "properties": {
                "acKind": {
                    "type": "string",
                    "default": "VMManifest",
                    "description": "UI map: N/A - not exposed to users",
                    "title": "Edge Application type"
                },
                "acVersion": {
                    "type": "string",
                    "default": "1.2.0",
                    "description": "UI map: N/A - not exposed to users",
                    "title": "Manifest version"
                },
                "name": {
                    "type": "string",
                    "description": "UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field",
                    "title": "Unique id of app manifest, should match object name"
                },
                "displayName": {
                    "type": "string",
                    "description": "UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field",
                    "title": "Display name or title of app manifest"
                },
                "description": {
                    "type": "string",
                    "description": "UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField",
                    "title": "Description of the Edge application",
                    "pattern": "[0-9A-Za-z-]+"
                },
                "owner": {
                    "$ref": "#/definitions/Author",
                    "description": "Owner of the application"
                },
                "desc": {
                    "$ref": "#/definitions/Details",
                    "description": "Description of the application"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VMManifestImage"
                    },
                    "description": "UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane",
                    "title": "Images used by the app"
                },
                "interfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Interface"
                    },
                    "description": "UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane",
                    "title": "I/O adapter settings"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Permission"
                    }
                },
                "vmmode": {
                    "type": "string",
                    "default": "HV_HVM",
                    "description": "UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field",
                    "title": "VM mode for VM-based app"
                },
                "enablevnc": {
                    "type": "boolean",
                    "description": "UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field",
                    "title": "Enable VNC for the app"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Resource"
                    },
                    "description": "UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane",
                    "title": "Hardware resource requirement (CPU, Memory, Storage) for the app"
                },
                "configuration": {
                    "$ref": "#/definitions/UserDataTemplate",
                    "description": "Template for Custom Configuration. Used for Cloud-Init",
                    "title": "Annotations   types.Annotations    `json:\"Annotations,omitempty\"`\nLabels        types.Labels         `json:\"Labels,omitempty\"`"
                },
                "containerDetail": {
                    "$ref": "#/definitions/ContainerDetail",
                    "description": "Create options direct the creation of the Docker container",
                    "title": "Container specific details"
                },
                "module": {
                    "$ref": "#/definitions/ModuleDetail",
                    "description": "Azure module specific details like module twin, environment variable, routes",
                    "title": "Module specific details"
                },
                "appType": {
                    "$ref": "#/definitions/AppType",
                    "description": "bundle type, eg: vm, container, module"
                },
                "deploymentType": {
                    "$ref": "#/definitions/DeploymentType",
                    "description": "type of deployment for the app, eg: azure, k3s, standalone"
                },
                "cpuPinningEnabled": {
                    "type": "boolean",
                    "description": "Enable CpuPinning"
                },
                "runtimeVersion": {
                    "$ref": "#/definitions/DockerRuntimeVersion",
                    "description": "Indicates the version of container orchestration software",
                    "title": "docker-compose runtime specific versions"
                },
                "runtimeProtocolVersion": {
                    "$ref": "#/definitions/DockerRuntimeProtocolVersion",
                    "description": "Indicates the internal communication protocol to pass configuration between Zedcloud and docker-compose runtime"
                },
                "PersistentRuntimeSizeBytes": {
                    "type": "string",
                    "format": "uint64",
                    "description": "Size of persistent blank storage for runtime in bytes"
                },
                "dockerComposeYamlText": {
                    "type": "string",
                    "description": "Docker compose base64 encoded plain text"
                },
                "dockerComposeTarImageName": {
                    "type": "string",
                    "description": "Docker compose tar image name"
                },
                "enableVmConfig": {
                    "type": "boolean",
                    "description": "UI map: AppEditPage:IdentityPane:ENABLEVMCONFIG_Field, AppDetailsPage:IdentityPane:ENABLEVMCONFIG_Field",
                    "title": "Enable device to read the license info from APCI tables"
                }
            }
        },
        "VMManifestImage": {
            "type": "object",
            "properties": {
                "imagename": {
                    "type": "string",
                    "description": "UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field"
                },
                "imageid": {
                    "type": "string",
                    "description": "UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field"
                },
                "imageformat": {
                    "$ref": "#/definitions/configFormat",
                    "description": "UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field"
                },
                "maxsize": {
                    "type": "string",
                    "format": "uint64",
                    "description": "UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field"
                },
                "preserve": {
                    "type": "boolean",
                    "description": "UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field"
                },
                "target": {
                    "type": "string",
                    "description": "UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field",
                    "title": "enum: Disk, Kernel, Initrd, RamDisk"
                },
                "drvtype": {
                    "type": "string",
                    "description": "UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field",
                    "title": "enum: CDROM, HDD, NET"
                },
                "params": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Param"
                    },
                    "title": "Not used by ZedUI"
                },
                "readonly": {
                    "type": "boolean",
                    "title": "Not used by ZedUI"
                },
                "volumelabel": {
                    "type": "string",
                    "description": "UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label"
                },
                "ignorepurge": {
                    "type": "boolean",
                    "description": "UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field"
                },
                "cleartext": {
                    "type": "boolean",
                    "description": "UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field"
                },
                "mountpath": {
                    "type": "string",
                    "description": "UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field"
                }
            }
        },
        "VariableFileEncoding": {
            "type": "string",
            "enum": [
                "FILE_ENCODING_UNSPECIFIED",
                "FILE_ENCODING_BASE64"
            ],
            "default": "FILE_ENCODING_UNSPECIFIED",
            "description": "- FILE_ENCODING_UNSPECIFIED: File content not encoded\n - FILE_ENCODING_BASE64: File content encoded in Base64",
            "title": "File content encoding type"
        },
        "VariableGroupCondition": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "operator": {
                    "$ref": "#/definitions/VariableGroupConditionOperator"
                }
            }
        },
        "VariableGroupConditionOperator": {
            "type": "string",
            "enum": [
                "CONDITION_OPERATOR_UNSPECIFIED",
                "CONDITION_OPERATOR_EQUALTO",
                "CONDITION_OPERATOR_NOTEQUALTO"
            ],
            "default": "CONDITION_OPERATOR_UNSPECIFIED"
        },
        "VariableGroupVariable": {
            "type": "object",
            "example": {
                "format": "VARIABLE_FORMAT_TEXT",
                "name": "username",
                "label": "Enter User Name",
                "required": "True"
            },
            "properties": {
                "type": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Variable (Required)"
                },
                "label": {
                    "type": "string",
                    "description": "Label for the variable (Required)"
                },
                "maxLength": {
                    "type": "string",
                    "description": "Max length of the value of the variable(Optional. Default: 1024)"
                },
                "required": {
                    "type": "boolean",
                    "description": "This variable MUST be specified when creating an App Instance. (Optional. Default: False)"
                },
                "default": {
                    "type": "string",
                    "description": "Default value of the variable. (Optional. Default: <Default value based on type>)"
                },
                "processInput": {
                    "type": "string"
                },
                "value": {
                    "type": "string",
                    "description": "User-specified value of the variable.(Required if required is true. Optional otherwise)"
                },
                "format": {
                    "$ref": "#/definitions/VariableVariableFormat",
                    "description": "Format of the user variable. (Required)"
                },
                "encode": {
                    "$ref": "#/definitions/VariableFileEncoding",
                    "description": "Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VariableOptionVal"
                    },
                    "description": "Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN"
                }
            },
            "description": "Edge Application Artifact Details",
            "title": "Edge Application detail",
            "required": [
                "format",
                "name",
                "label",
                "required"
            ]
        },
        "VariableOptionVal": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Display label of the key in User-Agent"
                },
                "value": {
                    "type": "string",
                    "description": "Value of the key to be used"
                }
            }
        },
        "VariableVariableFormat": {
            "type": "string",
            "enum": [
                "VARIABLE_FORMAT_UNSPECIFIED",
                "VARIABLE_FORMAT_TEXT",
                "VARIABLE_FORMAT_NUMBER",
                "VARIABLE_FORMAT_FILE",
                "VARIABLE_FORMAT_DROPDOWN",
                "VARIABLE_FORMAT_BOOLEAN",
                "VARIABLE_FORMAT_PASSWORD"
            ],
            "default": "VARIABLE_FORMAT_UNSPECIFIED",
            "description": "- VARIABLE_FORMAT_UNSPECIFIED: Invalid format\n - VARIABLE_FORMAT_TEXT: Value in string format\n - VARIABLE_FORMAT_NUMBER: Value in integer format\n - VARIABLE_FORMAT_FILE: Value to be read from a file\n - VARIABLE_FORMAT_DROPDOWN: Value to be selected from dropdown of options\n - VARIABLE_FORMAT_BOOLEAN: Value in boolean format\n - VARIABLE_FORMAT_PASSWORD: Value in string to be masked in User-Agent",
            "title": "Custom variable format"
        },
        "VmBootloaderMode": {
            "type": "string",
            "enum": [
                "VM_BOOTLOADER_MODE_UNSPECIFIED",
                "VM_BOOTLOADER_MODE_LEGACY",
                "VM_BOOTLOADER_MODE_UEFI"
            ],
            "default": "VM_BOOTLOADER_MODE_UNSPECIFIED",
            "title": "VmBootloaderMode is used to specify the bootloader mode that will be used for the VM.\nIt represents the boot mechanism to be used to boot the VM"
        },
        "VolumeInstanceAccessMode": {
            "type": "string",
            "enum": [
                "VOLUME_INSTANCE_ACCESS_MODE_INVALID",
                "VOLUME_INSTANCE_ACCESS_MODE_READWRITE",
                "VOLUME_INSTANCE_ACCESS_MODE_READONLY",
                "VOLUME_INSTANCE_ACCESS_MODE_MULTIREAD_SINGLEWRITE"
            ],
            "default": "VOLUME_INSTANCE_ACCESS_MODE_INVALID"
        },
        "VolumeInstanceType": {
            "type": "string",
            "enum": [
                "VOLUME_INSTANCE_TYPE_UNSPECIFIED",
                "VOLUME_INSTANCE_TYPE_EMPTYDIR",
                "VOLUME_INSTANCE_TYPE_BLOCKSTORAGE",
                "VOLUME_INSTANCE_TYPE_HOSTFS",
                "VOLUME_INSTANCE_TYPE_TMPFS",
                "VOLUME_INSTANCE_TYPE_SECRET",
                "VOLUME_INSTANCE_TYPE_NFS",
                "VOLUME_INSTANCE_TYPE_AWS_BLOCK_STORAGE",
                "VOLUME_INSTANCE_TYPE_CONTENT_TREE"
            ],
            "default": "VOLUME_INSTANCE_TYPE_UNSPECIFIED",
            "title": "VolumeInstanceType - On update, please update VolumeInstanceType_HttpRequest as well"
        },
        "ZcOpsStatus": {
            "type": "string",
            "enum": [
                "OPS_STATUS_UNSPECIFIED",
                "OPS_STATUS_PENDING",
                "OPS_STATUS_ONGOING",
                "OPS_STATUS_COMPLETE"
            ],
            "default": "OPS_STATUS_UNSPECIFIED",
            "description": "- OPS_STATUS_PENDING: In rare cases, system may not start operation when it was requested. Client will be notified that operation is PENDING\n - OPS_STATUS_ONGOING: system will start the operation, but at the time response was generated, operation is still ONGOING.\n - OPS_STATUS_COMPLETE: Even if the result of the operations may result in failure, but the OpsStatus will marked COMPLETE for almost all cases.",
            "title": "ZedCloud internal operation status"
        },
        "ZcOpsType": {
            "type": "string",
            "enum": [
                "OPS_TYPE_UNSPECIFIED",
                "OPS_TYPE_READ",
                "OPS_TYPE_DELETE",
                "OPS_TYPE_CREATE",
                "OPS_TYPE_UPDATE",
                "OPS_TYPE_LIST"
            ],
            "default": "OPS_TYPE_UNSPECIFIED",
            "title": "ZedCloud internal operation type"
        },
        "ZedCloudOpsCmd": {
            "type": "object",
            "properties": {
                "counter": {
                    "type": "number",
                    "format": "int64",
                    "description": "counter"
                },
                "opsTime": {
                    "type": "object",
                    "format": "date-time",
                    "description": "Timestamp: Operational time"
                }
            },
            "description": "Zed cloud Operation command",
            "title": "Zed cloud Operation command"
        },
        "ZsrvError": {
            "type": "object",
            "properties": {
                "ec": {
                    "$ref": "#/definitions/ZsrvErrorCode",
                    "title": "Enumrated error code, describes more granular numerical\nvalue than just httpStatus"
                },
                "location": {
                    "type": "string",
                    "title": "Ignore: Internal field only"
                },
                "details": {
                    "type": "string",
                    "title": "Field captures string description of details"
                }
            }
        },
        "ZsrvErrorCode": {
            "type": "string",
            "enum": [
                "zMsgErrorNone",
                "zMsgSucess",
                "NotFound",
                "AlreadyExists",
                "VersionMismatch",
                "RangeError",
                "LargeResult",
                "IncompleteData",
                "InvalidData",
                "FunctionUnsupported",
                "NoMemory",
                "SendFailure",
                "Timeout",
                "BadReqBody",
                "BadReqParam",
                "InvalidFieldFormat",
                "UrlNotFound",
                "ApiVersionNotSupported",
                "Unauthorized",
                "Forbidden",
                "Conflict",
                "NotModified",
                "DependencyConflict",
                "JsonFmtError",
                "ProtoFmtError",
                "CertError",
                "DataBaseConnection",
                "DBError",
                "zMsgAccepted",
                "zMsgCreated",
                "PreConditionFailed",
                "InternalServerError"
            ],
            "default": "zMsgErrorNone",
            "description": "- zMsgErrorNone: common validation errors\n - IncompleteData: message had fields that weren't filled in\n - InvalidData: message contained the field that wasn't expected\n - FunctionUnsupported: this feature unavailable on this version of device\n - InvalidFieldFormat: message contained the field that wasn't correctly formatted\n - JsonFmtError: Marshal / Unmarshal errors\n - DataBaseConnection: generic DB error",
            "title": "ZedCould internal error code"
        },
        "ZsrvResponse": {
            "type": "object",
            "properties": {
                "operationType": {
                    "$ref": "#/definitions/ZcOpsType",
                    "title": "Describes one of the operations type : possible values\n                        Read/Delete/Create/Update/List"
                },
                "operationStatus": {
                    "$ref": "#/definitions/ZcOpsStatus",
                    "title": "if this is log running job"
                },
                "objectKind": {
                    "type": "string",
                    "title": "zedcloud object kind on which the operation was performed"
                },
                "objectId": {
                    "type": "string",
                    "title": "Unique value identifies the object that was operated on"
                },
                "objectName": {
                    "type": "string",
                    "title": "name of the object"
                },
                "objectRevision": {
                    "type": "string",
                    "title": "object revision post the operation, note Read operation\ndoesn't change the revision"
                },
                "objectType": {
                    "$ref": "#/definitions/ObjectType"
                },
                "operationTime": {
                    "type": "string",
                    "title": "time of operation"
                },
                "startTime": {
                    "type": "string",
                    "title": "total time taken by operations"
                },
                "endTime": {
                    "type": "string"
                },
                "user": {
                    "type": "string",
                    "title": "the operation is performed on behalf of this user"
                },
                "httpStatusCode": {
                    "type": "integer",
                    "format": "int32",
                    "title": "http response"
                },
                "httpStatusMsg": {
                    "type": "string",
                    "title": "summary of the error in text format"
                },
                "jobId": {
                    "type": "string",
                    "title": "for tracking asynchronous tasks"
                },
                "error": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ZsrvError"
                    },
                    "title": "one or more errors will be set if the operation failed\ni.e. httpStatusCode != 2xx"
                }
            }
        },
        "appACE": {
            "type": "object",
            "properties": {
                "matches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appACEMatch"
                    },
                    "description": "app ACE match"
                },
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appACEAction"
                    },
                    "description": "app ACE actions"
                },
                "id": {
                    "type": "number",
                    "format": "int32",
                    "description": "app ACE id"
                },
                "name": {
                    "type": "string",
                    "description": "User defined name of the app ACE, unique across the enterprise. Once object is created, name can\u2019t be changed",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                    "uniqueItems": true
                }
            },
            "description": "App ACE Configuration",
            "title": "App ACE detaisn",
            "required": [
                "matches",
                "actions",
                "id",
                "name"
            ]
        },
        "appACEAction": {
            "type": "object",
            "properties": {
                "drop": {
                    "type": "boolean",
                    "description": "ACE drop flag"
                },
                "limit": {
                    "type": "boolean",
                    "description": "ACE limit flag"
                },
                "limitrate": {
                    "type": "number",
                    "format": "int64",
                    "description": "ACE limit rate"
                },
                "limitunit": {
                    "type": "string",
                    "description": "ACE limit unit"
                },
                "limitburst": {
                    "type": "number",
                    "format": "int64",
                    "description": "ACE limit burst"
                },
                "portmap": {
                    "type": "boolean",
                    "description": "application port map flag"
                },
                "mapparams": {
                    "$ref": "#/definitions/appMapParams",
                    "description": "Application map params"
                }
            },
            "description": "App ACE actions",
            "title": "App ACE Action",
            "required": [
                "drop",
                "limit",
                "limitrate",
                "limitunit",
                "limitburst",
                "portmap",
                "mapparams"
            ]
        },
        "appACEMatch": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Type"
                },
                "value": {
                    "type": "string",
                    "description": "Value"
                }
            },
            "description": "App ACE Match",
            "title": "appACEMatch detail",
            "required": [
                "type",
                "value"
            ]
        },
        "appInterface": {
            "type": "object",
            "properties": {
                "netname": {
                    "type": "string",
                    "description": "network name: will be deprecated in future, use netinstname"
                },
                "io": {
                    "$ref": "#/definitions/phyAdapter",
                    "description": "Physical Adapter to be matched for interface assignment. Applicable only when \"direct attach\" flag is true"
                },
                "intforder": {
                    "type": "number",
                    "format": "int64",
                    "description": "intforder"
                },
                "intfname": {
                    "type": "string",
                    "description": "intf Name"
                },
                "directattach": {
                    "type": "boolean",
                    "description": "direct attach flag",
                    "title": "comes from manifest during app create"
                },
                "privateip": {
                    "type": "string",
                    "description": "Private IP flag"
                },
                "acls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appACE"
                    },
                    "description": "app Acls"
                },
                "ipaddr": {
                    "type": "string",
                    "description": "IP address",
                    "title": "if netname points static DHCP then we need to take\nstatic /32 address here"
                },
                "macaddr": {
                    "type": "string",
                    "description": "MAC address",
                    "title": "in case of p2v we might want to provide a mac-address.\napplicable only in case of DHCP=passthrough"
                },
                "accessVlanId": {
                    "type": "number",
                    "format": "int64",
                    "description": "access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges",
                    "maximum": 4093,
                    "minimum": 2
                },
                "eidregister": {
                    "$ref": "#/definitions/EIDRegister",
                    "description": "EID register details",
                    "title": "FIXME: Check why is this required"
                },
                "netinstname": {
                    "type": "string",
                    "description": "Network Instance name to be matched for interface assignment. Applicable only when \"direct attach\" flag is false"
                },
                "netinsttag": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Network Instance tag to be matched for interface assignment. Applicable only when \"direct attach\" flag is false"
                },
                "netinstid": {
                    "type": "string",
                    "description": "Network Instance id to be matched for interface assignment."
                },
                "defaultNetInstance": {
                    "type": "boolean",
                    "description": "default instance flag"
                },
                "allowToDiscover": {
                    "type": "boolean",
                    "description": "flag tells if appInstance have permission to access the network mappings from the connected netInstance"
                }
            },
            "description": "App Interface detail",
            "title": "App Interface detail",
            "required": [
                "intfname"
            ]
        },
        "appMapParams": {
            "type": "object",
            "properties": {
                "port": {
                    "type": "number",
                    "format": "int64",
                    "description": "Application port"
                }
            },
            "description": "Application map parameters",
            "title": "App map Params detail",
            "required": [
                "port"
            ]
        },
        "configConnectivityProbe": {
            "type": "object",
            "properties": {
                "probeMethod": {
                    "$ref": "#/definitions/configConnectivityProbeMethod",
                    "description": "Method to use to determine the connectivity status."
                },
                "probeEndpoint": {
                    "$ref": "#/definitions/configProbeEndpoint",
                    "description": "Endpoint to probe using the selected probing mechanism to determine\nthe connectivity status."
                }
            },
            "description": "Configuration for user-defined connectivity-testing probe."
        },
        "configConnectivityProbeMethod": {
            "type": "string",
            "enum": [
                "CONNECTIVITY_PROBE_METHOD_UNSPECIFIED",
                "CONNECTIVITY_PROBE_METHOD_ICMP",
                "CONNECTIVITY_PROBE_METHOD_TCP"
            ],
            "default": "CONNECTIVITY_PROBE_METHOD_UNSPECIFIED",
            "description": "User-defined method to use to determine the connectivity status.\n\n - CONNECTIVITY_PROBE_METHOD_UNSPECIFIED: Connectivity probing method is not specified and therefore will not be used.\n - CONNECTIVITY_PROBE_METHOD_ICMP: Use ICMP ping against the probed endpoint to determine the connectivity status.\n - CONNECTIVITY_PROBE_METHOD_TCP: Try to establish TCP connection with the probed endpoint to determine the connectivity\nstatus."
        },
        "configFormat": {
            "type": "string",
            "enum": [
                "FmtUnknown",
                "RAW",
                "QCOW",
                "QCOW2",
                "VHD",
                "VMDK",
                "OVA",
                "VHDX",
                "CONTAINER",
                "ISO",
                "PVC"
            ],
            "default": "FmtUnknown"
        },
        "configProbeEndpoint": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "string",
                    "description": "IP address or FQDN."
                },
                "port": {
                    "type": "integer",
                    "format": "int64",
                    "description": "TCP port required for CONNECTIVITY_PROBE_METHOD_TCP.\nLeave empty for CONNECTIVITY_PROBE_METHOD_ICMP."
                }
            },
            "description": "Address of a remote endpoint to probe in order to determine connectivity status."
        },
        "dhcpIpRange": {
            "type": "object",
            "properties": {
                "start": {
                    "type": "string",
                    "description": "starting IP"
                },
                "end": {
                    "type": "string",
                    "description": "ending IP"
                }
            },
            "description": "DHCP IP range",
            "title": "DHCP IP range"
        },
        "googlerpcStatus": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/protobufAny"
                    }
                }
            }
        },
        "hvMode": {
            "type": "string",
            "enum": [
                "HV_PV",
                "HV_HVM",
                "HV_FML",
                "HV_NOHYPER",
                "HV_LEGACY"
            ],
            "default": "HV_PV",
            "description": "For now we need to tell the device which virtualization mode\nto use. Later we might use a single one for all VMs (on any particular\nISA). If we end up keeping this we should make the names be less\ntied to a particular hypervisor."
        },
        "phyAdapter": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "object",
                    "$ref": "#/definitions/IoType",
                    "description": "IoType specifies the type of the Input output of the device"
                },
                "name": {
                    "type": "string",
                    "description": "Physical Adapter name"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.",
                    "maxLength": 32,
                    "pattern": "^[^<%&?/\\>]+$"
                }
            },
            "description": "Physical Adapter",
            "title": "Physical Adapter"
        },
        "protobufAny": {
            "type": "object",
            "properties": {
                "typeUrl": {
                    "type": "string"
                },
                "value": {
                    "type": "string",
                    "format": "byte"
                }
            }
        },
        "spType": {
            "type": "string",
            "enum": [
                "SPTYPE_INVALIDSRV",
                "SPTYPE_MAPSERVER",
                "SPTYPE_SUPPORTSERVER"
            ],
            "default": "SPTYPE_INVALIDSRV",
            "description": "clone of types defined in API repo.\n\n - SPTYPE_MAPSERVER: mapping service for zededa overlay service\n - SPTYPE_SUPPORTSERVER: if device has support feature enabled, this ia cloud service\nwhich device can be reached."
        },
        "vm": {
            "type": "object",
            "properties": {
                "cpus": {
                    "type": "number",
                    "format": "int64",
                    "description": "CPUs"
                },
                "memory": {
                    "type": "number",
                    "format": "int64",
                    "description": "Memory"
                },
                "mode": {
                    "$ref": "#/definitions/hvMode",
                    "description": "Hardware Virtualization"
                },
                "vnc": {
                    "type": "boolean",
                    "description": "VNC"
                },
                "vncDisplay": {
                    "type": "number",
                    "format": "int64",
                    "description": "VNC display",
                    "readOnly": true
                },
                "cpuPinningEnabled": {
                    "type": "boolean",
                    "description": "Enable CpuPinning"
                },
                "vmmMaxmem": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Maximum amount of memory in kbytes allowed for VM monitor to occupy"
                },
                "bootloaderMode": {
                    "$ref": "#/definitions/VmBootloaderMode",
                    "description": "The bootloader mode that will be used for the VM. Default is VM_BOOTLOADER_MODE_LEGACY"
                },
                "enableVmConfig": {
                    "type": "boolean",
                    "description": "Enable device which has VM to receive the Windows license embedded in the ACPI tables"
                }
            },
            "description": "Virtual machine memory configuration",
            "title": "vm detail",
            "required": [
                "cpus",
                "memory",
                "mode",
                "vnc"
            ]
        }
    },
    "securityDefinitions": {
        "BearerToken": {
            "type": "apiKey",
            "description": "Bearer token for user session",
            "name": "Authorization",
            "in": "header"
        }
    },
    "security": [
        {
            "BearerToken": []
        }
    ],
    "externalDocs": {
        "description": "ZEDEDA Product Documentation",
        "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/app-profiles"
    }
}