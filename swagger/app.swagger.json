{
    "swagger": "2.0",
    "info": {
        "title": "ZEDEDA Edge Application Service",
        "description": "The ZEDEDA Edge Application Service is part of ZEDEDA Edge Orchestration Platform. This service enables customers to define their edge applications on ZEDEDA platform and to deploy/upgrade/restarti/monitor them to edge node(s) remotely. You can use the ZEDEDA Edge Application Service to provision and manage ilifecycle of thousands of edge applications to millions of edge nodes distributed in different geographical locations in a secure and scalable manner.",
        "termsOfService": "https://www.zededa.com/terms",
        "version": "1.0",
        "contact": {
            "name": "ZEDEDA API Support",
            "url": "https://www.zededa.com/support",
            "email": "support@zededa.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "tags": [
        {
            "name": "EdgeApplicationConfiguration"
        },
        {
            "name": "EdgeApplicationInstanceConfiguration"
        },
        {
            "name": "EdgeApplicationInstanceStatus"
        }
    ],
    "basePath": "/api",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/v1/apps": {
            "get": {
                "summary": "Query edge application bundles",
                "description": "Query the edge application bundle records.",
                "operationId": "EdgeApplicationConfiguration_QueryEdgeApplicationBundles",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/Apps"
                        }
                    },
                    "400": {
                        "description": "Bad Request. The API gateway did not process the request because of invalid value of filter parameters.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "summary",
                        "description": "Only summary of the records required",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "filter.namePattern",
                        "description": "query param : \"name-pattern\" . Search * namePattern * in name field to filter records",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.originType",
                        "description": "origin of bundle\n\n - ORIGIN_UNSPECIFIED: default options, which says no Operation/Invalid Operation\n - ORIGIN_IMPORTED: Object imported from global enterprise.\n - ORIGIN_LOCAL: Objectl created locally.\n - ORIGIN_GLOBAL: Object created in global store,\nto use this type user should have root previlage.",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "ORIGIN_UNSPECIFIED",
                            "ORIGIN_IMPORTED",
                            "ORIGIN_LOCAL",
                            "ORIGIN_GLOBAL"
                        ],
                        "default": "ORIGIN_UNSPECIFIED"
                    },
                    {
                        "name": "filter.category",
                        "description": "category type of the bundle",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.appCategory",
                        "description": "category type of the bundle\n\n - APP_CATEGORY_UNSPECIFIED: Invalid Edge Application Category\n - APP_CATEGORY_OPERATING_SYSTEM: Edge operating systems\n - APP_CATEGORY_INDUSTRIAL: Connectity solution for industrial protocols\n - APP_CATEGORY_EDGE_APPLICATION: Edge application framework featuring composite functions for data ingestion, buffering, analytics and export\n - APP_CATEGORY_NETWORKING: Edge networking services (e.g. SD-WAN, NFV)\n - APP_CATEGORY_SECURITY: Edge security services (e.g. protocol inspection, firewall)\n - APP_CATEGORY_DATA_ANALYTICS: Edge analytics (e.g. AI/ML) and data management (e.g. database, connectors) services\n - APP_CATEGORY_CLOUD_APPLICATION: Edge application runtimes, cloud connectivity and general application enablement\n - APP_CATEGORY_DEVOPS: Tools for Edge Application CI/CD and performance optimization\n - APP_CATEGORY_OTHERS: Miscellaneous functionality",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "APP_CATEGORY_UNSPECIFIED",
                            "APP_CATEGORY_OPERATING_SYSTEM",
                            "APP_CATEGORY_INDUSTRIAL",
                            "APP_CATEGORY_EDGE_APPLICATION",
                            "APP_CATEGORY_NETWORKING",
                            "APP_CATEGORY_SECURITY",
                            "APP_CATEGORY_DATA_ANALYTICS",
                            "APP_CATEGORY_CLOUD_APPLICATION",
                            "APP_CATEGORY_DEVOPS",
                            "APP_CATEGORY_OTHERS"
                        ],
                        "default": "APP_CATEGORY_UNSPECIFIED"
                    },
                    {
                        "name": "filter.appType",
                        "description": "app type, eg: vm, container, module",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "APP_TYPE_UNSPECIFIED",
                            "APP_TYPE_VM",
                            "APP_TYPE_VM_RUNTIME",
                            "APP_TYPE_CONTAINER",
                            "APP_TYPE_MODULE"
                        ],
                        "default": "APP_TYPE_UNSPECIFIED"
                    },
                    {
                        "name": "filter.deploymentType",
                        "description": "type of deployment for the app, eg: azure, k3s, standalone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "DEPLOYMENT_TYPE_UNSPECIFIED",
                            "DEPLOYMENT_TYPE_STAND_ALONE",
                            "DEPLOYMENT_TYPE_AZURE",
                            "DEPLOYMENT_TYPE_K3S",
                            "DEPLOYMENT_TYPE_AWS",
                            "DEPLOYMENT_TYPE_K3S_AZURE",
                            "DEPLOYMENT_TYPE_K3S_AWS",
                            "DEPLOYMENT_TYPE_VMWARE_VCE"
                        ],
                        "default": "DEPLOYMENT_TYPE_UNSPECIFIED"
                    },
                    {
                        "name": "filter.categories",
                        "description": "category types of the bundle\n\n - APP_CATEGORY_UNSPECIFIED: Invalid Edge Application Category\n - APP_CATEGORY_OPERATING_SYSTEM: Edge operating systems\n - APP_CATEGORY_INDUSTRIAL: Connectity solution for industrial protocols\n - APP_CATEGORY_EDGE_APPLICATION: Edge application framework featuring composite functions for data ingestion, buffering, analytics and export\n - APP_CATEGORY_NETWORKING: Edge networking services (e.g. SD-WAN, NFV)\n - APP_CATEGORY_SECURITY: Edge security services (e.g. protocol inspection, firewall)\n - APP_CATEGORY_DATA_ANALYTICS: Edge analytics (e.g. AI/ML) and data management (e.g. database, connectors) services\n - APP_CATEGORY_CLOUD_APPLICATION: Edge application runtimes, cloud connectivity and general application enablement\n - APP_CATEGORY_DEVOPS: Tools for Edge Application CI/CD and performance optimization\n - APP_CATEGORY_OTHERS: Miscellaneous functionality",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "APP_CATEGORY_UNSPECIFIED",
                                "APP_CATEGORY_OPERATING_SYSTEM",
                                "APP_CATEGORY_INDUSTRIAL",
                                "APP_CATEGORY_EDGE_APPLICATION",
                                "APP_CATEGORY_NETWORKING",
                                "APP_CATEGORY_SECURITY",
                                "APP_CATEGORY_DATA_ANALYTICS",
                                "APP_CATEGORY_CLOUD_APPLICATION",
                                "APP_CATEGORY_DEVOPS",
                                "APP_CATEGORY_OTHERS"
                            ]
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "next.pageToken",
                        "description": "Page Token",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "next.orderBy",
                        "description": "OrderBy helps in sorting the list response",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "next.pageNum",
                        "description": "Page Number",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "next.pageSize",
                        "description": "Defines the page size",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "next.totalPages",
                        "description": "Total number of pages to be fetched.",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "EdgeApplicationConfiguration"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/edge-apps"
                }
            },
            "post": {
                "summary": "Create edge application bundle",
                "description": "Create an edge application bundle record.",
                "operationId": "EdgeApplicationConfiguration_CreateEdgeApplicationBundle",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request. The API gateway did not process the request because of missing parameter or invalid value of parameters.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict. The API gateway did not process the request because this edge application record will conflict with an already existing edge application record.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/App"
                        }
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "EdgeApplicationConfiguration"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/edge-apps"
                }
            }
        },
        "/v1/apps/global": {
            "get": {
                "summary": "Query global edge application bundles",
                "description": "Query the edge application bundle records present in the parent enetrprise",
                "operationId": "EdgeApplicationConfiguration_QueryGlobalEdgeApplicationBundles",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/Apps"
                        }
                    },
                    "400": {
                        "description": "Bad Request. The API gateway did not process the request because of invalid value of filter parameters.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "summary",
                        "description": "Only summary of the records required",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "filter.namePattern",
                        "description": "query param : \"name-pattern\" . Search * namePattern * in name field to filter records",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.originType",
                        "description": "origin of bundle\n\n - ORIGIN_UNSPECIFIED: default options, which says no Operation/Invalid Operation\n - ORIGIN_IMPORTED: Object imported from global enterprise.\n - ORIGIN_LOCAL: Objectl created locally.\n - ORIGIN_GLOBAL: Object created in global store,\nto use this type user should have root previlage.",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "ORIGIN_UNSPECIFIED",
                            "ORIGIN_IMPORTED",
                            "ORIGIN_LOCAL",
                            "ORIGIN_GLOBAL"
                        ],
                        "default": "ORIGIN_UNSPECIFIED"
                    },
                    {
                        "name": "filter.category",
                        "description": "category type of the bundle",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.appCategory",
                        "description": "category type of the bundle\n\n - APP_CATEGORY_UNSPECIFIED: Invalid Edge Application Category\n - APP_CATEGORY_OPERATING_SYSTEM: Edge operating systems\n - APP_CATEGORY_INDUSTRIAL: Connectity solution for industrial protocols\n - APP_CATEGORY_EDGE_APPLICATION: Edge application framework featuring composite functions for data ingestion, buffering, analytics and export\n - APP_CATEGORY_NETWORKING: Edge networking services (e.g. SD-WAN, NFV)\n - APP_CATEGORY_SECURITY: Edge security services (e.g. protocol inspection, firewall)\n - APP_CATEGORY_DATA_ANALYTICS: Edge analytics (e.g. AI/ML) and data management (e.g. database, connectors) services\n - APP_CATEGORY_CLOUD_APPLICATION: Edge application runtimes, cloud connectivity and general application enablement\n - APP_CATEGORY_DEVOPS: Tools for Edge Application CI/CD and performance optimization\n - APP_CATEGORY_OTHERS: Miscellaneous functionality",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "APP_CATEGORY_UNSPECIFIED",
                            "APP_CATEGORY_OPERATING_SYSTEM",
                            "APP_CATEGORY_INDUSTRIAL",
                            "APP_CATEGORY_EDGE_APPLICATION",
                            "APP_CATEGORY_NETWORKING",
                            "APP_CATEGORY_SECURITY",
                            "APP_CATEGORY_DATA_ANALYTICS",
                            "APP_CATEGORY_CLOUD_APPLICATION",
                            "APP_CATEGORY_DEVOPS",
                            "APP_CATEGORY_OTHERS"
                        ],
                        "default": "APP_CATEGORY_UNSPECIFIED"
                    },
                    {
                        "name": "filter.appType",
                        "description": "app type, eg: vm, container, module",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "APP_TYPE_UNSPECIFIED",
                            "APP_TYPE_VM",
                            "APP_TYPE_VM_RUNTIME",
                            "APP_TYPE_CONTAINER",
                            "APP_TYPE_MODULE"
                        ],
                        "default": "APP_TYPE_UNSPECIFIED"
                    },
                    {
                        "name": "filter.deploymentType",
                        "description": "type of deployment for the app, eg: azure, k3s, standalone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "DEPLOYMENT_TYPE_UNSPECIFIED",
                            "DEPLOYMENT_TYPE_STAND_ALONE",
                            "DEPLOYMENT_TYPE_AZURE",
                            "DEPLOYMENT_TYPE_K3S",
                            "DEPLOYMENT_TYPE_AWS",
                            "DEPLOYMENT_TYPE_K3S_AZURE",
                            "DEPLOYMENT_TYPE_K3S_AWS",
                            "DEPLOYMENT_TYPE_VMWARE_VCE"
                        ],
                        "default": "DEPLOYMENT_TYPE_UNSPECIFIED"
                    },
                    {
                        "name": "filter.categories",
                        "description": "category types of the bundle\n\n - APP_CATEGORY_UNSPECIFIED: Invalid Edge Application Category\n - APP_CATEGORY_OPERATING_SYSTEM: Edge operating systems\n - APP_CATEGORY_INDUSTRIAL: Connectity solution for industrial protocols\n - APP_CATEGORY_EDGE_APPLICATION: Edge application framework featuring composite functions for data ingestion, buffering, analytics and export\n - APP_CATEGORY_NETWORKING: Edge networking services (e.g. SD-WAN, NFV)\n - APP_CATEGORY_SECURITY: Edge security services (e.g. protocol inspection, firewall)\n - APP_CATEGORY_DATA_ANALYTICS: Edge analytics (e.g. AI/ML) and data management (e.g. database, connectors) services\n - APP_CATEGORY_CLOUD_APPLICATION: Edge application runtimes, cloud connectivity and general application enablement\n - APP_CATEGORY_DEVOPS: Tools for Edge Application CI/CD and performance optimization\n - APP_CATEGORY_OTHERS: Miscellaneous functionality",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "APP_CATEGORY_UNSPECIFIED",
                                "APP_CATEGORY_OPERATING_SYSTEM",
                                "APP_CATEGORY_INDUSTRIAL",
                                "APP_CATEGORY_EDGE_APPLICATION",
                                "APP_CATEGORY_NETWORKING",
                                "APP_CATEGORY_SECURITY",
                                "APP_CATEGORY_DATA_ANALYTICS",
                                "APP_CATEGORY_CLOUD_APPLICATION",
                                "APP_CATEGORY_DEVOPS",
                                "APP_CATEGORY_OTHERS"
                            ]
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "next.pageToken",
                        "description": "Page Token",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "next.orderBy",
                        "description": "OrderBy helps in sorting the list response",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "next.pageNum",
                        "description": "Page Number",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "next.pageSize",
                        "description": "Defines the page size",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "next.totalPages",
                        "description": "Total number of pages to be fetched.",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "EdgeApplicationConfiguration"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/edge-apps"
                }
            }
        },
        "/v1/apps/global/id/{id}": {
            "get": {
                "summary": "Get global edge application bundle",
                "description": "Get the configuration (without security details) of a global edge application bundle record.",
                "operationId": "EdgeApplicationConfiguration_GetGlobalEdgeApplicationBundle",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/App"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found. The API gateway did not process the request because the requested resource could not be found.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "System defined universally unique Id of the edge application",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "EdgeApplicationConfiguration"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/edge-apps"
                }
            }
        },
        "/v1/apps/global/name/{name}": {
            "get": {
                "summary": "Get global edge application bundle",
                "description": "Get the configuration (without security details) of a global edge application bundle record.",
                "operationId": "EdgeApplicationConfiguration_GetGlobalEdgeApplicationBundleByName",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/App"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found. The API gateway did not process the request because the requested resource could not be found.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "description": "User defined name of the edge application, unique across the enterprise. Once object is created, name can\u2019t be changed",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "EdgeApplicationConfiguration"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/edge-apps"
                }
            }
        },
        "/v1/apps/id/{id}": {
            "get": {
                "summary": "Get edge application bundle",
                "description": "Get the configuration (without security details) of an edge application bundle record.",
                "operationId": "EdgeApplicationConfiguration_GetEdgeApplicationBundle",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/App"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found. The API gateway did not process the request because the requested resource could not be found.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "System defined universally unique Id of the edge application",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "EdgeApplicationConfiguration"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/edge-apps"
                }
            },
            "delete": {
                "summary": "Delete edge application bundle",
                "description": "Delete an edge application bundle record.",
                "operationId": "EdgeApplicationConfiguration_DeleteEdgeApplicationBundle",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found. The API gateway did not process the request because the requested resource could not be found.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict. The API gateway did not process the request because there are instances of this edge application deployed in edge node(s)",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "System defined universally unique Id of the edge application",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "EdgeApplicationConfiguration"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/edge-apps"
                }
            },
            "put": {
                "summary": "Update edge application bundle",
                "description": "Update an edge application bundle record. The usual pattern to update an edge application bundle record is to retrieve the record and update with the modified values in a new body to update the edge application bundle record.",
                "operationId": "EdgeApplicationConfiguration_UpdateEdgeApplicationBundle",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found. The API gateway did not process the request because the requested resource could not be found.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict. The API gateway did not process the request because this operation will conflict with an already existing edge network record.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "System defined universally unique Id of the edge application",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "example": {
                                "name": "sample-app",
                                "title": "Sample Edge Applications",
                                "originType": "ORIGIN_LOCAL"
                            },
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "User defined name of the edge application, unique across the enterprise. Once object is created, name can\u2019t be changed",
                                    "maxLength": 256,
                                    "minLength": 3,
                                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                                    "uniqueItems": true
                                },
                                "title": {
                                    "type": "string",
                                    "description": "User defined title of the edge application. Title can be changed at any time",
                                    "maxLength": 256,
                                    "minLength": 3,
                                    "pattern": "^[a-zA-Z0-9]+[a-zA-Z0-9!-~ ]+$"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Detailed description of the edge application",
                                    "maxLength": 256
                                },
                                "revision": {
                                    "$ref": "#/definitions/ObjectRevision",
                                    "description": "system defined info"
                                },
                                "networks": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "user defined network options"
                                },
                                "drives": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "user defined drives",
                                    "readOnly": true
                                },
                                "cpus": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "user defined cpus for bundle"
                                },
                                "memory": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "user defined memory for bundle"
                                },
                                "manifestJSON": {
                                    "$ref": "#/definitions/VMManifest",
                                    "description": "user defined manifest in JSON format"
                                },
                                "parentDetail": {
                                    "$ref": "#/definitions/ObjectParentDetail",
                                    "description": "origin and parent related details"
                                },
                                "originType": {
                                    "$ref": "#/definitions/Origin",
                                    "description": "origin of object"
                                },
                                "storage": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "user defined storage for bundle"
                                },
                                "userDefinedVersion": {
                                    "type": "string",
                                    "description": "User defined version for the given edge-app"
                                },
                                "projectAccessList": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "project access list of the app bundle"
                                },
                                "isImported": {
                                    "type": "boolean",
                                    "description": "Flag to represent where app bundle is already imported"
                                }
                            },
                            "description": "Edge application gets installed/uninstalled to/from edge node(s) and perform specific edge computing tasks. Lifecycle of Edge application (upgrade/restart) on Edge node can be managed and monitored by ZEDEDA Cloud controller through this detailed configuration.",
                            "title": "Edge application detailed configuration",
                            "required": [
                                "name",
                                "title",
                                "originType"
                            ]
                        }
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "EdgeApplicationConfiguration"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/edge-apps"
                }
            }
        },
        "/v1/apps/id/{id}/projects": {
            "get": {
                "summary": "Query the project access list of an edge application bundle",
                "description": "Query the project access list of an edge application bundle",
                "operationId": "EdgeApplicationConfiguration_QueryEdgeApplicationBundleProjectList",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/AppProjectList"
                        }
                    },
                    "400": {
                        "description": "Bad Request. The API gateway did not process the request because of invalid value of filter parameters.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "System defined universally unique Id of the app bundle",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "next.pageToken",
                        "description": "Page Token",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "next.orderBy",
                        "description": "OrderBy helps in sorting the list response",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "next.pageNum",
                        "description": "Page Number",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "next.pageSize",
                        "description": "Defines the page size",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "next.totalPages",
                        "description": "Total number of pages to be fetched.",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "EdgeApplicationConfiguration"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/edge-apps"
                }
            }
        },
        "/v1/apps/instances": {
            "get": {
                "summary": "Query edge application instances",
                "description": "Query the edge application instance records.",
                "operationId": "EdgeApplicationInstanceConfiguration_QueryEdgeApplicationInstances",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/AppInstances"
                        }
                    },
                    "400": {
                        "description": "Bad Request. The API gateway did not process the request because of invalid value of filter parameters.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "summary",
                        "description": "summary flag",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "filter.projectName",
                        "description": "User defined name of the project, unique across the enterprise. Once project is created, name can\u2019t be changed",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.appName",
                        "description": "User defined name of the app instance, unique across the enterprise. Once app instance is created, name can\u2019t be changed",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.deviceName",
                        "description": "User defined name of the device, unique across the enterprise. Once device is created, name can\u2019t be changed",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.namePattern",
                        "description": "name pattern",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.appType",
                        "description": "type of bundle",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "APP_TYPE_UNSPECIFIED",
                            "APP_TYPE_VM",
                            "APP_TYPE_VM_RUNTIME",
                            "APP_TYPE_CONTAINER",
                            "APP_TYPE_MODULE"
                        ],
                        "default": "APP_TYPE_UNSPECIFIED"
                    },
                    {
                        "name": "filter.deploymentType",
                        "description": "type of deployment for the app, eg: azure, k3s, standalone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "DEPLOYMENT_TYPE_UNSPECIFIED",
                            "DEPLOYMENT_TYPE_STAND_ALONE",
                            "DEPLOYMENT_TYPE_AZURE",
                            "DEPLOYMENT_TYPE_K3S",
                            "DEPLOYMENT_TYPE_AWS",
                            "DEPLOYMENT_TYPE_K3S_AZURE",
                            "DEPLOYMENT_TYPE_K3S_AWS",
                            "DEPLOYMENT_TYPE_VMWARE_VCE"
                        ],
                        "default": "DEPLOYMENT_TYPE_UNSPECIFIED"
                    },
                    {
                        "name": "filter.projectNamePattern",
                        "description": "project name pattern",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.deviceNamePattern",
                        "description": "device name pattern",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "next.pageToken",
                        "description": "Page Token",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "next.orderBy",
                        "description": "OrderBy helps in sorting the list response",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "next.pageNum",
                        "description": "Page Number",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "next.pageSize",
                        "description": "Defines the page size",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "next.totalPages",
                        "description": "Total number of pages to be fetched.",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "fields",
                        "description": "Fields to select: id, name, title, description, projectId, tags, clusterID, appId, deviceId, manifestInfo, appType, appPolicyId, userDefinedVersion, remoteConsole",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "EdgeApplicationInstanceConfiguration"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/edge-apps"
                }
            },
            "post": {
                "summary": "Create edge application instance",
                "description": "Create an edge application instance record.",
                "operationId": "EdgeApplicationInstanceConfiguration_CreateEdgeApplicationInstance",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request. The API gateway did not process the request because of missing parameter or invalid value of parameters.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict. The API gateway did not process the request because this edge application instance record will conflict with an already existing edge application iinstance record.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AppInstance"
                        }
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "EdgeApplicationInstanceConfiguration"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/edge-apps"
                }
            }
        },
        "/v1/apps/instances/id/{id}": {
            "get": {
                "summary": "Get edge application instance",
                "description": "Get the configuration (without security details) of an edge application instance record.",
                "operationId": "EdgeApplicationInstanceConfiguration_GetEdgeApplicationInstance",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/AppInstance"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found. The API gateway did not process the request because the requested resource could not be found.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "System defined universally unique Id of the app instance",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "EdgeApplicationInstanceConfiguration"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/edge-apps"
                }
            },
            "delete": {
                "summary": "Delete edge application instance",
                "description": "Delete an edge application instance record.",
                "operationId": "EdgeApplicationInstanceConfiguration_DeleteEdgeApplicationInstance",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found. The API gateway did not process the request because the requested resource could not be found.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "System defined universally unique Id of the app instance",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "EdgeApplicationInstanceConfiguration"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/edge-apps"
                }
            },
            "put": {
                "summary": "Update edge application instance",
                "description": "Update an edge application instance. The usual pattern to update an edge application bundle record is to retrieve the record and update with the modified values in a new body to update the edge application bundle record.",
                "operationId": "EdgeApplicationInstanceConfiguration_UpdateEdgeApplicationInstance",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found. The API gateway did not process the request because the requested resource could not be found.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict. The API gateway did not process the request because this operation will conflict with an already existing edge network record.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "System defined universally unique Id of the app instance",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "User defined name of the app instance, unique across the enterprise. Once app instance is created, name can\u2019t be changed",
                                    "maxLength": 256,
                                    "minLength": 3,
                                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                                    "uniqueItems": true
                                },
                                "title": {
                                    "type": "string",
                                    "description": "User defined title of the app instance. Title can be changed at any time",
                                    "maxLength": 256,
                                    "minLength": 3,
                                    "pattern": "^[a-zA-Z0-9]+[a-zA-Z0-9!-~ ]+$"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Detailed description of the app instance",
                                    "maxLength": 256
                                },
                                "revision": {
                                    "$ref": "#/definitions/ObjectRevision",
                                    "description": "app instance object revision details"
                                },
                                "projectId": {
                                    "type": "string",
                                    "description": "project name which the given app instance belong to"
                                },
                                "tags": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "description": "Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.",
                                    "maxLength": 32,
                                    "pattern": "^[^<%&?/\\>]+$"
                                },
                                "clusterID": {
                                    "type": "string",
                                    "description": "System defined universally unique clusterInstance ID, unique across the enterprise.",
                                    "maxLength": 256,
                                    "minLength": 3,
                                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                                    "uniqueItems": true
                                },
                                "appId": {
                                    "type": "string",
                                    "description": "User defined name of the edge app, unique across the enterprise. Once app name is created, name can\u2019t be changed",
                                    "maxLength": 256,
                                    "minLength": 3,
                                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                                    "uniqueItems": true
                                },
                                "deviceId": {
                                    "type": "string",
                                    "description": "User defined name of the device name, unique across the enterprise. Once device name is defined, name can\u2019t be changed",
                                    "maxLength": 256,
                                    "minLength": 3,
                                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                                    "uniqueItems": true
                                },
                                "activate": {
                                    "type": "string",
                                    "description": "app instance activation flag"
                                },
                                "vminfo": {
                                    "$ref": "#/definitions/vm",
                                    "description": "virtual machine info"
                                },
                                "drives": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/drive"
                                    },
                                    "description": "drive details"
                                },
                                "interfaces": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/appInterface"
                                    },
                                    "description": "application interfaces"
                                },
                                "userData": {
                                    "type": "string",
                                    "description": "Deprecated: Application initiazation script in cloud-config format to be used by cloud-init"
                                },
                                "customConfig": {
                                    "$ref": "#/definitions/CustomConfig",
                                    "description": "Application initialization script template in cloud-config format and user specified values"
                                },
                                "collectStatsIPAddr": {
                                    "type": "string",
                                    "description": "holds the static Ip of the app instance"
                                },
                                "bundleversion": {
                                    "type": "string",
                                    "description": "version of bundle app is referring to"
                                },
                                "logs": {
                                    "$ref": "#/definitions/AppInstanceLogs",
                                    "description": "App Instance logs"
                                },
                                "restart": {
                                    "$ref": "#/definitions/ZedCloudOpsCmd",
                                    "description": "Restart counter: ZedCloudOpsCmd"
                                },
                                "refresh": {
                                    "$ref": "#/definitions/ZedCloudOpsCmd",
                                    "description": "Refresh counter: ZedCloudOpsCmd"
                                },
                                "purge": {
                                    "$ref": "#/definitions/ZedCloudOpsCmd",
                                    "description": "Purge counter: ZedCloudOpsCmd"
                                },
                                "remoteConsole": {
                                    "type": "boolean",
                                    "description": "Remote console flag"
                                },
                                "encryptedSecrets": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "description": "user encrypted secrets map"
                                },
                                "cryptoKey": {
                                    "type": "string",
                                    "description": "Crypto Key for decrypting user secret information"
                                },
                                "manifestInfo": {
                                    "$ref": "#/definitions/ManifestInfo",
                                    "description": "app manifest Info"
                                },
                                "appType": {
                                    "$ref": "#/definitions/AppType",
                                    "description": "type of bundle"
                                },
                                "isSecretUpdated": {
                                    "type": "boolean",
                                    "description": "This field tells whether user secrets has updated or not, especially the cusotom config"
                                },
                                "appPolicyId": {
                                    "type": "string",
                                    "description": "app policy id"
                                },
                                "deploymentType": {
                                    "$ref": "#/definitions/DeploymentType",
                                    "description": "type of deployment for the app, eg: azure, k3s, standalone"
                                },
                                "userDefinedVersion": {
                                    "type": "string",
                                    "description": "Instance version tells which edge app does this instance is running"
                                },
                                "startDelayInSeconds": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "start delay is the time in seconds EVE should wait after boot before starting the application instance"
                                }
                            },
                            "description": "App Instance detail",
                            "title": "App Instance detail",
                            "required": [
                                "name",
                                "title",
                                "projectId",
                                "appId",
                                "deviceId",
                                "activate",
                                "drives",
                                "interfaces"
                            ]
                        }
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "EdgeApplicationInstanceConfiguration"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/edge-apps"
                }
            }
        },
        "/v1/apps/instances/id/{id}/activate": {
            "put": {
                "summary": "Activate edge application instance",
                "description": "Activate an edge application instance. If already in active state no action is taken.",
                "operationId": "EdgeApplicationInstanceConfiguration_ActivateEdgeApplicationInstance",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found. The API gateway did not process the request because the requested resource could not be found.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict. The API gateway did not process the request because this operation will conflict with an already existing edge network record.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "System defined universally unique Id of the app instance",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "EdgeApplicationInstanceConfiguration"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/edge-apps"
                }
            }
        },
        "/v1/apps/instances/id/{id}/console/remote": {
            "put": {
                "summary": "Connect to edge application instance console",
                "description": "Remotely connect to console of an edge application instance running on the edge node where the edge application instance has been deployed.",
                "operationId": "EdgeApplicationInstanceConfiguration_ConnectToEdgeApplicationInstance",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found. The API gateway did not process the request because the requested resource could not be found.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict. The API gateway did not process the request because this operation will conflict with an already existing edge network record.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "System defined universally unique Id of the app instance",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "EdgeApplicationInstanceConfiguration"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/edge-apps"
                }
            }
        },
        "/v1/apps/instances/id/{id}/deactivate": {
            "put": {
                "summary": "Deactivate edge application instance",
                "description": "Deactivate an edge application instance. If already in inactive state no action is taken.",
                "operationId": "EdgeApplicationInstanceConfiguration_DeActivateEdgeApplicationInstance",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found. The API gateway did not process the request because the requested resource could not be found.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict. The API gateway did not process the request because this operation will conflict with an already existing edge network record.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "System defined universally unique Id of the app instance",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "EdgeApplicationInstanceConfiguration"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/edge-apps"
                }
            }
        },
        "/v1/apps/instances/id/{id}/flowlog/classification": {
            "get": {
                "summary": "Get edge application instance network traffic flow log",
                "description": "Get the network traffic flow log of an edge application instance as reported by the edge node where the edge application instance has been deployed.",
                "operationId": "EdgeApplicationInstanceStatus_GetEdgeApplicationInstanceTrafficFlows",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/ClassificationResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found. The API gateway did not process the request because the requested resource could not be found.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startTime",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "endTime",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "levels",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "FLOW_LOG_CATEGORY_TYPE_UNSPECIFIED",
                                "FLOW_LOG_CATEGORY_TYPE_DIRECTION",
                                "FLOW_LOG_CATEGORY_TYPE_ACL_ID",
                                "FLOW_LOG_CATEGORY_TYPE_ACTION",
                                "FLOW_LOG_CATEGORY_TYPE_PROTO",
                                "FLOW_LOG_CATEGORY_TYPE_REMOTE_IP",
                                "FLOW_LOG_CATEGORY_TYPE_REMOTE_PORT",
                                "FLOW_LOG_CATEGORY_TYPE_FQDN"
                            ]
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "enterpriseId",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "metricType",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "FLOW_LOG_METRIC_UNSPECIFIED",
                            "FLOW_LOG_METRIC_BYTES",
                            "FLOW_LOG_METRIC_PACKETS"
                        ],
                        "default": "FLOW_LOG_METRIC_UNSPECIFIED"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "FLOW_LOG_DIRECTION_UNSPECIFIED",
                            "FLOW_LOG_DIRECTION_EGRESS",
                            "FLOW_LOG_DIRECTION_INGRESS"
                        ],
                        "default": "FLOW_LOG_DIRECTION_UNSPECIFIED"
                    },
                    {
                        "name": "aclid",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "FLOW_LOG_ACTION_UNSPECIFIED",
                            "FLOW_LOG_ACTION_DROP",
                            "FLOW_LOG_ACTION_ACCEPT"
                        ],
                        "default": "FLOW_LOG_ACTION_UNSPECIFIED"
                    },
                    {
                        "name": "proto",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "remoteip",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "remoteport",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "fqdn",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "EdgeApplicationInstanceStatus"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/edge-apps"
                }
            }
        },
        "/v1/apps/instances/id/{id}/flowlog/toptalkers": {
            "get": {
                "summary": "Get edge application instance top talkers of the network traffic flows",
                "description": "Get the top talkers of the network traffic flows of an edge application instance as reported by the edge node where the edge application instance has been deployed.",
                "operationId": "EdgeApplicationInstanceStatus_GetEdgeApplicationInstanceTopTalkers",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/TopTalkersResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found. The API gateway did not process the request because the requested resource could not be found.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startTime",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "endTime",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "metricType",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "FLOW_LOG_METRIC_UNSPECIFIED",
                            "FLOW_LOG_METRIC_BYTES",
                            "FLOW_LOG_METRIC_PACKETS"
                        ],
                        "default": "FLOW_LOG_METRIC_UNSPECIFIED"
                    },
                    {
                        "name": "enterpriseId",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Cursor.pageToken",
                        "description": "Page Token",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Cursor.orderBy",
                        "description": "OrderBy helps in sorting the list response",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "Cursor.pageNum",
                        "description": "Page Number",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "Cursor.pageSize",
                        "description": "Defines the page size",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "Cursor.totalPages",
                        "description": "Total number of pages to be fetched.",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "EdgeApplicationInstanceStatus"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/edge-apps"
                }
            }
        },
        "/v1/apps/instances/id/{id}/logs": {
            "get": {
                "summary": "Get edge application instance log",
                "description": "Get the log of an edge application instance as reported by the edge node where the edge application instance has been deployed.",
                "operationId": "EdgeApplicationInstanceStatus_GetEdgeApplicationInstanceLogs",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/AppInstanceLogsResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found. The API gateway did not process the request because the requested resource could not be found.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "System defined universally unique Id of the app instance",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "startTime",
                        "description": "start time for querying the  app instance logs",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "endTime",
                        "description": "entime for querying the app instacne logs",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "interval",
                        "description": "interval at which logs needs to fetched",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "Cursor.pageToken",
                        "description": "Page Token",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Cursor.orderBy",
                        "description": "OrderBy helps in sorting the list response",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "Cursor.pageNum",
                        "description": "Page Number",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "Cursor.pageSize",
                        "description": "Defines the page size",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "Cursor.totalPages",
                        "description": "Total number of pages to be fetched.",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "EdgeApplicationInstanceStatus"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/edge-apps"
                }
            }
        },
        "/v1/apps/instances/id/{id}/refresh": {
            "put": {
                "summary": "Refresh edge application instance",
                "description": "Refresh an edge application instance. Update edge application instance to the latest version of the edge application. This operation will result in a restart of the edge application instance.",
                "operationId": "EdgeApplicationInstanceConfiguration_RefreshEdgeApplicationInstance",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found. The API gateway did not process the request because the requested resource could not be found.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict. The API gateway did not process the request because this operation will conflict with an already existing edge network record.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "System defined universally unique Id of the app instance",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "EdgeApplicationInstanceConfiguration"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/edge-apps"
                }
            }
        },
        "/v1/apps/instances/id/{id}/refresh/purge": {
            "put": {
                "summary": "Refresh and purge edge application instance",
                "description": "Refresh and purge an edge application instance, update edge application instance to the latest version of the edge application. This operation will result in loss of data and a restart of the edge application instance. ",
                "operationId": "EdgeApplicationInstanceConfiguration_RefreshPurgeEdgeApplicationInstance",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found. The API gateway did not process the request because the requested resource could not be found.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict. The API gateway did not process the request because this operation will conflict with an already existing edge network record.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "System defined universally unique Id of the app instance",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "EdgeApplicationInstanceConfiguration"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/edge-apps"
                }
            }
        },
        "/v1/apps/instances/id/{id}/restart": {
            "put": {
                "summary": "Restart edge application instance",
                "description": "Restart an edge application instance, initiate a restart of the edge application instance.",
                "operationId": "EdgeApplicationInstanceConfiguration_RestartEdgeApplicationInstance",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found. The API gateway did not process the request because the requested resource could not be found.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict. The API gateway did not process the request because this operation will conflict with an already existing edge network record.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "System defined universally unique Id of the app instance",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "EdgeApplicationInstanceConfiguration"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/edge-apps"
                }
            }
        },
        "/v1/apps/instances/id/{id}/status": {
            "get": {
                "summary": "Get edge application instance status",
                "description": "Get the status of an edge application instance as reported by the edge node where the edge application instance has been deployed.",
                "operationId": "EdgeApplicationInstanceStatus_GetEdgeApplicationInstanceStatus",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/AppInstStatusMsg"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found. The API gateway did not process the request because the requested resource could not be found.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "description": "System defined universally unique Id of the app instance",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "EdgeApplicationInstanceStatus"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/edge-apps"
                }
            }
        },
        "/v1/apps/instances/id/{objid}/events": {
            "get": {
                "summary": "Get edge application instance events by id",
                "description": "Get configuration and status events of an edge application instance by id.",
                "operationId": "EdgeApplicationInstanceStatus_GetEdgeApplicationInstanceEvents",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/EventQueryResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found. The API gateway did not process the request because the requested resource could not be found.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "objid",
                        "description": "Object id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "objname",
                        "description": "Object name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "enterpriseId",
                        "description": "system generated unique id for an enterprise (deprecated) ",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "EdgeApplicationInstanceStatus"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/edge-apps"
                }
            }
        },
        "/v1/apps/instances/id/{objid}/timeSeries/{mType}": {
            "get": {
                "summary": "Get edge application instance resource usage timeline",
                "description": "Get the resource usage timeline of an edge application instance as reported by the edge node where the edge application instance has been deployed.",
                "operationId": "EdgeApplicationInstanceStatus_GetEdgeApplicationInstanceResourceMetricsById",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/MetricQueryResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found. The API gateway did not process the request because the requested resource could not be found.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "objid",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "mType",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "METRIC_TYPE_UNSPECIFIED",
                            "METRIC_TYPE_CPU_TOTAL",
                            "METRIC_TYPE_CPU_USAGE",
                            "METRIC_TYPE_MEMORY_TOTAL",
                            "METRIC_TYPE_MEMORY_UTILIZATION",
                            "METRIC_TYPE_NETWORK_TOTAL",
                            "METRIC_TYPE_NETWORK_RATES",
                            "METRIC_TYPE_EVENTS_COUNT",
                            "METRIC_TYPE_STORAGE_UTILIZATION",
                            "METRIC_TYPE_STORAGE_IO_ZPOOL",
                            "METRIC_TYPE_STORAGE_IO_ZVOL"
                        ]
                    },
                    {
                        "name": "objtype",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "OBJECT_TYPE_UNSPECIFIED",
                            "OBJECT_TYPE_USER",
                            "OBJECT_TYPE_EDGE_NODE",
                            "OBJECT_TYPE_EDGE_APP",
                            "OBJECT_TYPE_IMAGE",
                            "OBJECT_TYPE_EDGE_APP_INSTANCE",
                            "OBJECT_TYPE_PROJECT",
                            "OBJECT_TYPE_NETWORK",
                            "OBJECT_TYPE_DATASTORE",
                            "OBJECT_TYPE_SERVICE",
                            "OBJECT_TYPE_SERVICE_INSTANCE",
                            "OBJECT_TYPE_ENTERPRISE",
                            "OBJECT_TYPE_ROLE",
                            "OBJECT_TYPE_CREDENTIAL",
                            "OBJECT_TYPE_NETWORK_INSTANCE",
                            "OBJECT_TYPE_VOLUME_INSTANCE",
                            "OBJECT_TYPE_REALM",
                            "OBJECT_TYPE_AUTHPROFILE",
                            "OBJECT_TYPE_POLICY",
                            "OBJECT_TYPE_APP_POLICY",
                            "OBJECT_TYPE_CLUSTER_INSTANCE",
                            "OBJECT_TYPE_PLUGIN",
                            "OBJECT_TYPE_DOC_POLICY",
                            "OBJECT_TYPE_ORCHESTRATOR_CLUSTER",
                            "OBJECT_TYPE_TAGS",
                            "OBJECT_TYPE_EDGE_NODE_INTERFACE",
                            "OBJECT_TYPE_DEPLOYMENT",
                            "OBJECT_TYPE_ENTITLEMENTS",
                            "OBJECT_TYPE_DATA_STREAM",
                            "OBJECT_TYPE_API_USAGE"
                        ],
                        "default": "OBJECT_TYPE_UNSPECIFIED"
                    },
                    {
                        "name": "objname",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startTime",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "endTime",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "interval",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "enterpriseId",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "EdgeApplicationInstanceStatus"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/edge-apps"
                }
            }
        },
        "/v1/apps/instances/name/{name}": {
            "get": {
                "summary": "Get edge application instance",
                "description": "Get the configuration (without security details) of an edge application instance record.",
                "operationId": "EdgeApplicationInstanceConfiguration_GetEdgeApplicationInstanceByName",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/AppInstance"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found. The API gateway did not process the request because the requested resource could not be found.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "description": "User defined name of the app instance, unique across the enterprise. Once app instance is created, name can\u2019t be changed",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "EdgeApplicationInstanceConfiguration"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/edge-apps"
                }
            }
        },
        "/v1/apps/instances/name/{name}/flowlog/classification": {
            "get": {
                "summary": "Get edge application instance network traffic flow log",
                "description": "Get the network traffic flow log of an edge application instance as reported by the edge node where the edge application instance has been deployed.",
                "operationId": "EdgeApplicationInstanceStatus_GetEdgeApplicationInstanceTrafficFlows2",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/ClassificationResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found. The API gateway did not process the request because the requested resource could not be found.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startTime",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "endTime",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "levels",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "FLOW_LOG_CATEGORY_TYPE_UNSPECIFIED",
                                "FLOW_LOG_CATEGORY_TYPE_DIRECTION",
                                "FLOW_LOG_CATEGORY_TYPE_ACL_ID",
                                "FLOW_LOG_CATEGORY_TYPE_ACTION",
                                "FLOW_LOG_CATEGORY_TYPE_PROTO",
                                "FLOW_LOG_CATEGORY_TYPE_REMOTE_IP",
                                "FLOW_LOG_CATEGORY_TYPE_REMOTE_PORT",
                                "FLOW_LOG_CATEGORY_TYPE_FQDN"
                            ]
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "enterpriseId",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "metricType",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "FLOW_LOG_METRIC_UNSPECIFIED",
                            "FLOW_LOG_METRIC_BYTES",
                            "FLOW_LOG_METRIC_PACKETS"
                        ],
                        "default": "FLOW_LOG_METRIC_UNSPECIFIED"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "FLOW_LOG_DIRECTION_UNSPECIFIED",
                            "FLOW_LOG_DIRECTION_EGRESS",
                            "FLOW_LOG_DIRECTION_INGRESS"
                        ],
                        "default": "FLOW_LOG_DIRECTION_UNSPECIFIED"
                    },
                    {
                        "name": "aclid",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "FLOW_LOG_ACTION_UNSPECIFIED",
                            "FLOW_LOG_ACTION_DROP",
                            "FLOW_LOG_ACTION_ACCEPT"
                        ],
                        "default": "FLOW_LOG_ACTION_UNSPECIFIED"
                    },
                    {
                        "name": "proto",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "remoteip",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "remoteport",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "fqdn",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "EdgeApplicationInstanceStatus"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/edge-apps"
                }
            }
        },
        "/v1/apps/instances/name/{name}/flowlog/toptalkers": {
            "get": {
                "summary": "Get edge application instance top talkers of the network traffic flows",
                "description": "Get the top talkers of the network traffic flows of an edge application instance as reported by the edge node where the edge application instance has been deployed.",
                "operationId": "EdgeApplicationInstanceStatus_GetEdgeApplicationInstanceTopTalkers2",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/TopTalkersResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found. The API gateway did not process the request because the requested resource could not be found.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startTime",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "endTime",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "metricType",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "FLOW_LOG_METRIC_UNSPECIFIED",
                            "FLOW_LOG_METRIC_BYTES",
                            "FLOW_LOG_METRIC_PACKETS"
                        ],
                        "default": "FLOW_LOG_METRIC_UNSPECIFIED"
                    },
                    {
                        "name": "enterpriseId",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Cursor.pageToken",
                        "description": "Page Token",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Cursor.orderBy",
                        "description": "OrderBy helps in sorting the list response",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "Cursor.pageNum",
                        "description": "Page Number",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "Cursor.pageSize",
                        "description": "Defines the page size",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "Cursor.totalPages",
                        "description": "Total number of pages to be fetched.",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "EdgeApplicationInstanceStatus"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/edge-apps"
                }
            }
        },
        "/v1/apps/instances/name/{name}/status": {
            "get": {
                "summary": "Get edge application instance status",
                "description": "Get the status of an edge application instance as reported by the edge node where the edge application instance has been deployed.",
                "operationId": "EdgeApplicationInstanceStatus_GetEdgeApplicationInstanceStatusByName",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/AppInstStatusMsg"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found. The API gateway did not process the request because the requested resource could not be found.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "description": "User defined name of the app instance, unique across the enterprise. Once app instance is created, name can\u2019t be changed",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "EdgeApplicationInstanceStatus"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/edge-apps"
                }
            }
        },
        "/v1/apps/instances/name/{objname}/events": {
            "get": {
                "summary": "Get edge application instance events by name",
                "description": "Get configuration and status events of an edge application instance by name.",
                "operationId": "EdgeApplicationInstanceStatus_GetEdgeApplicationInstanceEventsByName",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/EventQueryResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found. The API gateway did not process the request because the requested resource could not be found.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "objname",
                        "description": "Object name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "enterpriseId",
                        "description": "system generated unique id for an enterprise (deprecated) ",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "objid",
                        "description": "Object id",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "EdgeApplicationInstanceStatus"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/edge-apps"
                }
            }
        },
        "/v1/apps/instances/name/{objname}/timeSeries/{mType}": {
            "get": {
                "summary": "Get edge application instance resource usage timeline",
                "description": "Get the resource usage timeline of an edge application instance as reported by the edge node where the edge application instance has been deployed.",
                "operationId": "EdgeApplicationInstanceStatus_GetEdgeApplicationInstanceResourceMetricsByName",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/MetricQueryResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found. The API gateway did not process the request because the requested resource could not be found.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "objname",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "mType",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "METRIC_TYPE_UNSPECIFIED",
                            "METRIC_TYPE_CPU_TOTAL",
                            "METRIC_TYPE_CPU_USAGE",
                            "METRIC_TYPE_MEMORY_TOTAL",
                            "METRIC_TYPE_MEMORY_UTILIZATION",
                            "METRIC_TYPE_NETWORK_TOTAL",
                            "METRIC_TYPE_NETWORK_RATES",
                            "METRIC_TYPE_EVENTS_COUNT",
                            "METRIC_TYPE_STORAGE_UTILIZATION",
                            "METRIC_TYPE_STORAGE_IO_ZPOOL",
                            "METRIC_TYPE_STORAGE_IO_ZVOL"
                        ]
                    },
                    {
                        "name": "objtype",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "OBJECT_TYPE_UNSPECIFIED",
                            "OBJECT_TYPE_USER",
                            "OBJECT_TYPE_EDGE_NODE",
                            "OBJECT_TYPE_EDGE_APP",
                            "OBJECT_TYPE_IMAGE",
                            "OBJECT_TYPE_EDGE_APP_INSTANCE",
                            "OBJECT_TYPE_PROJECT",
                            "OBJECT_TYPE_NETWORK",
                            "OBJECT_TYPE_DATASTORE",
                            "OBJECT_TYPE_SERVICE",
                            "OBJECT_TYPE_SERVICE_INSTANCE",
                            "OBJECT_TYPE_ENTERPRISE",
                            "OBJECT_TYPE_ROLE",
                            "OBJECT_TYPE_CREDENTIAL",
                            "OBJECT_TYPE_NETWORK_INSTANCE",
                            "OBJECT_TYPE_VOLUME_INSTANCE",
                            "OBJECT_TYPE_REALM",
                            "OBJECT_TYPE_AUTHPROFILE",
                            "OBJECT_TYPE_POLICY",
                            "OBJECT_TYPE_APP_POLICY",
                            "OBJECT_TYPE_CLUSTER_INSTANCE",
                            "OBJECT_TYPE_PLUGIN",
                            "OBJECT_TYPE_DOC_POLICY",
                            "OBJECT_TYPE_ORCHESTRATOR_CLUSTER",
                            "OBJECT_TYPE_TAGS",
                            "OBJECT_TYPE_EDGE_NODE_INTERFACE",
                            "OBJECT_TYPE_DEPLOYMENT",
                            "OBJECT_TYPE_ENTITLEMENTS",
                            "OBJECT_TYPE_DATA_STREAM",
                            "OBJECT_TYPE_API_USAGE"
                        ],
                        "default": "OBJECT_TYPE_UNSPECIFIED"
                    },
                    {
                        "name": "startTime",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "endTime",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "interval",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "enterpriseId",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "objid",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "EdgeApplicationInstanceStatus"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/edge-apps"
                }
            }
        },
        "/v1/apps/instances/status": {
            "get": {
                "summary": "Query status of edge application instances",
                "description": "Query the status of edge application instances as reported by the edge nodes where the edge application instances have been deployed.",
                "operationId": "EdgeApplicationInstanceStatus_QueryEdgeApplicationInstanceStatus",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/AppInstStatusListMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request. The API gateway did not process the request because of invalid value of filter parameters.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "summary",
                        "description": "app instance summary flag",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "filter.appName",
                        "description": "User defined name of the app bundle, unique across the enterprise. Once app bundle is created, name can\u2019t be changed",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.runState",
                        "description": "aperation status\n\n - RUN_STATE_ONLINE: Entity Online\n - RUN_STATE_HALTED: Entity Halted\n - RUN_STATE_INIT: Entity Initializing\n - RUN_STATE_REBOOTING: Entity Rebooting\n - RUN_STATE_OFFLINE: Entity Offline\n - RUN_STATE_UNKNOWN: Entity state Unknown\n - RUN_STATE_UNPROVISIONED: Entity Unprovisioned\n - RUN_STATE_PROVISIONED: Entity Provisioned\n - RUN_STATE_SUSPECT: Entity Suspect\n - RUN_STATE_DOWNLOADING: Edge-node downloading entity artifacts\n - RUN_STATE_RESTARTING: Entity Restarting\n - RUN_STATE_PURGING: Entity Purging\n - RUN_STATE_HALTING: Entity Halting\n - RUN_STATE_ERROR: Entity encountered an error\n - RUN_STATE_VERIFYING: Verification of downloaded Artifacts in Progress.\n - RUN_STATE_LOADING: Loading of Artifacts into local datastore in Progress.\n - RUN_STATE_CREATING_VOLUME: Volume creation from artifacts in Progress\n - RUN_STATE_BOOTING: Entity booting up\n - RUN_STATE_MAINTENANCE_MODE: Entity maintenance mode\n - RUN_STATE_START_DELAYED: Application start delayed as per configuration\n - RUN_STATE_BASEOS_UPDATING: Device BaseOs Update in Progress\n - RUN_STATE_PREPARING_POWEROFF: device preparing power off - shutting down all app instances\n - RUN_STATE_POWERING_OFF: device powering off from local profile server\n - RUN_STATE_PREPARED_POWEROFF: device prepared power off - all app instances are shut down",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "RUN_STATE_UNSPECIFIED",
                            "RUN_STATE_ONLINE",
                            "RUN_STATE_HALTED",
                            "RUN_STATE_INIT",
                            "RUN_STATE_REBOOTING",
                            "RUN_STATE_OFFLINE",
                            "RUN_STATE_UNKNOWN",
                            "RUN_STATE_UNPROVISIONED",
                            "RUN_STATE_PROVISIONED",
                            "RUN_STATE_SUSPECT",
                            "RUN_STATE_DOWNLOADING",
                            "RUN_STATE_RESTARTING",
                            "RUN_STATE_PURGING",
                            "RUN_STATE_HALTING",
                            "RUN_STATE_ERROR",
                            "RUN_STATE_VERIFYING",
                            "RUN_STATE_LOADING",
                            "RUN_STATE_CREATING_VOLUME",
                            "RUN_STATE_BOOTING",
                            "RUN_STATE_MAINTENANCE_MODE",
                            "RUN_STATE_START_DELAYED",
                            "RUN_STATE_BASEOS_UPDATING",
                            "RUN_STATE_PREPARING_POWEROFF",
                            "RUN_STATE_POWERING_OFF",
                            "RUN_STATE_PREPARED_POWEROFF"
                        ],
                        "default": "RUN_STATE_UNSPECIFIED"
                    },
                    {
                        "name": "filter.deviceName",
                        "description": "User defined name of the device, unique across the enterprise. Once device is created, name can\u2019t be changed",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.projectName",
                        "description": "User defined name of the project, unique across the enterprise. Once project is created, name can\u2019t be changed",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.namePattern",
                        "description": "name pattern",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.appType",
                        "description": "type of app",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "APP_TYPE_UNSPECIFIED",
                            "APP_TYPE_VM",
                            "APP_TYPE_VM_RUNTIME",
                            "APP_TYPE_CONTAINER",
                            "APP_TYPE_MODULE"
                        ],
                        "default": "APP_TYPE_UNSPECIFIED"
                    },
                    {
                        "name": "filter.deploymentType",
                        "description": "type of deployment for the app, eg: azure, k3s, standalone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "DEPLOYMENT_TYPE_UNSPECIFIED",
                            "DEPLOYMENT_TYPE_STAND_ALONE",
                            "DEPLOYMENT_TYPE_AZURE",
                            "DEPLOYMENT_TYPE_K3S",
                            "DEPLOYMENT_TYPE_AWS",
                            "DEPLOYMENT_TYPE_K3S_AZURE",
                            "DEPLOYMENT_TYPE_K3S_AWS",
                            "DEPLOYMENT_TYPE_VMWARE_VCE"
                        ],
                        "default": "DEPLOYMENT_TYPE_UNSPECIFIED"
                    },
                    {
                        "name": "filter.projectNamePattern",
                        "description": "project name pattern",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.deviceNamePattern",
                        "description": "device name pattern",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "next.pageToken",
                        "description": "Page Token",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "next.orderBy",
                        "description": "OrderBy helps in sorting the list response",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "next.pageNum",
                        "description": "Page Number",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "next.pageSize",
                        "description": "Defines the page size",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "next.totalPages",
                        "description": "Total number of pages to be fetched.",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "fields",
                        "description": "Fields to select: id, name, deviceId, appId, tags, adminState, clusterID, runState, Memory, Storage, swState, Cpu, projectId, title, appType, deploymentType, memorySummary",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "EdgeApplicationInstanceStatus"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/edge-apps"
                }
            }
        },
        "/v1/apps/instances/status-config": {
            "get": {
                "summary": "Query status and config of edge application instances",
                "description": "Edge application instances status config API is a composite API for application instance config and application instance status",
                "operationId": "EdgeApplicationInstanceStatus_QueryEdgeApplicationInstanceStatusConfig",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/AppInstConfigStatusList"
                        }
                    },
                    "400": {
                        "description": "Bad Request. The API gateway did not process the request because of invalid value of filter parameters.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "summary",
                        "description": "app instance summary flag",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "filter.appName",
                        "description": "User defined name of the app bundle, unique across the enterprise. Once app bundle is created, name can\u2019t be changed",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.runState",
                        "description": "aperation status\n\n - RUN_STATE_ONLINE: Entity Online\n - RUN_STATE_HALTED: Entity Halted\n - RUN_STATE_INIT: Entity Initializing\n - RUN_STATE_REBOOTING: Entity Rebooting\n - RUN_STATE_OFFLINE: Entity Offline\n - RUN_STATE_UNKNOWN: Entity state Unknown\n - RUN_STATE_UNPROVISIONED: Entity Unprovisioned\n - RUN_STATE_PROVISIONED: Entity Provisioned\n - RUN_STATE_SUSPECT: Entity Suspect\n - RUN_STATE_DOWNLOADING: Edge-node downloading entity artifacts\n - RUN_STATE_RESTARTING: Entity Restarting\n - RUN_STATE_PURGING: Entity Purging\n - RUN_STATE_HALTING: Entity Halting\n - RUN_STATE_ERROR: Entity encountered an error\n - RUN_STATE_VERIFYING: Verification of downloaded Artifacts in Progress.\n - RUN_STATE_LOADING: Loading of Artifacts into local datastore in Progress.\n - RUN_STATE_CREATING_VOLUME: Volume creation from artifacts in Progress\n - RUN_STATE_BOOTING: Entity booting up\n - RUN_STATE_MAINTENANCE_MODE: Entity maintenance mode\n - RUN_STATE_START_DELAYED: Application start delayed as per configuration\n - RUN_STATE_BASEOS_UPDATING: Device BaseOs Update in Progress\n - RUN_STATE_PREPARING_POWEROFF: device preparing power off - shutting down all app instances\n - RUN_STATE_POWERING_OFF: device powering off from local profile server\n - RUN_STATE_PREPARED_POWEROFF: device prepared power off - all app instances are shut down",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "RUN_STATE_UNSPECIFIED",
                            "RUN_STATE_ONLINE",
                            "RUN_STATE_HALTED",
                            "RUN_STATE_INIT",
                            "RUN_STATE_REBOOTING",
                            "RUN_STATE_OFFLINE",
                            "RUN_STATE_UNKNOWN",
                            "RUN_STATE_UNPROVISIONED",
                            "RUN_STATE_PROVISIONED",
                            "RUN_STATE_SUSPECT",
                            "RUN_STATE_DOWNLOADING",
                            "RUN_STATE_RESTARTING",
                            "RUN_STATE_PURGING",
                            "RUN_STATE_HALTING",
                            "RUN_STATE_ERROR",
                            "RUN_STATE_VERIFYING",
                            "RUN_STATE_LOADING",
                            "RUN_STATE_CREATING_VOLUME",
                            "RUN_STATE_BOOTING",
                            "RUN_STATE_MAINTENANCE_MODE",
                            "RUN_STATE_START_DELAYED",
                            "RUN_STATE_BASEOS_UPDATING",
                            "RUN_STATE_PREPARING_POWEROFF",
                            "RUN_STATE_POWERING_OFF",
                            "RUN_STATE_PREPARED_POWEROFF"
                        ],
                        "default": "RUN_STATE_UNSPECIFIED"
                    },
                    {
                        "name": "filter.deviceName",
                        "description": "User defined name of the device, unique across the enterprise. Once device is created, name can\u2019t be changed",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.projectName",
                        "description": "User defined name of the project, unique across the enterprise. Once project is created, name can\u2019t be changed",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.namePattern",
                        "description": "name pattern",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.appType",
                        "description": "type of app",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "APP_TYPE_UNSPECIFIED",
                            "APP_TYPE_VM",
                            "APP_TYPE_VM_RUNTIME",
                            "APP_TYPE_CONTAINER",
                            "APP_TYPE_MODULE"
                        ],
                        "default": "APP_TYPE_UNSPECIFIED"
                    },
                    {
                        "name": "filter.deploymentType",
                        "description": "type of deployment for the app, eg: azure, k3s, standalone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "DEPLOYMENT_TYPE_UNSPECIFIED",
                            "DEPLOYMENT_TYPE_STAND_ALONE",
                            "DEPLOYMENT_TYPE_AZURE",
                            "DEPLOYMENT_TYPE_K3S",
                            "DEPLOYMENT_TYPE_AWS",
                            "DEPLOYMENT_TYPE_K3S_AZURE",
                            "DEPLOYMENT_TYPE_K3S_AWS",
                            "DEPLOYMENT_TYPE_VMWARE_VCE"
                        ],
                        "default": "DEPLOYMENT_TYPE_UNSPECIFIED"
                    },
                    {
                        "name": "filter.projectNamePattern",
                        "description": "project name pattern",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.deviceNamePattern",
                        "description": "device name pattern",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "next.pageToken",
                        "description": "Page Token",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "next.orderBy",
                        "description": "OrderBy helps in sorting the list response",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "next.pageNum",
                        "description": "Page Number",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "next.pageSize",
                        "description": "Defines the page size",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "next.totalPages",
                        "description": "Total number of pages to be fetched.",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "fields",
                        "description": "Fields to select: id, name, deviceId, appId, tags, adminState, clusterID, runState, Memory, Storage, swState, Cpu, projectId, title, appType, deploymentType, memorySummary",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "EdgeApplicationInstanceStatus"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/edge-apps"
                }
            }
        },
        "/v1/apps/instances/tags": {
            "get": {
                "summary": "Query Application instance tags",
                "description": "Application Instance tags LIST API is to fetch the interfaces tags attached to app instances.",
                "operationId": "EdgeApplicationInstanceStatus_GetApplicationInterfaceTags",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/ObjectTagsList"
                        }
                    },
                    "400": {
                        "description": "Bad Request. The API gateway did not process the request because of invalid value of filter parameters.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "filter.objId",
                        "description": "Object Id which tags are associated.",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.objName",
                        "description": "Object name which tags are associated.",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "next.pageToken",
                        "description": "Page Token",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "next.orderBy",
                        "description": "OrderBy helps in sorting the list response",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "next.pageNum",
                        "description": "Page Number",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "next.pageSize",
                        "description": "Defines the page size",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "next.totalPages",
                        "description": "Total number of pages to be fetched.",
                        "in": "query",
                        "required": false,
                        "type": "number",
                        "format": "int64"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "EdgeApplicationInstanceStatus"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/edge-apps"
                }
            }
        },
        "/v1/apps/name/{name}": {
            "get": {
                "summary": "Get edge application bundle",
                "description": "Get the configuration (without security details) of an edge application bundle record.",
                "operationId": "EdgeApplicationConfiguration_GetEdgeApplicationBundleByName",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/App"
                        }
                    },
                    "401": {
                        "description": "Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found. The API gateway did not process the request because the requested resource could not be found.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.",
                        "schema": {
                            "$ref": "#/definitions/ZsrvResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/googlerpcStatus"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "description": "User defined name of the edge application, unique across the enterprise. Once object is created, name can\u2019t be changed",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": false,
                        "description": "User-Agent specified id to track a request",
                        "type": "string"
                    }
                ],
                "tags": [
                    "EdgeApplicationConfiguration"
                ],
                "externalDocs": {
                    "description": "ZEDEDA Product Documentation",
                    "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/edge-apps"
                }
            }
        }
    },
    "definitions": {
        "Acl": {
            "type": "object",
            "properties": {
                "matches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Match"
                    },
                    "description": "Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port"
                },
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AclAction"
                    },
                    "description": "Chain of actions to be taken on matching network traffic"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Access Control List"
                }
            }
        },
        "AclAction": {
            "type": "object",
            "properties": {
                "drop": {
                    "type": "boolean",
                    "description": "Drop the packet",
                    "title": "Not used by ZedUI"
                },
                "limit": {
                    "type": "boolean",
                    "description": "UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane",
                    "title": "Limit action on ACL rule"
                },
                "limitValue": {
                    "$ref": "#/definitions/LimitParams",
                    "description": "Value to be used for limit action (Required if limit is true)",
                    "title": "only valid if limit flag is set, see below.\nNot used by ZedUI"
                },
                "limitrate": {
                    "type": "integer",
                    "format": "int64",
                    "description": "UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane",
                    "title": "Rate limit in ACL rule"
                },
                "limitunit": {
                    "type": "string",
                    "description": "UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane",
                    "title": "Rate limit unit in ACL rule"
                },
                "limitburst": {
                    "type": "integer",
                    "format": "int64",
                    "description": "UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane",
                    "title": "Rate limit burst in ACL rule"
                },
                "portmap": {
                    "type": "boolean",
                    "description": "UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane",
                    "title": "Enable device to app port mapping for incoming ACL rule, implicitly added by ZedUI code"
                },
                "portmapto": {
                    "$ref": "#/definitions/MapParams",
                    "description": "UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane",
                    "title": "Device to app port mapping for incoming ACL rule"
                }
            }
        },
        "ActionScope": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/definitions/ObjectType",
                    "description": "Scope of the action (e.g. project in case certificate expired at project level)"
                },
                "id": {
                    "type": "string",
                    "description": "Unique id of the type (e.g. projectId in case of project type)"
                }
            }
        },
        "AdminState": {
            "type": "string",
            "enum": [
                "ADMIN_STATE_UNSPECIFIED",
                "ADMIN_STATE_CREATED",
                "ADMIN_STATE_DELETED",
                "ADMIN_STATE_ACTIVE",
                "ADMIN_STATE_INACTIVE",
                "ADMIN_STATE_REGISTERED",
                "ADMIN_STATE_ARCHIVED"
            ],
            "default": "ADMIN_STATE_UNSPECIFIED",
            "description": "- ADMIN_STATE_CREATED: Entity Created in the controller\n - ADMIN_STATE_DELETED: Entity Deleted in the controller\n - ADMIN_STATE_ACTIVE: Entity Activated in the controller\n - ADMIN_STATE_INACTIVE: Entity Deactivated in the controller\n - ADMIN_STATE_REGISTERED: Specific to Edge-node - Edge-node Registered with the controller\n - ADMIN_STATE_ARCHIVED: Entity Archived in the controller",
            "title": "Configured state of an object"
        },
        "App": {
            "type": "object",
            "example": {
                "name": "sample-app",
                "title": "Sample Edge Applications",
                "originType": "ORIGIN_LOCAL"
            },
            "properties": {
                "id": {
                    "type": "string",
                    "description": "System defined universally unique Id of the edge application",
                    "readOnly": true,
                    "pattern": "[0-9A-Za-z-]+",
                    "uniqueItems": true
                },
                "name": {
                    "type": "string",
                    "description": "User defined name of the edge application, unique across the enterprise. Once object is created, name can\u2019t be changed",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                    "uniqueItems": true
                },
                "title": {
                    "type": "string",
                    "description": "User defined title of the edge application. Title can be changed at any time",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "^[a-zA-Z0-9]+[a-zA-Z0-9!-~ ]+$"
                },
                "description": {
                    "type": "string",
                    "description": "Detailed description of the edge application",
                    "maxLength": 256
                },
                "revision": {
                    "$ref": "#/definitions/ObjectRevision",
                    "description": "system defined info"
                },
                "networks": {
                    "type": "integer",
                    "format": "int64",
                    "description": "user defined network options"
                },
                "drives": {
                    "type": "integer",
                    "format": "int64",
                    "description": "user defined drives",
                    "readOnly": true
                },
                "cpus": {
                    "type": "integer",
                    "format": "int64",
                    "description": "user defined cpus for bundle"
                },
                "memory": {
                    "type": "integer",
                    "format": "int64",
                    "description": "user defined memory for bundle"
                },
                "manifestJSON": {
                    "$ref": "#/definitions/VMManifest",
                    "description": "user defined manifest in JSON format"
                },
                "parentDetail": {
                    "$ref": "#/definitions/ObjectParentDetail",
                    "description": "origin and parent related details"
                },
                "originType": {
                    "$ref": "#/definitions/Origin",
                    "description": "origin of object"
                },
                "storage": {
                    "type": "integer",
                    "format": "int64",
                    "description": "user defined storage for bundle"
                },
                "userDefinedVersion": {
                    "type": "string",
                    "description": "User defined version for the given edge-app"
                },
                "projectAccessList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "project access list of the app bundle"
                },
                "isImported": {
                    "type": "boolean",
                    "description": "Flag to represent where app bundle is already imported"
                }
            },
            "description": "Edge application gets installed/uninstalled to/from edge node(s) and perform specific edge computing tasks. Lifecycle of Edge application (upgrade/restart) on Edge node can be managed and monitored by ZEDEDA Cloud controller through this detailed configuration.",
            "title": "Edge application detailed configuration",
            "required": [
                "name",
                "title",
                "originType"
            ]
        },
        "AppCategory": {
            "type": "string",
            "enum": [
                "APP_CATEGORY_UNSPECIFIED",
                "APP_CATEGORY_OPERATING_SYSTEM",
                "APP_CATEGORY_INDUSTRIAL",
                "APP_CATEGORY_EDGE_APPLICATION",
                "APP_CATEGORY_NETWORKING",
                "APP_CATEGORY_SECURITY",
                "APP_CATEGORY_DATA_ANALYTICS",
                "APP_CATEGORY_CLOUD_APPLICATION",
                "APP_CATEGORY_DEVOPS",
                "APP_CATEGORY_OTHERS"
            ],
            "default": "APP_CATEGORY_UNSPECIFIED",
            "description": "- APP_CATEGORY_UNSPECIFIED: Invalid Edge Application Category\n - APP_CATEGORY_OPERATING_SYSTEM: Edge operating systems\n - APP_CATEGORY_INDUSTRIAL: Connectity solution for industrial protocols\n - APP_CATEGORY_EDGE_APPLICATION: Edge application framework featuring composite functions for data ingestion, buffering, analytics and export\n - APP_CATEGORY_NETWORKING: Edge networking services (e.g. SD-WAN, NFV)\n - APP_CATEGORY_SECURITY: Edge security services (e.g. protocol inspection, firewall)\n - APP_CATEGORY_DATA_ANALYTICS: Edge analytics (e.g. AI/ML) and data management (e.g. database, connectors) services\n - APP_CATEGORY_CLOUD_APPLICATION: Edge application runtimes, cloud connectivity and general application enablement\n - APP_CATEGORY_DEVOPS: Tools for Edge Application CI/CD and performance optimization\n - APP_CATEGORY_OTHERS: Miscellaneous functionality",
            "title": "Edge Application Category"
        },
        "AppFilter": {
            "type": "object",
            "properties": {
                "namePattern": {
                    "type": "string",
                    "description": "Search * namePattern * in name field to filter records",
                    "title": "query param : \"name-pattern\" "
                },
                "originType": {
                    "$ref": "#/definitions/Origin",
                    "description": "origin of bundle"
                },
                "category": {
                    "type": "string",
                    "description": "category type of the bundle"
                },
                "appCategory": {
                    "type": "string",
                    "$ref": "#/definitions/AppCategory",
                    "description": "category type of the bundle"
                },
                "appType": {
                    "$ref": "#/definitions/AppType",
                    "description": "app type, eg: vm, container, module"
                },
                "deploymentType": {
                    "$ref": "#/definitions/DeploymentType",
                    "description": "type of deployment for the app, eg: azure, k3s, standalone"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AppCategory"
                    },
                    "description": "category types of the bundle"
                }
            }
        },
        "AppInstConfigStatusList": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appInstConfigStatus"
                    },
                    "description": "app instance status summary"
                },
                "summaryByState": {
                    "$ref": "#/definitions/Summary",
                    "description": "app instance status by state"
                },
                "totalCount": {
                    "type": "integer",
                    "format": "int64",
                    "description": "total number of records"
                },
                "summaryByAppType": {
                    "$ref": "#/definitions/Summary",
                    "description": "app instance summary by application type"
                },
                "next": {
                    "$ref": "#/definitions/Cursor",
                    "description": "cursor next"
                }
            },
            "description": "AppInstConfigStatusList is used for listing the app instance statuses",
            "title": "App instance config status list"
        },
        "AppInstFilter": {
            "type": "object",
            "properties": {
                "projectName": {
                    "type": "string",
                    "description": "User defined name of the project, unique across the enterprise. Once project is created, name can\u2019t be changed",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                    "uniqueItems": true
                },
                "appName": {
                    "type": "string",
                    "description": "User defined name of the app instance, unique across the enterprise. Once app instance is created, name can\u2019t be changed",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                    "uniqueItems": true
                },
                "deviceName": {
                    "type": "string",
                    "description": "User defined name of the device, unique across the enterprise. Once device is created, name can\u2019t be changed",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                    "uniqueItems": true
                },
                "namePattern": {
                    "type": "string",
                    "description": "name pattern"
                },
                "appType": {
                    "$ref": "#/definitions/AppType",
                    "description": "type of bundle"
                },
                "deploymentType": {
                    "$ref": "#/definitions/DeploymentType",
                    "description": "type of deployment for the app, eg: azure, k3s, standalone"
                },
                "projectNamePattern": {
                    "type": "string",
                    "description": "project name pattern"
                },
                "deviceNamePattern": {
                    "type": "string",
                    "description": "device name pattern"
                }
            }
        },
        "AppInstMemorySummary": {
            "type": "object",
            "properties": {
                "AllocatedMB": {
                    "type": "number",
                    "format": "double",
                    "description": "Total memory allocated for the App instance.",
                    "title": "AllocatedMB - Total memory allocated to the App Instance.\nNormally, AllocatedMB >= UsedMB + AvailableMB"
                },
                "UsedMB": {
                    "type": "number",
                    "format": "double",
                    "description": "Total memory used by the App within allocated memory"
                },
                "AvailableMB": {
                    "type": "number",
                    "format": "double",
                    "description": "Available / Free memory in the App"
                }
            },
            "description": "Memory Information for the App Instance.",
            "title": "App Instance Memory Summary"
        },
        "AppInstStatusFilter": {
            "type": "object",
            "properties": {
                "appName": {
                    "type": "string",
                    "description": "User defined name of the app bundle, unique across the enterprise. Once app bundle is created, name can\u2019t be changed",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                    "uniqueItems": true
                },
                "runState": {
                    "$ref": "#/definitions/RunState",
                    "description": "aperation status"
                },
                "deviceName": {
                    "type": "string",
                    "description": "User defined name of the device, unique across the enterprise. Once device is created, name can\u2019t be changed",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                    "uniqueItems": true
                },
                "projectName": {
                    "type": "string",
                    "description": "User defined name of the project, unique across the enterprise. Once project is created, name can\u2019t be changed",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                    "uniqueItems": true
                },
                "namePattern": {
                    "type": "string",
                    "description": "name pattern"
                },
                "appType": {
                    "$ref": "#/definitions/AppType",
                    "description": "type of app"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "deploymentType": {
                    "$ref": "#/definitions/DeploymentType",
                    "description": "type of deployment for the app, eg: azure, k3s, standalone"
                },
                "projectNamePattern": {
                    "type": "string",
                    "description": "project name pattern"
                },
                "deviceNamePattern": {
                    "type": "string",
                    "description": "device name pattern"
                }
            }
        },
        "AppInstStatusListMsg": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AppInstStatusSummaryMsg"
                    },
                    "description": "app instance status summary"
                },
                "summaryByState": {
                    "$ref": "#/definitions/Summary",
                    "description": "app instance status by state"
                },
                "summaryByAppType": {
                    "$ref": "#/definitions/Summary",
                    "description": "app instance summary by application type"
                },
                "next": {
                    "$ref": "#/definitions/Cursor",
                    "description": "cursor next"
                }
            },
            "description": "AppInstStatusListMsg is used for listing the app instance statuses",
            "title": "App instance status list"
        },
        "AppInstStatusMsg": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "app instance id"
                },
                "name": {
                    "type": "string",
                    "description": "User defined name of the app instance, unique across the enterprise. Once app instance is created, name can\u2019t be changed",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                    "uniqueItems": true
                },
                "deviceId": {
                    "type": "string",
                    "description": "User defined name of the device, unique across the enterprise. Once device is created, name can\u2019t be changed",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                    "uniqueItems": true
                },
                "appId": {
                    "type": "string",
                    "description": "User defined name of the edge app, unique across the enterprise. Once edge app is created, name can\u2019t be changed",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                    "uniqueItems": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.",
                    "maxLength": 32,
                    "pattern": "^[^<%&?/\\>]+$"
                },
                "adminState": {
                    "$ref": "#/definitions/AdminState",
                    "description": "App instance status"
                },
                "errInfo": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DeviceError"
                    },
                    "description": "Device error details"
                },
                "bootTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "device boot time"
                },
                "lastUpdate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "device last update time"
                },
                "IoStatusList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IoBundleStatus"
                    },
                    "description": "Io bundle status list"
                },
                "swInfo": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SWInfo"
                    },
                    "description": "Software details"
                },
                "runState": {
                    "$ref": "#/definitions/RunState",
                    "description": "app instance state"
                },
                "netCounterList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NetworkCounters"
                    },
                    "description": "network counter list"
                },
                "Memory": {
                    "$ref": "#/definitions/MemorySummary",
                    "description": "memory summary"
                },
                "Storage": {
                    "$ref": "#/definitions/StorageSummary",
                    "description": "storage summary"
                },
                "netStatusList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NetworkStatus"
                    },
                    "description": "network status list"
                },
                "upTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "device up time"
                },
                "swState": {
                    "$ref": "#/definitions/SWState",
                    "description": "software state"
                },
                "Cpu": {
                    "$ref": "#/definitions/CpuSummary",
                    "description": "SPU details"
                },
                "projectId": {
                    "type": "string",
                    "description": "User defined name of the project, unique across the enterprise. Once project is created, name can\u2019t be changed",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                    "uniqueItems": true
                },
                "title": {
                    "type": "string",
                    "description": "app instance status title"
                },
                "appStatusFromTPController": {
                    "$ref": "#/definitions/AppStatusFromTPController",
                    "description": "app status from third party controller"
                },
                "appType": {
                    "$ref": "#/definitions/AppType",
                    "description": "type of app"
                },
                "clusterId": {
                    "type": "string",
                    "description": "System defined universally unique clusterInstance ID, unique across the enterprise.",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                    "uniqueItems": true
                },
                "deploymentType": {
                    "$ref": "#/definitions/DeploymentType",
                    "description": "type of deployment for the app, eg: azure, k3s, standalone"
                },
                "memorySummary": {
                    "$ref": "#/definitions/AppInstMemorySummary",
                    "description": "memory summary"
                },
                "volumeRefs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "list of volume ids attached"
                },
                "zpoolMetrics": {
                    "$ref": "#/definitions/StorageDeviceMetrics",
                    "description": "Last received counters for zvol metrics"
                }
            },
            "description": "AppInstanceStatusMsg encapsulates the status of an app instance",
            "title": "App instance status message"
        },
        "AppInstStatusSummaryMsg": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "System defined universally unique Id of the app instance",
                    "readOnly": true,
                    "pattern": "[0-9A-Za-z-]+",
                    "uniqueItems": true
                },
                "name": {
                    "type": "string",
                    "description": "User defined name of the app instance, unique across the enterprise. Once app instance is created, name can\u2019t be changed",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                    "uniqueItems": true
                },
                "deviceId": {
                    "type": "string",
                    "description": "User defined name of the device, unique across the enterprise. Once device is created, name can\u2019t be changed",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                    "uniqueItems": true
                },
                "appId": {
                    "type": "string",
                    "description": "User defined name of the edge app, unique across the enterprise. Once edge app is created, name can\u2019t be changed",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                    "uniqueItems": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.",
                    "maxLength": 32,
                    "pattern": "^[^<%&?/\\>]+$"
                },
                "adminState": {
                    "$ref": "#/definitions/AdminState",
                    "description": "SPU details"
                },
                "clusterID": {
                    "type": "string",
                    "description": "System defined universally unique clusterInstance ID, unique across the enterprise.",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                    "uniqueItems": true
                },
                "runState": {
                    "$ref": "#/definitions/RunState",
                    "description": "operation status"
                },
                "Memory": {
                    "$ref": "#/definitions/MemorySummary",
                    "description": "memory summary"
                },
                "Storage": {
                    "$ref": "#/definitions/StorageSummary",
                    "description": "storage summary"
                },
                "swState": {
                    "$ref": "#/definitions/SWState",
                    "description": "sotware state"
                },
                "Cpu": {
                    "$ref": "#/definitions/CpuSummary",
                    "description": "cpu summary"
                },
                "projectId": {
                    "type": "string",
                    "description": "User defined name of the project, unique across the enterprise. Once project is created, name can\u2019t be changed",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                    "uniqueItems": true
                },
                "title": {
                    "type": "string",
                    "description": "User defined title of the app instance. Title can be changed at any time",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "^[a-zA-Z0-9]+[a-zA-Z0-9!-~ ]+$"
                },
                "appType": {
                    "$ref": "#/definitions/AppType",
                    "description": "type of app"
                },
                "deploymentType": {
                    "$ref": "#/definitions/DeploymentType",
                    "description": "type of deployment for the app, eg: azure, k3s, standalone"
                },
                "memorySummary": {
                    "$ref": "#/definitions/AppInstMemorySummary",
                    "description": "memory summary"
                },
                "swInfo": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SWInfo"
                    },
                    "description": "Software details"
                },
                "appName": {
                    "type": "string",
                    "description": "User defined name of the edge app, unique across the enterprise. Once edge app is created, name can\u2019t be changed",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                    "uniqueItems": true
                },
                "projectName": {
                    "type": "string",
                    "description": "User defined name of the project, unique across the enterprise. Once project is created, name can\u2019t be changed",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                    "uniqueItems": true
                },
                "deviceName": {
                    "type": "string",
                    "description": "User defined name of the device, unique across the enterprise. Once device is created, name can\u2019t be changed",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                    "uniqueItems": true
                }
            },
            "description": "AppInstStatusSummaryMsg stores the summary of the app instance status",
            "title": "App instance status summary"
        },
        "AppInstance": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "System defined universally unique Id of the app instance",
                    "readOnly": true,
                    "pattern": "[0-9A-Za-z-]+",
                    "uniqueItems": true
                },
                "name": {
                    "type": "string",
                    "description": "User defined name of the app instance, unique across the enterprise. Once app instance is created, name can\u2019t be changed",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                    "uniqueItems": true
                },
                "title": {
                    "type": "string",
                    "description": "User defined title of the app instance. Title can be changed at any time",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "^[a-zA-Z0-9]+[a-zA-Z0-9!-~ ]+$"
                },
                "description": {
                    "type": "string",
                    "description": "Detailed description of the app instance",
                    "maxLength": 256
                },
                "revision": {
                    "$ref": "#/definitions/ObjectRevision",
                    "description": "app instance object revision details"
                },
                "projectId": {
                    "type": "string",
                    "description": "project name which the given app instance belong to"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.",
                    "maxLength": 32,
                    "pattern": "^[^<%&?/\\>]+$"
                },
                "clusterID": {
                    "type": "string",
                    "description": "System defined universally unique clusterInstance ID, unique across the enterprise.",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                    "uniqueItems": true
                },
                "appId": {
                    "type": "string",
                    "description": "User defined name of the edge app, unique across the enterprise. Once app name is created, name can\u2019t be changed",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                    "uniqueItems": true
                },
                "deviceId": {
                    "type": "string",
                    "description": "User defined name of the device name, unique across the enterprise. Once device name is defined, name can\u2019t be changed",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                    "uniqueItems": true
                },
                "activate": {
                    "type": "string",
                    "description": "app instance activation flag"
                },
                "vminfo": {
                    "$ref": "#/definitions/vm",
                    "description": "virtual machine info"
                },
                "drives": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/drive"
                    },
                    "description": "drive details"
                },
                "interfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appInterface"
                    },
                    "description": "application interfaces"
                },
                "userData": {
                    "type": "string",
                    "description": "Deprecated: Application initiazation script in cloud-config format to be used by cloud-init"
                },
                "customConfig": {
                    "$ref": "#/definitions/CustomConfig",
                    "description": "Application initialization script template in cloud-config format and user specified values"
                },
                "collectStatsIPAddr": {
                    "type": "string",
                    "description": "holds the static Ip of the app instance"
                },
                "bundleversion": {
                    "type": "string",
                    "description": "version of bundle app is referring to"
                },
                "logs": {
                    "$ref": "#/definitions/AppInstanceLogs",
                    "description": "App Instance logs"
                },
                "restart": {
                    "$ref": "#/definitions/ZedCloudOpsCmd",
                    "description": "Restart counter: ZedCloudOpsCmd"
                },
                "refresh": {
                    "$ref": "#/definitions/ZedCloudOpsCmd",
                    "description": "Refresh counter: ZedCloudOpsCmd"
                },
                "purge": {
                    "$ref": "#/definitions/ZedCloudOpsCmd",
                    "description": "Purge counter: ZedCloudOpsCmd"
                },
                "remoteConsole": {
                    "type": "boolean",
                    "description": "Remote console flag"
                },
                "encryptedSecrets": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "user encrypted secrets map"
                },
                "cryptoKey": {
                    "type": "string",
                    "description": "Crypto Key for decrypting user secret information"
                },
                "manifestInfo": {
                    "$ref": "#/definitions/ManifestInfo",
                    "description": "app manifest Info"
                },
                "appType": {
                    "$ref": "#/definitions/AppType",
                    "description": "type of bundle"
                },
                "isSecretUpdated": {
                    "type": "boolean",
                    "description": "This field tells whether user secrets has updated or not, especially the cusotom config"
                },
                "appPolicyId": {
                    "type": "string",
                    "description": "app policy id"
                },
                "deploymentType": {
                    "$ref": "#/definitions/DeploymentType",
                    "description": "type of deployment for the app, eg: azure, k3s, standalone"
                },
                "userDefinedVersion": {
                    "type": "string",
                    "description": "Instance version tells which edge app does this instance is running"
                },
                "startDelayInSeconds": {
                    "type": "integer",
                    "format": "int64",
                    "description": "start delay is the time in seconds EVE should wait after boot before starting the application instance"
                }
            },
            "description": "App Instance detail",
            "title": "App Instance detail",
            "required": [
                "name",
                "title",
                "projectId",
                "appId",
                "deviceId",
                "activate",
                "drives",
                "interfaces"
            ]
        },
        "AppInstanceLogs": {
            "type": "object",
            "properties": {
                "access": {
                    "type": "string",
                    "description": "Flags to enable / disable sending of logs generated by app instance to zedcloud"
                }
            },
            "description": "App Instance Logs configuration",
            "title": "App Instance Logs configuration",
            "required": [
                "access"
            ]
        },
        "AppInstanceLogsQueryResponse": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AppInstanceLogsQueryResponseItem"
                    },
                    "description": "app instance logs query response"
                },
                "totalRecords": {
                    "type": "number",
                    "format": "int64",
                    "description": "app instance logs query response"
                },
                "next": {
                    "$ref": "#/definitions/Cursor",
                    "description": "next cursor"
                }
            },
            "description": "AppInstanceLogsQueryResponse is used as response for querying app instance logs",
            "title": "App instance logs query response"
        },
        "AppInstanceLogsQueryResponseItem": {
            "type": "object",
            "properties": {
                "msgid": {
                    "type": "string",
                    "format": "uint64",
                    "description": "message Id"
                },
                "content": {
                    "type": "string",
                    "description": "app instance logs"
                },
                "timestamp": {
                    "type": "string",
                    "format": "date-time",
                    "description": "timestamp of query time"
                }
            },
            "description": "AppInstanceLogsQueryResponseItem is used as the response for querying the logs of app instance",
            "title": "App instance query log response"
        },
        "AppInstanceLogsResponse": {
            "type": "object",
            "properties": {
                "result": {
                    "$ref": "#/definitions/ZsrvResponse"
                },
                "content": {
                    "$ref": "#/definitions/AppInstanceLogsQueryResponse"
                }
            }
        },
        "AppInstances": {
            "type": "object",
            "properties": {
                "summaryByState": {
                    "$ref": "#/definitions/Summary",
                    "description": "app instance by summary"
                },
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AppInstance"
                    },
                    "description": "app insatance list response"
                },
                "next": {
                    "$ref": "#/definitions/Cursor",
                    "description": "cursor next"
                }
            }
        },
        "AppProjectList": {
            "type": "object",
            "properties": {
                "projectDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ObjectDetail"
                    },
                    "description": "List of projects which are associated with the given app"
                },
                "totalCount": {
                    "type": "integer",
                    "format": "int64",
                    "description": "total number of records"
                },
                "next": {
                    "$ref": "#/definitions/Cursor",
                    "description": "Responded page details of filtered records"
                }
            }
        },
        "AppStatusFromTPController": {
            "type": "object",
            "properties": {
                "appName": {
                    "type": "string"
                },
                "appId": {
                    "type": "string"
                },
                "eveDeviceId": {
                    "type": "string"
                },
                "enterpriseId": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/ControllerType"
                },
                "azureStatus": {
                    "$ref": "#/definitions/AzureStatus"
                },
                "vceStatus": {
                    "$ref": "#/definitions/VCEStatus"
                }
            }
        },
        "AppSummary": {
            "type": "object",
            "example": {
                "id": "d85a545f-6510-4327-b03d-c02eef119e99",
                "name": "sample-app"
            },
            "properties": {
                "id": {
                    "type": "string",
                    "description": "System defined universally unique Id of the edge application",
                    "readOnly": true,
                    "pattern": "[0-9A-Za-z-]+",
                    "uniqueItems": true
                },
                "name": {
                    "type": "string",
                    "description": "User defined name of the edge application, unique across the enterprise. Once object is created, name can\u2019t be changed",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                    "uniqueItems": true
                },
                "title": {
                    "type": "string",
                    "description": "User defined title of the edge application. Title can be changed at any time",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "^[a-zA-Z0-9]+[a-zA-Z0-9!-~ ]+$"
                },
                "description": {
                    "type": "string",
                    "description": "Detailed description of the edge application",
                    "maxLength": 256
                },
                "manifestJSON": {
                    "$ref": "#/definitions/VMManifestSummary"
                },
                "parentDetail": {
                    "$ref": "#/definitions/ObjectParentDetail",
                    "description": "origin and parent related details"
                },
                "originType": {
                    "type": "object",
                    "$ref": "#/definitions/Origin",
                    "description": "origin of object",
                    "required": [
                        "true"
                    ]
                },
                "networks": {
                    "type": "integer",
                    "format": "int64",
                    "description": "user defined network options"
                },
                "drives": {
                    "type": "integer",
                    "format": "int64",
                    "description": "user defined drives",
                    "readOnly": true
                },
                "cpus": {
                    "type": "integer",
                    "format": "int64",
                    "description": "user defined cpus for bundle"
                },
                "memory": {
                    "type": "integer",
                    "format": "int64",
                    "description": "user defined memory for bundle"
                },
                "storage": {
                    "type": "integer",
                    "format": "int64",
                    "description": "user defined storage for bundle"
                },
                "userDefinedVersion": {
                    "type": "string",
                    "description": "User defined version for the given edge-app"
                },
                "appInstCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "App instance count"
                },
                "isImported": {
                    "type": "boolean",
                    "description": "Flag to represent where app bundle is already imported"
                }
            },
            "description": "Edge application summary",
            "title": "Bundle summary",
            "required": [
                "originType"
            ]
        },
        "AppType": {
            "type": "string",
            "enum": [
                "APP_TYPE_UNSPECIFIED",
                "APP_TYPE_VM",
                "APP_TYPE_VM_RUNTIME",
                "APP_TYPE_CONTAINER",
                "APP_TYPE_MODULE"
            ],
            "default": "APP_TYPE_UNSPECIFIED",
            "description": "type of app bundle."
        },
        "Apps": {
            "type": "object",
            "properties": {
                "next": {
                    "$ref": "#/definitions/Cursor",
                    "description": "cursor next"
                },
                "summaryByCategory": {
                    "$ref": "#/definitions/Summary",
                    "description": "edge applications by category"
                },
                "summaryByOrigin": {
                    "$ref": "#/definitions/Summary",
                    "description": "edge applications by origin"
                },
                "summaryByAppType": {
                    "$ref": "#/definitions/Summary",
                    "description": "edge applications by appType"
                },
                "summaryByAppInstanceDistribution": {
                    "$ref": "#/definitions/Summary",
                    "description": "app distribution summary"
                },
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AppSummary"
                    },
                    "description": "edge application summary list"
                }
            }
        },
        "Author": {
            "type": "object",
            "properties": {
                "user": {
                    "type": "string",
                    "description": "UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field",
                    "title": "Name of the developer"
                },
                "group": {
                    "type": "string",
                    "title": "Not used by ZedUI"
                },
                "company": {
                    "type": "string",
                    "description": "UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field",
                    "title": "Company of the developer"
                },
                "website": {
                    "type": "string",
                    "description": "UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field",
                    "title": "Website of the developer company"
                },
                "email": {
                    "type": "string",
                    "description": "UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field",
                    "title": "Contact email of the developer company"
                }
            }
        },
        "AzureDevStatusDetail": {
            "type": "object",
            "properties": {
                "oState": {
                    "type": "string"
                },
                "aState": {
                    "type": "string"
                },
                "connectionStateUpdatedTime": {
                    "type": "string"
                },
                "twin": {
                    "$ref": "#/definitions/TwinDetail"
                },
                "lastActivityTime": {
                    "type": "string"
                },
                "statusUpdateTime": {
                    "type": "string"
                }
            }
        },
        "AzureStatus": {
            "type": "object",
            "properties": {
                "azureDevStatus": {
                    "$ref": "#/definitions/AzureDevStatusDetail"
                }
            },
            "description": "status of device from azure."
        },
        "ClassificationItem": {
            "type": "object",
            "properties": {
                "sourceNode": {
                    "type": "string"
                },
                "destNode": {
                    "type": "string"
                },
                "metricValue": {
                    "type": "string",
                    "format": "uint64"
                },
                "level": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ClassificationResponse": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ClassificationItem"
                    }
                }
            }
        },
        "ContainerDetail": {
            "type": "object",
            "properties": {
                "containerCreateOption": {
                    "type": "string",
                    "description": "Create options direct the creation of the Docker container",
                    "title": "Base64 encoded container specific details"
                }
            },
            "description": "common container detail."
        },
        "ControllerType": {
            "type": "string",
            "enum": [
                "CONTROLLER_TYPE_UNSPECIFIED",
                "CONTROLLER_TYPE_AZURE",
                "CONTROLLER_TYPE_AWS",
                "CONTROLLER_TYPE_GCP",
                "CONTROLLER_TYPE_VCO"
            ],
            "default": "CONTROLLER_TYPE_UNSPECIFIED",
            "description": "third party controller types."
        },
        "CpuSummary": {
            "type": "object",
            "properties": {
                "Utilization": {
                    "type": "number",
                    "format": "double",
                    "description": "CPU Utilization"
                }
            },
            "description": "CPU Summary",
            "title": "CPU Summary"
        },
        "Cursor": {
            "type": "object",
            "properties": {
                "pageToken": {
                    "type": "string",
                    "description": "Page Token"
                },
                "orderBy": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "OrderBy helps in sorting the list response"
                },
                "pageNum": {
                    "type": "number",
                    "format": "int64",
                    "description": "Page Number"
                },
                "pageSize": {
                    "type": "number",
                    "format": "int64",
                    "description": "Defines the page size"
                },
                "totalPages": {
                    "type": "number",
                    "format": "int64",
                    "description": "Total number of pages to be fetched."
                }
            },
            "description": "Cursor helps in filtering the various list response like edge-app bundle list, model list, bundle list etc. ",
            "title": "Cursor is used as filter in list operation."
        },
        "CustomConfig": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of CustomConfig (Required)"
                },
                "add": {
                    "type": "boolean",
                    "description": "Add the Custom Config to App Instance (Optional. Default: False)"
                },
                "override": {
                    "type": "boolean",
                    "description": "Override existing custom config from App Bundle Manifest (Optional. Default: False)"
                },
                "allowStorageResize": {
                    "type": "boolean",
                    "description": "Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)"
                },
                "fieldDelimiter": {
                    "type": "string",
                    "description": "Field delimiter used in specifying variables in template. (Required)"
                },
                "template": {
                    "type": "string",
                    "description": "base64 encrypted template string. (Optional)"
                },
                "variableGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomConfigVariableGroup"
                    },
                    "description": "List of Variable groups. (Required)"
                }
            }
        },
        "CustomConfigVariableGroup": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the Variable Group(Required)"
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VariableGroupVariable"
                    },
                    "description": "List of variables(Required)"
                },
                "required": {
                    "type": "boolean",
                    "description": "Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)"
                },
                "condition": {
                    "$ref": "#/definitions/VariableGroupCondition",
                    "description": "Condition to apply the variable group. (Optional. Default: None)"
                }
            }
        },
        "DNSInfo": {
            "type": "object",
            "properties": {
                "servers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of dns server"
                },
                "domain": {
                    "type": "string",
                    "description": "domain name"
                },
                "search": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of search strings"
                }
            },
            "description": "DNSInfo is used to store Domain Name Server configuration. ",
            "title": "DNSInfo consists of DNS Configurations.",
            "required": [
                "servers",
                "domain",
                "search"
            ]
        },
        "DeploymentType": {
            "type": "string",
            "enum": [
                "DEPLOYMENT_TYPE_UNSPECIFIED",
                "DEPLOYMENT_TYPE_STAND_ALONE",
                "DEPLOYMENT_TYPE_AZURE",
                "DEPLOYMENT_TYPE_K3S",
                "DEPLOYMENT_TYPE_AWS",
                "DEPLOYMENT_TYPE_K3S_AZURE",
                "DEPLOYMENT_TYPE_K3S_AWS",
                "DEPLOYMENT_TYPE_VMWARE_VCE"
            ],
            "default": "DEPLOYMENT_TYPE_UNSPECIFIED"
        },
        "Details": {
            "type": "object",
            "example": {
                "appCategory": "APP_CATEGORY_CLOUD_APPLICATION",
                "os": "Linux"
            },
            "properties": {
                "category": {
                    "type": "string",
                    "default": "All",
                    "description": "UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField",
                    "title": "Type of the Edge application"
                },
                "os": {
                    "type": "string",
                    "title": "Edge application's Operating System"
                },
                "appCategory": {
                    "$ref": "#/definitions/AppCategory",
                    "default": "APP_CATEGORY_OTHERS",
                    "title": "Edge application category"
                },
                "logo": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo",
                    "title": "App Logo"
                },
                "screenshotList": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields",
                    "title": "App Screenshots"
                },
                "licenseList": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License",
                    "title": "App Licenses"
                },
                "support": {
                    "type": "string",
                    "description": "UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field",
                    "title": "Support Description"
                },
                "agreementList": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field",
                    "title": "Developer Agreements"
                }
            },
            "description": "Edge Application Artifact Details",
            "title": "Edge Application detail",
            "required": [
                "appCategory"
            ]
        },
        "DeviceEntity": {
            "type": "object",
            "properties": {
                "entity": {
                    "$ref": "#/definitions/Entity"
                },
                "entityId": {
                    "type": "string"
                },
                "entityName": {
                    "type": "string"
                }
            }
        },
        "DeviceError": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the error"
                },
                "severity": {
                    "type": "string",
                    "$ref": "#/definitions/Severity",
                    "description": "Severity of the error"
                },
                "timestamp": {
                    "type": "object",
                    "format": "date-time",
                    "description": "Timestamp at which error had occurred"
                },
                "entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DeviceEntity"
                    },
                    "description": "objects referenced by the description or retry_condition"
                },
                "retryCondition": {
                    "type": "string",
                    "description": "condition for retry"
                }
            },
            "description": "DeviceError store the error occurred at the device side",
            "title": "DeviceError is used to store the error details of the hardware.",
            "required": [
                "description",
                "severity",
                "timestamp",
                "entities"
            ]
        },
        "EIDRegister": {
            "type": "object",
            "properties": {
                "AppCert": {
                    "type": "string",
                    "format": "byte",
                    "description": "app certificate"
                },
                "AppPublicKey": {
                    "type": "string",
                    "format": "byte",
                    "description": "App public key"
                },
                "AppPrivateKey": {
                    "type": "string",
                    "format": "byte",
                    "description": "App private key"
                },
                "UUID": {
                    "type": "string",
                    "description": "UUID"
                },
                "DisplayName": {
                    "type": "string",
                    "description": "Display name"
                },
                "LispInstance": {
                    "type": "number",
                    "format": "int64",
                    "description": "Lisp Instance"
                },
                "EID": {
                    "type": "string",
                    "description": "EID"
                },
                "EIDHashLen": {
                    "type": "number",
                    "format": "int64",
                    "description": "EID hash length"
                },
                "LispSignature": {
                    "type": "string",
                    "description": "Lisp Signature"
                },
                "LispMapServers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LispServer"
                    },
                    "description": "Lisp Map Server",
                    "title": "time CreateTime     time.Time"
                }
            },
            "description": "EID Register",
            "title": "EID Register detail",
            "required": [
                "AppCert",
                "AppPublicKey",
                "AppPrivateKey",
                "UUID",
                "DisplayName",
                "LispInstance",
                "EID",
                "EIDHashLen",
                "LispSignature",
                "LispMapServers"
            ]
        },
        "Entity": {
            "type": "string",
            "enum": [
                "ENTITY_UNSPECIFIED",
                "ENTITY_BASE_OS",
                "ENTITY_SYSTEM_ADAPTER",
                "ENTITY_VAULT",
                "ENTITY_ATTESTATION",
                "ENTITY_APP_INSTANCE",
                "ENTITY_PORT",
                "ENTITY_NETWORK",
                "ENTITY_NETWORK_INSTANCE",
                "ENTITY_CONTENT_TREE",
                "ENTITY_CONTENT_BLOB",
                "ENTITY_VOLUME"
            ],
            "default": "ENTITY_UNSPECIFIED",
            "description": "- ENTITY_UNSPECIFIED: Invalid Device Entity\n - ENTITY_BASE_OS: Base OS entity\n - ENTITY_SYSTEM_ADAPTER: System Adapter Entity\n - ENTITY_VAULT: Vault Entity\n - ENTITY_ATTESTATION: Attestation Entity\n - ENTITY_APP_INSTANCE: App Instance Entity\n - ENTITY_PORT: Port Entity\n - ENTITY_NETWORK: Network Entity\n - ENTITY_NETWORK_INSTANCE: Network Instance Entity\n - ENTITY_CONTENT_TREE: ContentTree Entity\n - ENTITY_CONTENT_BLOB: Blob Entity\n - ENTITY_VOLUME: VOLUME Entity",
            "title": "Edge node components"
        },
        "EventQueryResponse": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EventQueryResponseItem"
                    },
                    "description": "Event Query response list"
                },
                "next": {
                    "type": "object",
                    "$ref": "#/definitions/Cursor",
                    "description": "Cursor filter"
                },
                "summary": {
                    "$ref": "#/definitions/Summary",
                    "description": "Summary of filtered events."
                }
            },
            "description": "Event query response request payload",
            "title": "Event query Response payload detail",
            "required": [
                "list",
                "next"
            ]
        },
        "EventQueryResponseItem": {
            "type": "object",
            "properties": {
                "user": {
                    "type": "string",
                    "description": "User name"
                },
                "project": {
                    "type": "string",
                    "description": "project name"
                },
                "device": {
                    "type": "string",
                    "description": "device name"
                },
                "instance": {
                    "type": "string",
                    "description": "instance name"
                },
                "severity": {
                    "type": "string",
                    "description": "severity: FIXME: should be ENUM"
                },
                "description": {
                    "type": "string",
                    "description": "Event description"
                },
                "timestamp": {
                    "type": "object",
                    "format": "date-time",
                    "description": "event timestamp"
                },
                "source": {
                    "type": "object",
                    "$ref": "#/definitions/EventSource",
                    "description": "source"
                },
                "resource": {
                    "type": "string",
                    "description": "Event resources"
                },
                "eventType": {
                    "type": "string",
                    "description": "Event type"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Event tags"
                },
                "resourceName": {
                    "type": "string",
                    "description": "Event resources"
                },
                "jsonData": {
                    "type": "object",
                    "description": "Event resources"
                },
                "clusterInstance": {
                    "type": "string",
                    "description": "clusterInstance name"
                }
            },
            "description": "Event query response item payload",
            "title": "Event query response item payload detail"
        },
        "EventSource": {
            "type": "string",
            "enum": [
                "EVENT_SOURCE_UNSPECIFIED",
                "EVENT_SOURCE_SYSTEM",
                "EVENT_SOURCE_USER"
            ],
            "default": "EVENT_SOURCE_UNSPECIFIED",
            "description": "- EVENT_SOURCE_UNSPECIFIED: Default\n - EVENT_SOURCE_SYSTEM: Event is generated as a result of status change reported by edge node / application\n - EVENT_SOURCE_USER: Event is generated as a result of an user's configuration action",
            "title": "Source of events"
        },
        "FlowlogAction": {
            "type": "string",
            "enum": [
                "FLOW_LOG_ACTION_UNSPECIFIED",
                "FLOW_LOG_ACTION_DROP",
                "FLOW_LOG_ACTION_ACCEPT"
            ],
            "default": "FLOW_LOG_ACTION_UNSPECIFIED"
        },
        "FlowlogCategoryType": {
            "type": "string",
            "enum": [
                "FLOW_LOG_CATEGORY_TYPE_UNSPECIFIED",
                "FLOW_LOG_CATEGORY_TYPE_DIRECTION",
                "FLOW_LOG_CATEGORY_TYPE_ACL_ID",
                "FLOW_LOG_CATEGORY_TYPE_ACTION",
                "FLOW_LOG_CATEGORY_TYPE_PROTO",
                "FLOW_LOG_CATEGORY_TYPE_REMOTE_IP",
                "FLOW_LOG_CATEGORY_TYPE_REMOTE_PORT",
                "FLOW_LOG_CATEGORY_TYPE_FQDN"
            ],
            "default": "FLOW_LOG_CATEGORY_TYPE_UNSPECIFIED"
        },
        "FlowlogDirection": {
            "type": "string",
            "enum": [
                "FLOW_LOG_DIRECTION_UNSPECIFIED",
                "FLOW_LOG_DIRECTION_EGRESS",
                "FLOW_LOG_DIRECTION_INGRESS"
            ],
            "default": "FLOW_LOG_DIRECTION_UNSPECIFIED"
        },
        "FlowlogMetric": {
            "type": "string",
            "enum": [
                "FLOW_LOG_METRIC_UNSPECIFIED",
                "FLOW_LOG_METRIC_BYTES",
                "FLOW_LOG_METRIC_PACKETS"
            ],
            "default": "FLOW_LOG_METRIC_UNSPECIFIED"
        },
        "GPSLocation": {
            "type": "object",
            "properties": {
                "latitude": {
                    "type": "number",
                    "format": "double",
                    "description": "Latitude"
                },
                "longitude": {
                    "type": "number",
                    "format": "double",
                    "description": "Longitude"
                },
                "altitude": {
                    "type": "number",
                    "format": "double",
                    "description": "Altitude from mean sea level"
                },
                "timestamp": {
                    "type": "object",
                    "format": "date-time",
                    "description": "UTC timestamp"
                },
                "horizontalReliability": {
                    "type": "number",
                    "format": "int64",
                    "description": "Horizontal reliability"
                },
                "verticalReliability": {
                    "type": "number",
                    "format": "int64",
                    "description": "Vertical reliability"
                },
                "horizontalUncertainty": {
                    "type": "number",
                    "format": "double",
                    "description": "Horizontal uncertainty"
                },
                "verticalUncertainty": {
                    "type": "number",
                    "format": "double",
                    "description": "Vertical uncertainty"
                },
                "logicalLabel": {
                    "type": "string",
                    "description": "Logical label of the adapter used to get GPS coordinates"
                }
            }
        },
        "GeoLocation": {
            "type": "object",
            "properties": {
                "underlayIP": {
                    "type": "string",
                    "description": "Single IP address, either in IPv4 or in IPv6 format"
                },
                "hostname": {
                    "type": "string",
                    "description": "Host name"
                },
                "city": {
                    "type": "string",
                    "description": "City"
                },
                "region": {
                    "type": "string",
                    "description": "Region"
                },
                "country": {
                    "type": "string",
                    "description": "Country code consisting of 2 capital letters as per ISO 3166-1 alpha2 standard"
                },
                "loc": {
                    "type": "string",
                    "description": "Ordered pair of (latitude, longitude) separated by comma (,). Latitude is the horizontal component used for geographic positioning; it is the angle between 0\u00b0 (the equator) and \u00b190\u00b0 (north or south) at the poles measured in decimal degrees. It is the first value in an ordered pair. A negative number denotes a location south of the equator; a positive number is north. Longitude is the vertical component used for geographic positioning; it is the angle between 0\u00b0 (the Prime Meridian) and \u00b1180\u00b0 (westward or eastward) measured in decimal degrees. It is the second number in an ordered pair. A negative number indicates a location west of Greenwich, England; a positive number east."
                },
                "org": {
                    "type": "string",
                    "description": "The name of the recipient, firm, or company at this geographical location."
                },
                "postal": {
                    "type": "string",
                    "description": "Postal code (ZIP code for USA) of the geographical location"
                },
                "latlong": {
                    "type": "string",
                    "description": "Deprecated field: comma, separated lat, long"
                },
                "freeloc": {
                    "type": "string",
                    "description": "Free formatted location string"
                }
            },
            "description": "Geographic location of an edge node determined by a variety of data collection mechanisms (e.g. network routing addresses or internal GPS devices).",
            "title": "Geographic location of an edge node"
        },
        "InstanceTransitionAction": {
            "type": "string",
            "enum": [
                "INSTANCE_TA_UNSPECIFIED",
                "INSTANCE_TA_NONE",
                "INSTANCE_TA_UPDATEREQUIRED",
                "INSTANCE_TA_UPDATEWITHRESTART",
                "INSTANCE_TA_UPDATEWITHPURGE"
            ],
            "default": "INSTANCE_TA_UNSPECIFIED",
            "description": "- INSTANCE_TA_UNSPECIFIED: Default. Invalid option\n - INSTANCE_TA_NONE: Either Edge app bundle has not changed or Edge app bundle has\nchanged but the changes do not impact Edge app instances\n - INSTANCE_TA_UPDATEREQUIRED: Edge app bundle has changed. Changes impact Edge app Instances\nEdge App instances need to be restarted with temporary loss of access\n - INSTANCE_TA_UPDATEWITHRESTART: Transition Action: Update with Restart\n - INSTANCE_TA_UPDATEWITHPURGE: Edge app bundle has changed. Changes impact Edge app Instances\nEdge App instances need to be deleted and created again with\ntemporary loss of access and permanent loss of data",
            "title": "Instance Transition action"
        },
        "Interface": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Interface name used by the edge application"
                },
                "type": {
                    "type": "string",
                    "description": "Physical Adapter type for this interface. Applicable only when \"direct attach\" flag is true."
                },
                "optional": {
                    "type": "boolean",
                    "description": "Indicates if the interface is optional for edge application."
                },
                "directattach": {
                    "type": "boolean",
                    "description": "If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application."
                },
                "privateip": {
                    "type": "boolean",
                    "description": "If true, DHCP network can't be assigned and user needs to provide a static IP address."
                },
                "acls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Acl"
                    },
                    "description": "Traffic access control rules for this interface. Applicable only when \"direct attach\" flag is false."
                }
            }
        },
        "IoAddresses": {
            "type": "object",
            "properties": {
                "macAddress": {
                    "type": "string"
                }
            }
        },
        "IoBundleStatus": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "object",
                    "$ref": "#/definitions/IoType",
                    "description": "IoType specifies the type of the Input output of the device"
                },
                "name": {
                    "type": "string",
                    "description": "Io Bundle status name"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Member Array",
                    "title": "members - Deprecated by memberList"
                },
                "appName": {
                    "type": "string",
                    "description": "Application name"
                },
                "lteInfo": {
                    "type": "object",
                    "$ref": "#/definitions/LTEAdapter",
                    "description": "LTE information"
                },
                "err": {
                    "$ref": "#/definitions/DeviceError",
                    "description": "Device error details",
                    "title": "6 - DEPRECATED"
                },
                "memberList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IoMemberStatus"
                    },
                    "description": "List of IO members"
                }
            },
            "description": "IoBundleStatus is used to store the status of the Input Output bundle",
            "title": "IoBundleStatus is used to store the status of the Input Output bundle",
            "required": [
                "type",
                "name",
                "members",
                "appName"
            ]
        },
        "IoMemberStatus": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "IoBundle Member name"
                },
                "ioAddress": {
                    "$ref": "#/definitions/IoAddresses",
                    "description": "IO addresses of the member. Each address corresponds to the member in the members array"
                }
            }
        },
        "IoType": {
            "type": "string",
            "enum": [
                "IO_TYPE_UNSPECIFIED",
                "IO_TYPE_ETH",
                "IO_TYPE_USB",
                "IO_TYPE_COM",
                "IO_TYPE_AUDIO",
                "IO_TYPE_WLAN",
                "IO_TYPE_WWAN",
                "IO_TYPE_HDMI",
                "IO_TYPE_LTE",
                "IO_TYPE_STORAGE_NVME_DEVICE",
                "IO_TYPE_STORAGE_SATA_DEVICE",
                "IO_TYPE_OTHER"
            ],
            "default": "IO_TYPE_UNSPECIFIED",
            "description": "- IO_TYPE_UNSPECIFIED: No operation/ Invalid peration\n - IO_TYPE_ETH: Ethernet\n - IO_TYPE_USB: USB Type\n - IO_TYPE_COM: Communication Port\n - IO_TYPE_AUDIO: Audio Port\n - IO_TYPE_WLAN: wireless LAN\n - IO_TYPE_WWAN: Wireless wide area network\n - IO_TYPE_HDMI: High-Definition Multimedia Interface\n - IO_TYPE_LTE: LTE Interfaces\n - IO_TYPE_STORAGE_NVME_DEVICE: Storage NVME device\n - IO_TYPE_STORAGE_SATA_DEVICE: Storage SATA device\n - IO_TYPE_OTHER: Other Io Types",
            "title": "Input/Output Type"
        },
        "LTEAdapter": {
            "type": "object",
            "properties": {
                "simName": {
                    "type": "string",
                    "description": "Name of SIM card."
                },
                "cellModuleName": {
                    "type": "string",
                    "description": "Name of Cell Module"
                },
                "imsi": {
                    "type": "string",
                    "description": "imsi of the SIM"
                },
                "iccid": {
                    "type": "string",
                    "description": "iccid of the SIM"
                },
                "simcardState": {
                    "type": "string",
                    "$ref": "#/definitions/SimcardState",
                    "description": "State of SimCard"
                },
                "imei": {
                    "type": "string",
                    "description": "IMEI of Cell Radio."
                },
                "firmwareVersion": {
                    "type": "string",
                    "description": "Firmware Version of Cell Radio."
                }
            },
            "description": "Details of LTE Adapter",
            "title": "LTE Adapter"
        },
        "LimitParams": {
            "type": "object",
            "properties": {
                "limitrate": {
                    "type": "integer",
                    "format": "int64",
                    "description": "UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane",
                    "title": "Rate limit in ACL rule"
                },
                "limitunit": {
                    "type": "string",
                    "description": "UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane",
                    "title": "Rate limit unit in ACL rule"
                },
                "limitburst": {
                    "type": "integer",
                    "format": "int64",
                    "description": "UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane",
                    "title": "Rate limit burst in ACL rule"
                }
            }
        },
        "LispServer": {
            "type": "object",
            "properties": {
                "nameOrIp": {
                    "type": "string",
                    "description": "name/IP"
                },
                "credential": {
                    "type": "string",
                    "description": "lisp credential"
                }
            },
            "description": "LispServer request paylod",
            "title": "LispServer payload detail",
            "required": [
                "nameOrIp",
                "credential"
            ]
        },
        "ManifestInfo": {
            "type": "object",
            "properties": {
                "bundleVersion": {
                    "type": "string",
                    "description": "Current version of edge application being used"
                },
                "nextBundleVersion": {
                    "type": "string",
                    "description": "Next version of edge application available"
                },
                "transitionAction": {
                    "type": "string",
                    "$ref": "#/definitions/InstanceTransitionAction",
                    "description": "Recommended transition action"
                },
                "params": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Common and Custom parameters for deciding on transition actions"
                },
                "details": {
                    "$ref": "#/definitions/TransDetails",
                    "description": "Details for recommended transition action"
                }
            },
            "description": "Details about transition parameters and indication for cause of the transition and recommendation for the transition action",
            "title": "Transition action information"
        },
        "MapParams": {
            "type": "object",
            "properties": {
                "appPort": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Application Port value"
                }
            }
        },
        "Match": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Type of Match (Required)",
                    "title": "enum: host, protocol, fport\nAt the device level it will pick right interface to apply this match"
                },
                "value": {
                    "type": "string",
                    "description": "Value of match (Required)"
                }
            }
        },
        "MemorySummary": {
            "type": "object",
            "properties": {
                "TotalMB": {
                    "type": "number",
                    "format": "double",
                    "description": "Total memory for the device in MBs"
                },
                "UsedMB": {
                    "type": "number",
                    "format": "double",
                    "description": "Total memory used by the device in MBs within allocated memory"
                },
                "AllocatedMB": {
                    "type": "number",
                    "format": "double",
                    "description": "Total allocated memory in MBs"
                }
            },
            "description": "Memory Summary",
            "title": "Memory Summary"
        },
        "MetricQueryResponse": {
            "type": "object",
            "properties": {
                "threshold": {
                    "$ref": "#/definitions/MetricThreshold"
                },
                "metricType": {
                    "type": "string"
                },
                "xLabel": {
                    "type": "string"
                },
                "yLabels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MetricQueryResponseItem"
                    }
                }
            }
        },
        "MetricQueryResponseItem": {
            "type": "object",
            "properties": {
                "timestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "number",
                        "format": "double"
                    }
                }
            }
        },
        "MetricThreshold": {
            "type": "object",
            "properties": {
                "yellow": {
                    "type": "number",
                    "format": "double"
                },
                "red": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "MetricType": {
            "type": "string",
            "enum": [
                "METRIC_TYPE_UNSPECIFIED",
                "METRIC_TYPE_CPU_TOTAL",
                "METRIC_TYPE_CPU_USAGE",
                "METRIC_TYPE_MEMORY_TOTAL",
                "METRIC_TYPE_MEMORY_UTILIZATION",
                "METRIC_TYPE_NETWORK_TOTAL",
                "METRIC_TYPE_NETWORK_RATES",
                "METRIC_TYPE_EVENTS_COUNT",
                "METRIC_TYPE_STORAGE_UTILIZATION",
                "METRIC_TYPE_STORAGE_IO_ZPOOL",
                "METRIC_TYPE_STORAGE_IO_ZVOL"
            ],
            "default": "METRIC_TYPE_UNSPECIFIED"
        },
        "ModuleDetail": {
            "type": "object",
            "example": {
                "twinDetail": "IHsKICAgICAgIm5hbWUiOiAiU2VuZEludGVydmFsIiwKICAgICAgInZhbHVlIjogIjUiCiAgICB9"
            },
            "properties": {
                "twinDetail": {
                    "type": "string",
                    "description": "Base64 encoded module twin details, desired properties of the module will be updated to reflect these values"
                },
                "routes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Send messages between modules or send messages from modules to iot hub"
                },
                "environment": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Extra information to module to make configuration easier"
                },
                "moduleType": {
                    "$ref": "#/definitions/ModuleType",
                    "description": "Type of modules"
                }
            },
            "description": "Azure module specific details",
            "title": "Module detail"
        },
        "ModuleSummary": {
            "type": "object",
            "properties": {
                "moduleType": {
                    "$ref": "#/definitions/ModuleType",
                    "description": "Type of modules"
                }
            },
            "description": "Azure module specific details",
            "title": "Module detail"
        },
        "ModuleType": {
            "type": "string",
            "enum": [
                "MODULE_TYPE_UNSPECIFIED",
                "MODULE_TYPE_SYSTEM_DEFINED",
                "MODULE_TYPE_CUSTOM"
            ],
            "default": "MODULE_TYPE_UNSPECIFIED",
            "description": "module type."
        },
        "NetProxyServer": {
            "type": "object",
            "properties": {
                "proto": {
                    "type": "object",
                    "$ref": "#/definitions/NetworkProxyProto",
                    "description": "Net Proxy proto"
                },
                "server": {
                    "type": "string",
                    "description": "Net Proxy Server"
                },
                "port": {
                    "type": "number",
                    "format": "int64",
                    "description": "Net Proxy Port"
                }
            },
            "description": "Net Proxy Server",
            "title": "Net Proxy Server"
        },
        "NetProxyStatus": {
            "type": "object",
            "properties": {
                "networkProxy": {
                    "type": "boolean",
                    "description": "Use pacfile (Auto discover or manual upload)",
                    "title": "Enable, the proxy configuration coming from network"
                },
                "proxies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NetProxyServer"
                    },
                    "description": "protocol level proxies",
                    "title": "protocol level proxies"
                },
                "exceptions": {
                    "type": "string",
                    "description": "exceptions"
                },
                "pacfile": {
                    "type": "string",
                    "description": "proxy configuration in a pacfile",
                    "title": "proxy configuration in a pacfile"
                },
                "networkProxyURL": {
                    "type": "string",
                    "description": "Network Proxy URL",
                    "title": "Direct URL for wpad.dat download"
                },
                "wpadProxyURL": {
                    "type": "string",
                    "description": "WPAD Proxy URL"
                }
            },
            "description": "NetProxyStatus is used to store the proxy configurations",
            "title": "NetProxyStatus is used to store the proxy configurations"
        },
        "NetworkCounters": {
            "type": "object",
            "properties": {
                "ifName": {
                    "type": "string",
                    "description": "ifName"
                },
                "txBytes": {
                    "type": "number",
                    "format": "uint64",
                    "description": "Tx Bytes"
                },
                "rxBytes": {
                    "type": "number",
                    "format": "uint64",
                    "description": "Rx Bytes"
                },
                "txPkts": {
                    "type": "number",
                    "format": "uint64",
                    "description": "Tx Packets"
                },
                "rxPkts": {
                    "type": "number",
                    "format": "uint64",
                    "description": "Rx packets"
                },
                "txErrors": {
                    "type": "number",
                    "format": "uint64",
                    "description": "Tx Errors"
                },
                "rxErrors": {
                    "type": "number",
                    "format": "uint64",
                    "description": "Rx Errors"
                },
                "txDrops": {
                    "type": "number",
                    "format": "uint64",
                    "description": "Tx Drops"
                },
                "rxDrops": {
                    "type": "number",
                    "format": "uint64",
                    "description": "Rx Drops"
                },
                "txAclDrops": {
                    "type": "number",
                    "format": "uint64",
                    "description": "Tx ACL Rate Drops"
                },
                "rxAclDrops": {
                    "type": "number",
                    "format": "uint64",
                    "description": "Rx ACL Rate Drops"
                },
                "txAclRateLimitDrops": {
                    "type": "number",
                    "format": "uint64",
                    "description": "Tx ACL Rate Limit Drops"
                },
                "rxAclRateLimitDrops": {
                    "type": "number",
                    "format": "uint64",
                    "description": "Rx ACL Rate Limit Drops"
                }
            },
            "description": "NetworkCounter is used to store the Network Stats and Counters",
            "title": "NetworkCounter is used to store the Network Stats and Counters"
        },
        "NetworkProxyProto": {
            "type": "string",
            "enum": [
                "NETWORK_PROXY_PROTO_HTTP",
                "NETWORK_PROXY_PROTO_HTTPS",
                "NETWORK_PROXY_PROTO_SOCKS",
                "NETWORK_PROXY_PROTO_FTP",
                "NETWORK_PROXY_PROTO_OTHER"
            ],
            "default": "NETWORK_PROXY_PROTO_HTTP"
        },
        "NetworkStatus": {
            "type": "object",
            "properties": {
                "up": {
                    "type": "boolean",
                    "description": "Network Status flag"
                },
                "macAddr": {
                    "type": "string",
                    "description": "mac Address"
                },
                "ifName": {
                    "type": "string",
                    "description": "ifName"
                },
                "ipAddrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of IP addresses"
                },
                "defaultRouters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Default Routers"
                },
                "dns": {
                    "type": "object",
                    "$ref": "#/definitions/DNSInfo",
                    "description": "DNS Configuration"
                },
                "location": {
                    "type": "object",
                    "$ref": "#/definitions/GeoLocation",
                    "description": "Geo Location Details"
                },
                "uplink": {
                    "type": "boolean",
                    "description": "Uplink flag"
                },
                "proxy": {
                    "type": "object",
                    "$ref": "#/definitions/NetProxyStatus",
                    "description": "Network Proxy status"
                },
                "errInfo": {
                    "type": "object",
                    "$ref": "#/definitions/DeviceError",
                    "description": "Network error details"
                },
                "gpsLocation": {
                    "type": "object",
                    "$ref": "#/definitions/GPSLocation",
                    "description": "Location from GNSS receivers on WWAN type adapters"
                }
            },
            "description": "NetworkStatus is used to store the Network status",
            "title": "NetworkStatus is used to store the Network Status"
        },
        "ObjectDetail": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "ObjectParentDetail": {
            "type": "object",
            "properties": {
                "idOfParentObject": {
                    "type": "string",
                    "description": "system defined unique id of parent object",
                    "readOnly": true,
                    "pattern": "[0-9A-Za-z-]+",
                    "required": [
                        "true"
                    ]
                },
                "versionOfParentObject": {
                    "type": "integer",
                    "format": "int64",
                    "description": "version of object present in parent",
                    "readOnly": true,
                    "pattern": "[0-9]+"
                },
                "updateAvailable": {
                    "type": "boolean",
                    "description": "Update required flag"
                },
                "referenceExists": {
                    "type": "boolean",
                    "description": "Relation with child and parent object exists or not"
                }
            },
            "description": "ObjectImportDetail consists of various object attributes like idOfParentObject, versionOfParentObject, updateAvailable, referenceExists",
            "title": "Object Import Detail",
            "required": [
                "idOfParentObject"
            ]
        },
        "ObjectRevision": {
            "type": "object",
            "properties": {
                "prev": {
                    "type": "string",
                    "description": "Previous"
                },
                "curr": {
                    "type": "string",
                    "description": "Current Database version of the record"
                },
                "createdAt": {
                    "type": "object",
                    "format": "date-time",
                    "description": "The time, in milliseconds since the epoch, when the record was created."
                },
                "createdBy": {
                    "type": "string",
                    "description": "User data: Created By"
                },
                "updatedAt": {
                    "type": "object",
                    "format": "date-time",
                    "description": "The time, in milliseconds since the epoch, when the record was last updated."
                },
                "updatedBy": {
                    "type": "string",
                    "description": "User data: Updated By"
                }
            },
            "description": "ObjectRevision store the user details, who has doent the necessary operation like Create Operation or update operation",
            "title": "ObjectRevision is used to store the user information.",
            "required": [
                "curr",
                "createdAt",
                "createdBy",
                "updatedAt",
                "updatedBy"
            ]
        },
        "ObjectTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "object tag key identifier."
                },
                "value": {
                    "type": "string",
                    "description": "value associated for the object tag key"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the tag key"
                }
            },
            "description": "Object tag deaails.",
            "title": "Object Tag details"
        },
        "ObjectTagFilter": {
            "type": "object",
            "properties": {
                "objId": {
                    "type": "string",
                    "description": "Object Id which tags are associated."
                },
                "objName": {
                    "type": "string",
                    "description": "Object name which tags are associated."
                },
                "objType": {
                    "type": "object",
                    "$ref": "#/definitions/ObjectType",
                    "description": "Object type"
                }
            },
            "description": "Filter criteria for the object tag list.",
            "title": "Object tag list filter criteria"
        },
        "ObjectTagsList": {
            "type": "object",
            "properties": {
                "objectTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ObjectTag"
                    },
                    "description": "Details of Object tags list records."
                },
                "next": {
                    "$ref": "#/definitions/Cursor",
                    "description": "Returned record page."
                }
            },
            "description": "Returned list of Object tags matched by filter criteria",
            "title": "Object tag list records"
        },
        "ObjectType": {
            "type": "string",
            "enum": [
                "OBJECT_TYPE_UNSPECIFIED",
                "OBJECT_TYPE_USER",
                "OBJECT_TYPE_EDGE_NODE",
                "OBJECT_TYPE_EDGE_APP",
                "OBJECT_TYPE_IMAGE",
                "OBJECT_TYPE_EDGE_APP_INSTANCE",
                "OBJECT_TYPE_PROJECT",
                "OBJECT_TYPE_NETWORK",
                "OBJECT_TYPE_DATASTORE",
                "OBJECT_TYPE_SERVICE",
                "OBJECT_TYPE_SERVICE_INSTANCE",
                "OBJECT_TYPE_ENTERPRISE",
                "OBJECT_TYPE_ROLE",
                "OBJECT_TYPE_CREDENTIAL",
                "OBJECT_TYPE_NETWORK_INSTANCE",
                "OBJECT_TYPE_VOLUME_INSTANCE",
                "OBJECT_TYPE_REALM",
                "OBJECT_TYPE_AUTHPROFILE",
                "OBJECT_TYPE_POLICY",
                "OBJECT_TYPE_APP_POLICY",
                "OBJECT_TYPE_CLUSTER_INSTANCE",
                "OBJECT_TYPE_PLUGIN",
                "OBJECT_TYPE_DOC_POLICY",
                "OBJECT_TYPE_ORCHESTRATOR_CLUSTER",
                "OBJECT_TYPE_TAGS",
                "OBJECT_TYPE_EDGE_NODE_INTERFACE",
                "OBJECT_TYPE_DEPLOYMENT",
                "OBJECT_TYPE_ENTITLEMENTS",
                "OBJECT_TYPE_DATA_STREAM",
                "OBJECT_TYPE_API_USAGE"
            ],
            "default": "OBJECT_TYPE_UNSPECIFIED"
        },
        "Origin": {
            "type": "string",
            "enum": [
                "ORIGIN_UNSPECIFIED",
                "ORIGIN_IMPORTED",
                "ORIGIN_LOCAL",
                "ORIGIN_GLOBAL"
            ],
            "default": "ORIGIN_UNSPECIFIED",
            "description": "- ORIGIN_UNSPECIFIED: default options, which says no Operation/Invalid Operation\n - ORIGIN_IMPORTED: Object imported from global enterprise.\n - ORIGIN_LOCAL: Objectl created locally.\n - ORIGIN_GLOBAL: Object created in global store,\nto use this type user should have root previlage.",
            "title": "OriginType : enum specifies the Object orgigin type"
        },
        "Param": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the Parameter (Required)"
                },
                "value": {
                    "type": "string",
                    "description": "Value of the parameter (Required)"
                }
            }
        },
        "Permission": {
            "type": "object"
        },
        "Resource": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the Resource (Required)"
                },
                "value": {
                    "type": "string",
                    "description": "Value of Resource (Required)"
                }
            }
        },
        "RunState": {
            "type": "string",
            "enum": [
                "RUN_STATE_UNSPECIFIED",
                "RUN_STATE_ONLINE",
                "RUN_STATE_HALTED",
                "RUN_STATE_INIT",
                "RUN_STATE_REBOOTING",
                "RUN_STATE_OFFLINE",
                "RUN_STATE_UNKNOWN",
                "RUN_STATE_UNPROVISIONED",
                "RUN_STATE_PROVISIONED",
                "RUN_STATE_SUSPECT",
                "RUN_STATE_DOWNLOADING",
                "RUN_STATE_RESTARTING",
                "RUN_STATE_PURGING",
                "RUN_STATE_HALTING",
                "RUN_STATE_ERROR",
                "RUN_STATE_VERIFYING",
                "RUN_STATE_LOADING",
                "RUN_STATE_CREATING_VOLUME",
                "RUN_STATE_BOOTING",
                "RUN_STATE_MAINTENANCE_MODE",
                "RUN_STATE_START_DELAYED",
                "RUN_STATE_BASEOS_UPDATING",
                "RUN_STATE_PREPARING_POWEROFF",
                "RUN_STATE_POWERING_OFF",
                "RUN_STATE_PREPARED_POWEROFF"
            ],
            "default": "RUN_STATE_UNSPECIFIED",
            "description": "- RUN_STATE_ONLINE: Entity Online\n - RUN_STATE_HALTED: Entity Halted\n - RUN_STATE_INIT: Entity Initializing\n - RUN_STATE_REBOOTING: Entity Rebooting\n - RUN_STATE_OFFLINE: Entity Offline\n - RUN_STATE_UNKNOWN: Entity state Unknown\n - RUN_STATE_UNPROVISIONED: Entity Unprovisioned\n - RUN_STATE_PROVISIONED: Entity Provisioned\n - RUN_STATE_SUSPECT: Entity Suspect\n - RUN_STATE_DOWNLOADING: Edge-node downloading entity artifacts\n - RUN_STATE_RESTARTING: Entity Restarting\n - RUN_STATE_PURGING: Entity Purging\n - RUN_STATE_HALTING: Entity Halting\n - RUN_STATE_ERROR: Entity encountered an error\n - RUN_STATE_VERIFYING: Verification of downloaded Artifacts in Progress.\n - RUN_STATE_LOADING: Loading of Artifacts into local datastore in Progress.\n - RUN_STATE_CREATING_VOLUME: Volume creation from artifacts in Progress\n - RUN_STATE_BOOTING: Entity booting up\n - RUN_STATE_MAINTENANCE_MODE: Entity maintenance mode\n - RUN_STATE_START_DELAYED: Application start delayed as per configuration\n - RUN_STATE_BASEOS_UPDATING: Device BaseOs Update in Progress\n - RUN_STATE_PREPARING_POWEROFF: device preparing power off - shutting down all app instances\n - RUN_STATE_POWERING_OFF: device powering off from local profile server\n - RUN_STATE_PREPARED_POWEROFF: device prepared power off - all app instances are shut down",
            "title": "Run-time state of an object, reported by EVE"
        },
        "SWInfo": {
            "type": "object",
            "properties": {
                "version": {
                    "type": "string",
                    "description": "software version"
                },
                "hash": {
                    "type": "string",
                    "description": "software hash"
                },
                "state": {
                    "$ref": "#/definitions/SWState",
                    "description": "Software state"
                },
                "disk": {
                    "type": "string",
                    "description": "software disk"
                },
                "downloadProgress": {
                    "type": "number",
                    "format": "int64",
                    "description": "download progress"
                },
                "imageName": {
                    "type": "string",
                    "description": "image name"
                }
            },
            "description": "Software Information",
            "title": "Software Information"
        },
        "SWState": {
            "type": "string",
            "enum": [
                "SW_STATE_UNSPECIFIED",
                "SW_STATE_INITIAL",
                "SW_STATE_DOWNLOAD_IN_PROGRESS",
                "SW_STATE_DOWNLOADED",
                "SW_STATE_VERIFIED",
                "SW_STATE_INSTALLED",
                "SW_STATE_BOOTING",
                "SW_STATE_RUNNING",
                "SW_STATE_HALTING",
                "SW_STATE_HALTED",
                "SW_STATE_REFRESHING",
                "SW_STATE_PURGING",
                "SW_STATE_RESOLVING_TAG",
                "SW_STATE_RESOLVED_TAG",
                "SW_STATE_CREATING_VOLUME",
                "SW_STATE_CREATED_VOLUME",
                "SW_STATE_VERIFYING",
                "SW_STATE_LOADING",
                "SW_STATE_LOADED",
                "SW_STATE_AWAITNETWORKINSTANCE"
            ],
            "default": "SW_STATE_UNSPECIFIED",
            "description": "- SW_STATE_RESOLVING_TAG: Prior to DOWNLOAD_STARTED we go through these:\nResolving an image tag\n - SW_STATE_RESOLVED_TAG: Tag has been resolved/failed\n - SW_STATE_CREATING_VOLUME: Prior to INSTALLED we go through these:\nVolume create in progress\n - SW_STATE_CREATED_VOLUME: Volume create done/failed\n - SW_STATE_VERIFYING: Verification in-progress\n - SW_STATE_LOADING: Loading blob in CAS\n - SW_STATE_LOADED: Loaded blob in CAS\n - SW_STATE_AWAITNETWORKINSTANCE: Wait for network instance",
            "title": "State of EVE/Edge Application software"
        },
        "Severity": {
            "type": "string",
            "enum": [
                "SEVERITY_UNSPECIFIED",
                "SEVERITY_NOTICE",
                "SEVERITY_WARNING",
                "SEVERITY_ERROR"
            ],
            "default": "SEVERITY_UNSPECIFIED",
            "title": "Severity tells the severity type"
        },
        "SimcardState": {
            "type": "string",
            "enum": [
                "SIMCARD_STATE_INVALID",
                "SIMCARD_STATE_ASSIGNED",
                "SIMCARD_STATE_PROVISIONED",
                "SIMCARD_STATE_ACTIVE",
                "SIMCARD_STATE_SUSPENDED",
                "SIMCARD_STATE_CANCELLED"
            ],
            "default": "SIMCARD_STATE_INVALID"
        },
        "StorageDeviceMetrics": {
            "type": "object",
            "properties": {
                "readErrors": {
                    "type": "number",
                    "format": "int64",
                    "description": "read errors counter"
                },
                "writeErrors": {
                    "type": "number",
                    "format": "int64",
                    "description": "write errors counter"
                },
                "checksumErrors": {
                    "type": "number",
                    "format": "int64",
                    "description": "checksum errors counter"
                }
            }
        },
        "StorageSummary": {
            "type": "object",
            "properties": {
                "TotalMB": {
                    "type": "number",
                    "format": "double",
                    "description": "Total Storage for the device in MBs"
                },
                "UsedMB": {
                    "type": "number",
                    "format": "double",
                    "description": "How much is used within the allocated total storage"
                },
                "AllocatedMB": {
                    "type": "number",
                    "format": "double",
                    "description": "Total reserved for running applications + temp. images etc"
                }
            },
            "description": "Storage Summary",
            "title": "Storage Summary"
        },
        "Summary": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Summary description"
                },
                "total": {
                    "type": "number",
                    "format": "int64",
                    "description": "Total"
                },
                "values": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": "Values: Map for storing <string, uint32>"
                }
            },
            "description": "Summary is used to store the Summary details",
            "title": "Summary is used to store the Summary details"
        },
        "TopTalkersResponse": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TopTalkersResponseItem"
                    }
                },
                "next": {
                    "$ref": "#/definitions/Cursor"
                }
            }
        },
        "TopTalkersResponseItem": {
            "type": "object",
            "properties": {
                "localAddr": {
                    "type": "string",
                    "minLength": 1,
                    "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
                },
                "remoteAddr": {
                    "type": "string"
                },
                "localPort": {
                    "type": "integer",
                    "format": "int64"
                },
                "remotePort": {
                    "type": "integer",
                    "format": "int64"
                },
                "proto": {
                    "type": "integer",
                    "format": "int64"
                },
                "Total": {
                    "type": "string",
                    "format": "uint64"
                },
                "rxTotal": {
                    "type": "string",
                    "format": "uint64"
                },
                "txTotal": {
                    "type": "string",
                    "format": "uint64"
                }
            }
        },
        "TransCause": {
            "type": "string",
            "enum": [
                "TRANS_CAUSE_UNSPECIFIED",
                "TRANS_CAUSE_APP_DRIVE_CHANGED",
                "TRANS_CAUSE_APP_NETWORK_CHANGED",
                "TRANS_CAUSE_APP_CUSTOM_CONFIG_CHANGED",
                "TRANS_CAUSE_APP_MODULE_BUNDLE_UPDATE",
                "TRANS_CAUSE_APP_DESC_CHANGED",
                "TRANS_CAUSE_APP_FIXED_RESOURCES_CHANGED",
                "TRANS_CAUSE_APP_VNC_MODE_CHANGED",
                "TRANS_CAUSE_APP_VM_MODE_CHANGED",
                "TRANS_CAUSE_INTER_CA_EXPIRING",
                "TRANS_CAUSE_INTER_CA_EXPIRED",
                "TRANS_CAUSE_DEVICE_CA_EXPIRING",
                "TRANS_CAUSE_DEVICE_CA_EXPIRED"
            ],
            "default": "TRANS_CAUSE_UNSPECIFIED"
        },
        "TransDetails": {
            "type": "object",
            "properties": {
                "cause": {
                    "$ref": "#/definitions/TransCause",
                    "description": "Cause of the transition action"
                },
                "severity": {
                    "type": "string",
                    "description": "Urgency of the recommended action (ERROR - must take action immediately, WARN - must take action but not immediately, NOTICE - may take action"
                },
                "scope": {
                    "$ref": "#/definitions/ActionScope",
                    "description": "Scope of the action (e.g. project, cluster, instance)"
                }
            }
        },
        "TwinDetail": {
            "type": "object",
            "properties": {
                "authenticationType": {
                    "type": "string"
                },
                "cloudToDeviceMessageCount": {
                    "type": "integer",
                    "format": "int64"
                },
                "reported": {
                    "type": "string",
                    "format": "byte"
                },
                "desired": {
                    "type": "string",
                    "format": "byte"
                },
                "moduleCount": {
                    "type": "integer",
                    "format": "int64"
                },
                "lastDesiredStatus": {
                    "type": "string",
                    "format": "byte"
                },
                "tags": {
                    "type": "string",
                    "format": "byte"
                },
                "statusCode": {
                    "type": "integer",
                    "format": "int32"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "UserDataTemplate": {
            "type": "object",
            "properties": {
                "customConfig": {
                    "$ref": "#/definitions/CustomConfig"
                }
            }
        },
        "VCEStatus": {
            "type": "object",
            "properties": {
                "vceStatusDetail": {
                    "$ref": "#/definitions/VCEStatusDetail"
                }
            },
            "description": "status of object on velocloud."
        },
        "VCEStatusDetail": {
            "type": "object",
            "properties": {
                "vceURL": {
                    "type": "string"
                },
                "vceEdgeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "activationState": {
                    "type": "string"
                },
                "edgeState": {
                    "type": "string"
                },
                "serviceState": {
                    "type": "string"
                },
                "haState": {
                    "type": "string"
                },
                "haPreviousState": {
                    "type": "string"
                },
                "bastionState": {
                    "type": "string"
                },
                "created": {
                    "type": "string",
                    "format": "date-time"
                },
                "activationKey": {
                    "type": "string"
                },
                "activationKeyExpires": {
                    "type": "string",
                    "format": "date-time"
                },
                "activationTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "serialNumber": {
                    "type": "string"
                },
                "lteRegion": {
                    "type": "string"
                },
                "alertsEnabled": {
                    "type": "boolean"
                },
                "operatorAlertsEnabled": {
                    "type": "boolean"
                },
                "edgeStateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "isLive": {
                    "type": "boolean"
                },
                "systemUpSince": {
                    "type": "string",
                    "format": "date-time"
                },
                "serviceUpSince": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastContact": {
                    "type": "string",
                    "format": "date-time"
                },
                "haLastContact": {
                    "type": "string",
                    "format": "date-time"
                },
                "haSerialNumber": {
                    "type": "string"
                },
                "modified": {
                    "type": "string",
                    "format": "date-time"
                },
                "isHub": {
                    "type": "boolean"
                },
                "statusFetchedAt": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "VMManifest": {
            "type": "object",
            "properties": {
                "acKind": {
                    "type": "string",
                    "default": "VMManifest",
                    "description": "UI map: N/A - not exposed to users",
                    "title": "Edge Application type"
                },
                "acVersion": {
                    "type": "string",
                    "default": "1.2.0",
                    "description": "UI map: N/A - not exposed to users",
                    "title": "Manifest version"
                },
                "name": {
                    "type": "string",
                    "description": "UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field",
                    "title": "Unique id of app manifest, should match object name"
                },
                "displayName": {
                    "type": "string",
                    "description": "UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field",
                    "title": "Display name or title of app manifest"
                },
                "description": {
                    "type": "string",
                    "description": "UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField",
                    "title": "Description of the Edge application",
                    "pattern": "[0-9A-Za-z-]+"
                },
                "owner": {
                    "$ref": "#/definitions/Author",
                    "description": "Owner of the application"
                },
                "desc": {
                    "$ref": "#/definitions/Details",
                    "description": "Description of the application"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VMManifestImage"
                    },
                    "description": "UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane",
                    "title": "Images used by the app"
                },
                "interfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Interface"
                    },
                    "description": "UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane",
                    "title": "I/O adapter settings"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Permission"
                    }
                },
                "vmmode": {
                    "type": "string",
                    "default": "HV_HVM",
                    "description": "UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field",
                    "title": "VM mode for VM-based app"
                },
                "enablevnc": {
                    "type": "boolean",
                    "description": "UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field",
                    "title": "Enable VNC for the app"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Resource"
                    },
                    "description": "UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane",
                    "title": "Hardware resource requirement (CPU, Memory, Storage) for the app"
                },
                "configuration": {
                    "$ref": "#/definitions/UserDataTemplate",
                    "description": "Template for Custom Configuration. Used for Cloud-Init",
                    "title": "Annotations   types.Annotations    `json:\"Annotations,omitempty\"`\nLabels        types.Labels         `json:\"Labels,omitempty\"`"
                },
                "containerDetail": {
                    "$ref": "#/definitions/ContainerDetail",
                    "description": "Create options direct the creation of the Docker container",
                    "title": "Container specific details"
                },
                "module": {
                    "$ref": "#/definitions/ModuleDetail",
                    "description": "Azure module specific details like module twin, environment variable, routes",
                    "title": "Module specific details"
                },
                "appType": {
                    "$ref": "#/definitions/AppType",
                    "description": "bundle type, eg: vm, container, module"
                },
                "deploymentType": {
                    "$ref": "#/definitions/DeploymentType",
                    "description": "type of deployment for the app, eg: azure, k3s, standalone"
                },
                "cpuPinningEnabled": {
                    "type": "boolean",
                    "description": "Enable CpuPinning"
                }
            }
        },
        "VMManifestImage": {
            "type": "object",
            "properties": {
                "imagename": {
                    "type": "string",
                    "description": "UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field"
                },
                "imageid": {
                    "type": "string",
                    "description": "UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field"
                },
                "imageformat": {
                    "$ref": "#/definitions/configFormat",
                    "description": "UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field"
                },
                "maxsize": {
                    "type": "string",
                    "format": "uint64",
                    "description": "UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field"
                },
                "preserve": {
                    "type": "boolean",
                    "description": "UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field"
                },
                "target": {
                    "type": "string",
                    "description": "UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field",
                    "title": "enum: Disk, Kernel, Initrd, RamDisk"
                },
                "drvtype": {
                    "type": "string",
                    "description": "UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field",
                    "title": "enum: CDROM, HDD, NET"
                },
                "params": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Param"
                    },
                    "title": "Not used by ZedUI"
                },
                "readonly": {
                    "type": "boolean",
                    "title": "Not used by ZedUI"
                },
                "volumelabel": {
                    "type": "string",
                    "description": "UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label"
                },
                "ignorepurge": {
                    "type": "boolean",
                    "description": "UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field"
                },
                "cleartext": {
                    "type": "boolean",
                    "description": "UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field"
                },
                "mountpath": {
                    "type": "string",
                    "description": "UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field"
                }
            }
        },
        "VMManifestSummary": {
            "type": "object",
            "properties": {
                "acKind": {
                    "type": "string",
                    "default": "VMManifest",
                    "description": "UI map: N/A - not exposed to users",
                    "title": "Edge Application type"
                },
                "acVersion": {
                    "type": "string",
                    "default": "1.2.0",
                    "description": "UI map: N/A - not exposed to users",
                    "title": "Manifest version"
                },
                "name": {
                    "type": "string",
                    "description": "UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field",
                    "title": "Unique id of app manifest, should match object name"
                },
                "displayName": {
                    "type": "string",
                    "description": "UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field",
                    "title": "Display name or title of app manifest"
                },
                "description": {
                    "type": "string",
                    "description": "UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField",
                    "title": "Description of the Edge application",
                    "pattern": "[0-9A-Za-z-]+"
                },
                "desc": {
                    "$ref": "#/definitions/Details",
                    "description": "Details of the Edge App"
                },
                "module": {
                    "$ref": "#/definitions/ModuleSummary",
                    "description": "Azure module specific details like module twin, environment variable, routes",
                    "title": "Module specific details"
                },
                "appType": {
                    "$ref": "#/definitions/AppType",
                    "description": "bundle type, eg: vm, container, module"
                },
                "deploymentType": {
                    "$ref": "#/definitions/DeploymentType",
                    "description": "type of deployment for the app, eg: azure, k3s, standalone"
                }
            },
            "title": "VMManifestSummary - App summary for list views"
        },
        "VariableFileEncoding": {
            "type": "string",
            "enum": [
                "FILE_ENCODING_UNSPECIFIED",
                "FILE_ENCODING_BASE64"
            ],
            "default": "FILE_ENCODING_UNSPECIFIED",
            "description": "- FILE_ENCODING_UNSPECIFIED: File content not encoded\n - FILE_ENCODING_BASE64: File content encoded in Base64",
            "title": "File content encoding type"
        },
        "VariableGroupCondition": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "operator": {
                    "$ref": "#/definitions/VariableGroupConditionOperator"
                }
            }
        },
        "VariableGroupConditionOperator": {
            "type": "string",
            "enum": [
                "CONDITION_OPERATOR_UNSPECIFIED",
                "CONDITION_OPERATOR_EQUALTO",
                "CONDITION_OPERATOR_NOTEQUALTO"
            ],
            "default": "CONDITION_OPERATOR_UNSPECIFIED"
        },
        "VariableGroupVariable": {
            "type": "object",
            "example": {
                "format": "VARIABLE_FORMAT_TEXT",
                "name": "username",
                "label": "Enter User Name",
                "required": "True"
            },
            "properties": {
                "type": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Variable (Required)"
                },
                "label": {
                    "type": "string",
                    "description": "Label for the variable (Required)"
                },
                "maxLength": {
                    "type": "string",
                    "description": "Max length of the value of the variable(Optional. Default: 1024)"
                },
                "required": {
                    "type": "boolean",
                    "description": "This variable MUST be specified when creating an App Instance. (Optional. Default: False)"
                },
                "default": {
                    "type": "string",
                    "description": "Default value of the variable. (Optional. Default: <Default value based on type>)"
                },
                "processInput": {
                    "type": "string"
                },
                "value": {
                    "type": "string",
                    "description": "User-specified value of the variable.(Required if required is true. Optional otherwise)"
                },
                "format": {
                    "$ref": "#/definitions/VariableVariableFormat",
                    "description": "Format of the user variable. (Required)"
                },
                "encode": {
                    "$ref": "#/definitions/VariableFileEncoding",
                    "description": "Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VariableOptionVal"
                    },
                    "description": "Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN"
                }
            },
            "description": "Edge Application Artifact Details",
            "title": "Edge Application detail",
            "required": [
                "format",
                "name",
                "label",
                "required"
            ]
        },
        "VariableOptionVal": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Display label of the key in User-Agent"
                },
                "value": {
                    "type": "string",
                    "description": "Value of the key to be used"
                }
            }
        },
        "VariableVariableFormat": {
            "type": "string",
            "enum": [
                "VARIABLE_FORMAT_UNSPECIFIED",
                "VARIABLE_FORMAT_TEXT",
                "VARIABLE_FORMAT_NUMBER",
                "VARIABLE_FORMAT_FILE",
                "VARIABLE_FORMAT_DROPDOWN",
                "VARIABLE_FORMAT_BOOLEAN",
                "VARIABLE_FORMAT_PASSWORD"
            ],
            "default": "VARIABLE_FORMAT_UNSPECIFIED",
            "description": "- VARIABLE_FORMAT_UNSPECIFIED: Invalid format\n - VARIABLE_FORMAT_TEXT: Value in string format\n - VARIABLE_FORMAT_NUMBER: Value in integer format\n - VARIABLE_FORMAT_FILE: Value to be read from a file\n - VARIABLE_FORMAT_DROPDOWN: Value to be selected from dropdown of options\n - VARIABLE_FORMAT_BOOLEAN: Value in boolean format\n - VARIABLE_FORMAT_PASSWORD: Value in string to be masked in User-Agent",
            "title": "Custom variable format"
        },
        "ZcOpsStatus": {
            "type": "string",
            "enum": [
                "OPS_STATUS_UNSPECIFIED",
                "OPS_STATUS_PENDING",
                "OPS_STATUS_ONGOING",
                "OPS_STATUS_COMPLETE"
            ],
            "default": "OPS_STATUS_UNSPECIFIED",
            "description": "- OPS_STATUS_PENDING: In rare cases, system may not start operation when it was requested. Client will be notified that operation is PENDING\n - OPS_STATUS_ONGOING: system will start the operation, but at the time response was generated, operation is still ONGOING.\n - OPS_STATUS_COMPLETE: Even if the result of the operations may result in failure, but the OpsStatus will marked COMPLETE for almost all cases.",
            "title": "ZedCloud internal operation status"
        },
        "ZcOpsType": {
            "type": "string",
            "enum": [
                "OPS_TYPE_UNSPECIFIED",
                "OPS_TYPE_READ",
                "OPS_TYPE_DELETE",
                "OPS_TYPE_CREATE",
                "OPS_TYPE_UPDATE",
                "OPS_TYPE_LIST"
            ],
            "default": "OPS_TYPE_UNSPECIFIED",
            "title": "ZedCloud internal operation type"
        },
        "ZedCloudOpsCmd": {
            "type": "object",
            "properties": {
                "counter": {
                    "type": "number",
                    "format": "int64",
                    "description": "counter"
                },
                "opsTime": {
                    "type": "object",
                    "format": "date-time",
                    "description": "Timestamp: Operational time"
                }
            },
            "description": "Zed cloud Operation command",
            "title": "Zed cloud Operation command"
        },
        "ZsrvError": {
            "type": "object",
            "properties": {
                "ec": {
                    "$ref": "#/definitions/ZsrvErrorCode",
                    "title": "Enumrated error code, describes more granular numerical\nvalue than just httpStatus"
                },
                "location": {
                    "type": "string",
                    "title": "Ignore: Internal field only"
                },
                "details": {
                    "type": "string",
                    "title": "Field captures string description of details"
                }
            }
        },
        "ZsrvErrorCode": {
            "type": "string",
            "enum": [
                "zMsgErrorNone",
                "zMsgSucess",
                "NotFound",
                "AlreadyExists",
                "VersionMismatch",
                "RangeError",
                "LargeResult",
                "IncompleteData",
                "InvalidData",
                "FunctionUnsupported",
                "NoMemory",
                "SendFailure",
                "Timeout",
                "BadReqBody",
                "BadReqParam",
                "InvalidFieldFormat",
                "UrlNotFound",
                "ApiVersionNotSupported",
                "Unauthorized",
                "Forbidden",
                "Conflict",
                "NotModified",
                "DependencyConflict",
                "JsonFmtError",
                "ProtoFmtError",
                "CertError",
                "DataBaseConnection",
                "DBError",
                "zMsgAccepted",
                "zMsgCreated",
                "PreConditionFailed"
            ],
            "default": "zMsgErrorNone",
            "description": "- zMsgErrorNone: common validation errors\n - IncompleteData: message had fields that weren't filled in\n - InvalidData: message contained the field that wasn't expected\n - FunctionUnsupported: this feature unavailable on this version of device\n - InvalidFieldFormat: message contained the field that wasn't correctly formatted\n - JsonFmtError: Marshal / Unmarshal errors\n - DataBaseConnection: generic DB error",
            "title": "ZedCould internal error code"
        },
        "ZsrvResponse": {
            "type": "object",
            "properties": {
                "operationType": {
                    "$ref": "#/definitions/ZcOpsType",
                    "title": "Describes one of the operations type : possible values\n                        Read/Delete/Create/Update/List"
                },
                "operationStatus": {
                    "$ref": "#/definitions/ZcOpsStatus",
                    "title": "if this is log running job"
                },
                "objectKind": {
                    "type": "string",
                    "title": "zedcloud object kind on which the operation was performed"
                },
                "objectId": {
                    "type": "string",
                    "title": "Unique value identifies the object that was operated on"
                },
                "objectName": {
                    "type": "string",
                    "title": "name of the object"
                },
                "objectRevision": {
                    "type": "string",
                    "title": "object revision post the operation, note Read operation\ndoesn't change the revision"
                },
                "objectType": {
                    "$ref": "#/definitions/ObjectType"
                },
                "operationTime": {
                    "type": "string",
                    "title": "time of operation"
                },
                "startTime": {
                    "type": "string",
                    "title": "total time taken by operations"
                },
                "endTime": {
                    "type": "string"
                },
                "user": {
                    "type": "string",
                    "title": "the operation is performed on behalf of this user"
                },
                "httpStatusCode": {
                    "type": "integer",
                    "format": "int32",
                    "title": "http response"
                },
                "httpStatusMsg": {
                    "type": "string",
                    "title": "summary of the error in text format"
                },
                "jobId": {
                    "type": "string",
                    "title": "for tracking asynchronous tasks"
                },
                "error": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ZsrvError"
                    },
                    "title": "one or more errors will be set if the operation failed\ni.e. httpStatusCode != 2xx"
                }
            }
        },
        "appACE": {
            "type": "object",
            "properties": {
                "matches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appACEMatch"
                    },
                    "description": "app ACE match"
                },
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appACEAction"
                    },
                    "description": "app ACE actions"
                },
                "id": {
                    "type": "number",
                    "format": "int32",
                    "description": "app ACE id"
                },
                "name": {
                    "type": "string",
                    "description": "User defined name of the app ACE, unique across the enterprise. Once object is created, name can\u2019t be changed",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                    "uniqueItems": true
                }
            },
            "description": "App ACE Configuration",
            "title": "App ACE detaisn",
            "required": [
                "matches",
                "actions",
                "id",
                "name"
            ]
        },
        "appACEAction": {
            "type": "object",
            "properties": {
                "drop": {
                    "type": "boolean",
                    "description": "ACE drop flag"
                },
                "limit": {
                    "type": "boolean",
                    "description": "ACE limit flag"
                },
                "limitrate": {
                    "type": "number",
                    "format": "int64",
                    "description": "ACE limit rate"
                },
                "limitunit": {
                    "type": "string",
                    "description": "ACE limit unit"
                },
                "limitburst": {
                    "type": "number",
                    "format": "int64",
                    "description": "ACE limit burst"
                },
                "portmap": {
                    "type": "boolean",
                    "description": "application port map flag"
                },
                "mapparams": {
                    "$ref": "#/definitions/appMapParams",
                    "description": "Application map params"
                }
            },
            "description": "App ACE actions",
            "title": "App ACE Action",
            "required": [
                "drop",
                "limit",
                "limitrate",
                "limitunit",
                "limitburst",
                "portmap",
                "mapparams"
            ]
        },
        "appACEMatch": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Type"
                },
                "value": {
                    "type": "string",
                    "description": "Value"
                }
            },
            "description": "App ACE Match",
            "title": "appACEMatch detail",
            "required": [
                "type",
                "value"
            ]
        },
        "appInstConfigStatus": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "System defined universally unique Id of the app instance",
                    "readOnly": true,
                    "pattern": "[0-9A-Za-z-]+",
                    "uniqueItems": true
                },
                "name": {
                    "type": "string",
                    "description": "User defined name of the app instance, unique across the enterprise. Once app instance is created, name can\u2019t be changed",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                    "uniqueItems": true
                },
                "deviceId": {
                    "type": "string",
                    "description": "System generated identifier for the device",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                    "uniqueItems": true
                },
                "deviceName": {
                    "type": "string",
                    "description": "User defined name of the device, unique across the enterprise. Once device is created, name can\u2019t be changed",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                    "uniqueItems": true
                },
                "appId": {
                    "type": "string",
                    "description": "System generated identifier for the app bundle",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                    "uniqueItems": true
                },
                "appName": {
                    "type": "string",
                    "description": "User defined name of the edge app, unique across the enterprise. Once edge app is created, name can\u2019t be changed",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                    "uniqueItems": true
                },
                "projectId": {
                    "type": "string",
                    "description": "System generated identifier for the project",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                    "uniqueItems": true
                },
                "projectName": {
                    "type": "string",
                    "description": "User defined name of the project, unique across the enterprise. Once project is created, name can\u2019t be changed",
                    "maxLength": 256,
                    "minLength": 3,
                    "pattern": "[a-zA-Z0-9][a-zA-Z0-9_.-]+",
                    "uniqueItems": true
                },
                "runState": {
                    "$ref": "#/definitions/RunState",
                    "description": "operation status"
                },
                "Storage": {
                    "$ref": "#/definitions/StorageSummary",
                    "description": "storage summary"
                },
                "cpuUtilization": {
                    "type": "number",
                    "format": "double",
                    "description": "cpu utilization"
                },
                "memoryUtilization": {
                    "type": "number",
                    "format": "double",
                    "description": "memory utilization"
                },
                "storageUtilization": {
                    "type": "number",
                    "format": "double",
                    "description": "storage utilization"
                },
                "appType": {
                    "$ref": "#/definitions/AppType",
                    "description": "type of app"
                },
                "userDefinedVersion": {
                    "type": "string",
                    "description": "Instance version tells which edge app does this instance is running"
                },
                "swState": {
                    "$ref": "#/definitions/SWState",
                    "description": "sotware state"
                },
                "swInfo": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SWInfo"
                    },
                    "description": "Software details"
                },
                "manifestInfo": {
                    "$ref": "#/definitions/ManifestInfo",
                    "description": "app manifest Info"
                }
            },
            "description": "appInstConfigStatus stores the summary of the app instance config status",
            "title": "App instance config status"
        },
        "appInterface": {
            "type": "object",
            "properties": {
                "netname": {
                    "type": "string",
                    "description": "network name: will be deprecated in future, use netinstname"
                },
                "io": {
                    "$ref": "#/definitions/phyAdapter",
                    "description": "Physical Adapter to be matched for interface assignment. Applicable only when \"direct attach\" flag is true"
                },
                "intforder": {
                    "type": "number",
                    "format": "int64",
                    "description": "intforder"
                },
                "intfname": {
                    "type": "string",
                    "description": "intf Name"
                },
                "directattach": {
                    "type": "boolean",
                    "description": "direct attach flag",
                    "title": "comes from manifest during app create"
                },
                "privateip": {
                    "type": "string",
                    "description": "Private IP flag"
                },
                "acls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/appACE"
                    },
                    "description": "app Acls"
                },
                "ipaddr": {
                    "type": "string",
                    "description": "IP address",
                    "title": "if netname points static DHCP then we need to take\nstatic /32 address here"
                },
                "macaddr": {
                    "type": "string",
                    "description": "MAC address",
                    "title": "in case of p2v we might want to provide a mac-address.\napplicable only in case of DHCP=passthrough"
                },
                "accessVlanId": {
                    "type": "number",
                    "format": "int64",
                    "description": "access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges",
                    "maximum": 4093,
                    "minimum": 2
                },
                "eidregister": {
                    "$ref": "#/definitions/EIDRegister",
                    "description": "EID register details",
                    "title": "FIXME: Check why is this required"
                },
                "netinstname": {
                    "type": "string",
                    "description": "Network Instance name to be matched for interface assignment. Applicable only when \"direct attach\" flag is false"
                },
                "netinsttag": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Network Instance tag to be matched for interface assignment. Applicable only when \"direct attach\" flag is false"
                },
                "netinstid": {
                    "type": "string",
                    "description": "Network Instance id to be matched for interface assignment."
                },
                "defaultNetInstance": {
                    "type": "boolean",
                    "description": "default instance flag"
                }
            },
            "description": "App Interface detail",
            "title": "App Interface detail",
            "required": [
                "io",
                "intforder",
                "intfname",
                "directattach",
                "privateip",
                "acls",
                "ipaddr",
                "macaddr",
                "eidregister",
                "netinstname"
            ]
        },
        "appMapParams": {
            "type": "object",
            "properties": {
                "port": {
                    "type": "number",
                    "format": "int64",
                    "description": "Application port"
                }
            },
            "description": "Application map parameters",
            "title": "App map Params detail",
            "required": [
                "port"
            ]
        },
        "configFormat": {
            "type": "string",
            "enum": [
                "FmtUnknown",
                "RAW",
                "QCOW",
                "QCOW2",
                "VHD",
                "VMDK",
                "OVA",
                "VHDX",
                "CONTAINER",
                "ISO"
            ],
            "default": "FmtUnknown"
        },
        "drive": {
            "type": "object",
            "properties": {
                "imagename": {
                    "type": "string",
                    "description": "Name of Image Object used for the drive."
                },
                "maxsize": {
                    "type": "number",
                    "format": "uint64",
                    "description": "Drive maximum size"
                },
                "readonly": {
                    "type": "boolean",
                    "description": "Read only flag. If set, drive is mounted as readonly by app instance."
                },
                "preserve": {
                    "type": "boolean",
                    "description": "Preserve the drive even when all app instances using it are deleted"
                },
                "drvtype": {
                    "type": "string",
                    "description": "Type of Drive. Valid Values: UNSPECIFIED, CDROM, HDD, NET, HDD_EMPTY. HDD_EMPTY - is to allocate the empty disk of maxsizebytes specified"
                },
                "target": {
                    "type": "string",
                    "description": "type of target. Valid values: Disk, Kernel, Initrd, RamDisk"
                },
                "volumelabel": {
                    "type": "string",
                    "description": "User defined volume to use for this drive "
                },
                "mvolname": {
                    "type": "string",
                    "description": "mutable Volume for this drive. Only one of imvolname and mvolname must be specified."
                },
                "imvolname": {
                    "type": "string",
                    "description": "immutable Volume for this drive. Only one of imvolname and mvolname must be specified."
                },
                "ignorepurge": {
                    "type": "boolean",
                    "description": "don't purge this drive as part of purge command for mutable volumes"
                },
                "cleartext": {
                    "type": "boolean",
                    "description": "If set, don't encrypt the drive. Store in cleartext"
                },
                "mountpath": {
                    "type": "string",
                    "description": "Mount Path for the drive in the App Instance"
                }
            },
            "description": "Drive configuration",
            "title": "Drive details",
            "required": [
                "imagename",
                "maxsize",
                "readonly",
                "preserve",
                "drvtype",
                "target"
            ]
        },
        "googlerpcStatus": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/protobufAny"
                    }
                }
            }
        },
        "hvMode": {
            "type": "string",
            "enum": [
                "HV_PV",
                "HV_HVM",
                "HV_FML",
                "HV_NOHYPER",
                "HV_LEGACY"
            ],
            "default": "HV_PV",
            "description": "For now we need to tell the device which virtualization mode\nto use. Later we might use a single one for all VMs (on any particular\nISA). If we end up keeping this we should make the names be less\ntied to a particular hypervisor."
        },
        "phyAdapter": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "object",
                    "$ref": "#/definitions/IoType",
                    "description": "IoType specifies the type of the Input output of the device"
                },
                "name": {
                    "type": "string",
                    "description": "Physical Adapter name"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.",
                    "maxLength": 32,
                    "pattern": "^[^<%&?/\\>]+$"
                }
            },
            "description": "Physical Adapter",
            "title": "Physical Adapter"
        },
        "protobufAny": {
            "type": "object",
            "properties": {
                "typeUrl": {
                    "type": "string"
                },
                "value": {
                    "type": "string",
                    "format": "byte"
                }
            }
        },
        "protobufNullValue": {
            "type": "string",
            "enum": [
                "NULL_VALUE"
            ],
            "default": "NULL_VALUE",
            "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
        },
        "vm": {
            "type": "object",
            "properties": {
                "cpus": {
                    "type": "number",
                    "format": "int64",
                    "description": "CPUs"
                },
                "memory": {
                    "type": "number",
                    "format": "int64",
                    "description": "Memory"
                },
                "mode": {
                    "$ref": "#/definitions/hvMode",
                    "description": "Hardware Virtualization"
                },
                "vnc": {
                    "type": "boolean",
                    "description": "VNC"
                },
                "vncDisplay": {
                    "type": "number",
                    "format": "int64",
                    "description": "VNC display",
                    "readOnly": true
                },
                "cpuPinningEnabled": {
                    "type": "boolean",
                    "description": "Enable CpuPinning"
                }
            },
            "description": "Virtual machine memory configuration",
            "title": "vm detail",
            "required": [
                "cpus",
                "memory",
                "mode",
                "vnc"
            ]
        }
    },
    "securityDefinitions": {
        "BearerToken": {
            "type": "apiKey",
            "description": "Bearer token for user session",
            "name": "Authorization",
            "in": "header"
        }
    },
    "security": [
        {
            "BearerToken": []
        }
    ],
    "externalDocs": {
        "description": "ZEDEDA Product Documentation",
        "url": "https://docs.zededa.com/-M-8m8d8KqdLpfOgY_jo/edge-apps"
    }
}