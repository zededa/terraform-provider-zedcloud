// Copyright (c) 2018-2021 Zededa, Inc.
// SPDX-License-Identifier: Apache-2.0
//

terraform {
  required_providers {
    zedcloud = {
      source = "zededa/zedcloud"
      version = "1.0.8"
    }
  }
}

variable "zedcloud_token" {
  description = "ZEDCloud API Token"
  sensitive = true
  type        = string
}

provider "zedcloud" {
  zedcloud_url = "zedcloud.local.zededa.net"
  token = var.zedcloud_token
}

resource "zedcloud_edgenode" "test_tf_provider" {
  serialno = "2293dbe8-29ce-420c-8264-962857efc46b"

  name = "test_tf_provider"
  model_id = "c7d68c43-c61f-4b96-8b4b-c31dd4ff8947"
  project_id = "59e6d602-17c5-4773-b9eb-a969d36da9a4"
  title = "test_tf_provider-create_edgenode-title"
  eve_image_version = "eve_version_1.0"
  adminstate_config = "ADMIN_STATE_ACTIVE"
  asset_id = "asset_id"
  description = "description"
  dev_location {
    city = "berlin"
    country = "germany"
    freeloc = "freeloc"
    hostname = "hostname"
    loc = "52.520008, 13.404954"
    org = "zededa"
    postal = "10115"
    region = "europe/west"
    underlay_ip = ""
  }
  tags = {
    "tag-key-1" = "tag-value-1"
  }
}

data "zedcloud_edgenode" "test_tf_provider" {
  name = "test_tf_provider"
  title = zedcloud_edgenode.test_tf_provider.title
  model_id = zedcloud_edgenode.test_tf_provider.model_id
  depends_on = [
    zedcloud_edgenode.test_tf_provider
  ]
}

resource "zedcloud_edgeapp" "test_tf_provider" {
  name = "test_tf_provider"
  title = "ubuntu-all-ip"
  description = "ubuntu-all-ip"
  user_defined_version = "1.1"
  manifest_file = "./manifest.mirage.json"
}

data "zedcloud_edgeapp" "test_tf_provider" {
  name = "test_tf_provider"
  title = zedcloud_edgeapp.test_tf_provider.title
  depends_on = [
    zedcloud_edgeapp.test_tf_provider
  ]
}

resource "zedcloud_volume_instance"  "test_tf_provider" {
  device_id = data.zedcloud_edgenode.test_tf_provider.id
  name = "test_tf_provider"
  title = "test_title"
  description = "test_description"
  type = "VOLUME_INSTANCE_TYPE_BLOCKSTORAGE"
  multiattach = true
  cleartext = true
  accessmode = "VOLUME_INSTANCE_ACCESS_MODE_READWRITE"
  size_bytes = "1024"
  label = "label"
  depends_on = [
    data.zedcloud_edgenode.test_tf_provider
  ]
}

data "zedcloud_volume_instance" "test_tf_provider" {
  name = "test_tf_provider"
  type = zedcloud_volume_instance.test_tf_provider.type
  device_id = zedcloud_volume_instance.test_tf_provider.device_id
  title = zedcloud_volume_instance.test_tf_provider.title
  depends_on = [
    zedcloud_volume_instance.test_tf_provider
  ]
}

resource "zedcloud_network_instance" "test_tf_provider" {
  depends_on = [
    zedcloud_edgenode.test_tf_provider,
  ]
  device_id = data.zedcloud_edgenode.test_tf_provider.id
  name = "test_tf_provider"
  title = "title"
  kind = "NETWORK_INSTANCE_KIND_SWITCH"
  port = "eth1"
  description = "zedcloud_network_instance-complete-description"
  type = "NETWORK_INSTANCE_DHCP_TYPE_V4"
  device_default = false
  dns_list {
    addrs = [
      "10.1.2.2",
      "10.1.2.1"
    ]
    hostname = "wwww.ns2.example.com"
  }
  dns_list {
    addrs = [
      "10.1.1.1",
      "10.1.1.2"
    ]
    hostname = "wwww.ns1.example.com"
  }
  opaque {
    oconfig = "Test OConfig"
    type = "OPAQUE_CONFIG_TYPE_UNSPECIFIED"
  }
  tags = {
    "ni-tag1" = "ni-tag-value-1"
    "ni-tag2" = "ni-tag-value-2"
  }
}

data "zedcloud_network_instance" "test_tf_provider" {
  name = "test_tf_provider"
  kind = zedcloud_network_instance.test_tf_provider.kind
  device_id = zedcloud_network_instance.test_tf_provider.device_id
  title = zedcloud_network_instance.test_tf_provider.title
  depends_on = [
    zedcloud_network_instance.test_tf_provider
  ]
}

resource "zedcloud_edgeapp_instance"  "test_tf_provider" {
  depends_on = [
    zedcloud_edgeapp.test_tf_provider,
    zedcloud_edgenode.test_tf_provider,
    zedcloud_network_instance.test_tf_provider
  ]
  name = "test_tf_provider"
  title = "tf test"
  description = "tf test"
  activate = "true"
  app_id = zedcloud_edgeapp.test_tf_provider.id
  device_id = zedcloud_edgenode.test_tf_provider.id
  drive {
    drvtype = "UNSPECIFIED"
    imagename = "mirageBaseImage"
    maxsize = "0"
    preserve = false
    readonly = false
    target = "Disk"
    cleartext = false
    ignorepurge = false
  }
  interface {
    intfname = "eth0"
  }
  interface {
    netinstname = zedcloud_network_instance.test_tf_provider.name
    intfname = "indirect"
    macaddr = "5a:bc:93:42:98:64"
  }
  remote_console = false
  collect_stats_ip_addr = "true"
  app_policy_id = ""
  app_type = "APP_TYPE_VM"
  custom_config {
    add = false
    allow_storage_resize = false
    override = false

  }
  logs {
    access = false
  }

  tags = {
    "tag-key-1" = "tag-value-1"
  }
}

data "zedcloud_edgeapp_instance" "test_tf_provider" {
  depends_on = [
    zedcloud_edgeapp_instance.test_tf_provider
  ]
  name = "test_tf_provider"
  title = zedcloud_edgeapp_instance.test_tf_provider.title
  app_id = zedcloud_edgeapp_instance.test_tf_provider.app_id
  device_id = zedcloud_edgeapp_instance.test_tf_provider.device_id
}
