// Code generated by go-swagger; DO NOT EDIT.

package identity_access_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/terraform-provider/models"
)

// IdentityAccessManagementCreateDocPolicyReader is a Reader for the IdentityAccessManagementCreateDocPolicy structure.
type IdentityAccessManagementCreateDocPolicyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *IdentityAccessManagementCreateDocPolicyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewIdentityAccessManagementCreateDocPolicyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewIdentityAccessManagementCreateDocPolicyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewIdentityAccessManagementCreateDocPolicyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewIdentityAccessManagementCreateDocPolicyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewIdentityAccessManagementCreateDocPolicyConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewIdentityAccessManagementCreateDocPolicyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewIdentityAccessManagementCreateDocPolicyGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewIdentityAccessManagementCreateDocPolicyDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewIdentityAccessManagementCreateDocPolicyOK creates a IdentityAccessManagementCreateDocPolicyOK with default headers values
func NewIdentityAccessManagementCreateDocPolicyOK() *IdentityAccessManagementCreateDocPolicyOK {
	return &IdentityAccessManagementCreateDocPolicyOK{}
}

/*
IdentityAccessManagementCreateDocPolicyOK describes a response with status code 200, with default header values.

A successful response.
*/
type IdentityAccessManagementCreateDocPolicyOK struct {
	Payload *models.CrudResponse
}

// IsSuccess returns true when this identity access management create doc policy o k response has a 2xx status code
func (o *IdentityAccessManagementCreateDocPolicyOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this identity access management create doc policy o k response has a 3xx status code
func (o *IdentityAccessManagementCreateDocPolicyOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management create doc policy o k response has a 4xx status code
func (o *IdentityAccessManagementCreateDocPolicyOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this identity access management create doc policy o k response has a 5xx status code
func (o *IdentityAccessManagementCreateDocPolicyOK) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management create doc policy o k response a status code equal to that given
func (o *IdentityAccessManagementCreateDocPolicyOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the identity access management create doc policy o k response
func (o *IdentityAccessManagementCreateDocPolicyOK) Code() int {
	return 200
}

func (o *IdentityAccessManagementCreateDocPolicyOK) Error() string {
	return fmt.Sprintf("[POST /v1/cloud/policies][%d] identityAccessManagementCreateDocPolicyOK  %+v", 200, o.Payload)
}

func (o *IdentityAccessManagementCreateDocPolicyOK) String() string {
	return fmt.Sprintf("[POST /v1/cloud/policies][%d] identityAccessManagementCreateDocPolicyOK  %+v", 200, o.Payload)
}

func (o *IdentityAccessManagementCreateDocPolicyOK) GetPayload() *models.CrudResponse {
	return o.Payload
}

func (o *IdentityAccessManagementCreateDocPolicyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CrudResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementCreateDocPolicyBadRequest creates a IdentityAccessManagementCreateDocPolicyBadRequest with default headers values
func NewIdentityAccessManagementCreateDocPolicyBadRequest() *IdentityAccessManagementCreateDocPolicyBadRequest {
	return &IdentityAccessManagementCreateDocPolicyBadRequest{}
}

/*
IdentityAccessManagementCreateDocPolicyBadRequest describes a response with status code 400, with default header values.

Bad Request. The API gateway did not process the request because of missing parameter or invalid value of parameters.
*/
type IdentityAccessManagementCreateDocPolicyBadRequest struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management create doc policy bad request response has a 2xx status code
func (o *IdentityAccessManagementCreateDocPolicyBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management create doc policy bad request response has a 3xx status code
func (o *IdentityAccessManagementCreateDocPolicyBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management create doc policy bad request response has a 4xx status code
func (o *IdentityAccessManagementCreateDocPolicyBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this identity access management create doc policy bad request response has a 5xx status code
func (o *IdentityAccessManagementCreateDocPolicyBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management create doc policy bad request response a status code equal to that given
func (o *IdentityAccessManagementCreateDocPolicyBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the identity access management create doc policy bad request response
func (o *IdentityAccessManagementCreateDocPolicyBadRequest) Code() int {
	return 400
}

func (o *IdentityAccessManagementCreateDocPolicyBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/cloud/policies][%d] identityAccessManagementCreateDocPolicyBadRequest  %+v", 400, o.Payload)
}

func (o *IdentityAccessManagementCreateDocPolicyBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/cloud/policies][%d] identityAccessManagementCreateDocPolicyBadRequest  %+v", 400, o.Payload)
}

func (o *IdentityAccessManagementCreateDocPolicyBadRequest) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementCreateDocPolicyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementCreateDocPolicyUnauthorized creates a IdentityAccessManagementCreateDocPolicyUnauthorized with default headers values
func NewIdentityAccessManagementCreateDocPolicyUnauthorized() *IdentityAccessManagementCreateDocPolicyUnauthorized {
	return &IdentityAccessManagementCreateDocPolicyUnauthorized{}
}

/*
IdentityAccessManagementCreateDocPolicyUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type IdentityAccessManagementCreateDocPolicyUnauthorized struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management create doc policy unauthorized response has a 2xx status code
func (o *IdentityAccessManagementCreateDocPolicyUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management create doc policy unauthorized response has a 3xx status code
func (o *IdentityAccessManagementCreateDocPolicyUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management create doc policy unauthorized response has a 4xx status code
func (o *IdentityAccessManagementCreateDocPolicyUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this identity access management create doc policy unauthorized response has a 5xx status code
func (o *IdentityAccessManagementCreateDocPolicyUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management create doc policy unauthorized response a status code equal to that given
func (o *IdentityAccessManagementCreateDocPolicyUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the identity access management create doc policy unauthorized response
func (o *IdentityAccessManagementCreateDocPolicyUnauthorized) Code() int {
	return 401
}

func (o *IdentityAccessManagementCreateDocPolicyUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/cloud/policies][%d] identityAccessManagementCreateDocPolicyUnauthorized  %+v", 401, o.Payload)
}

func (o *IdentityAccessManagementCreateDocPolicyUnauthorized) String() string {
	return fmt.Sprintf("[POST /v1/cloud/policies][%d] identityAccessManagementCreateDocPolicyUnauthorized  %+v", 401, o.Payload)
}

func (o *IdentityAccessManagementCreateDocPolicyUnauthorized) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementCreateDocPolicyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementCreateDocPolicyForbidden creates a IdentityAccessManagementCreateDocPolicyForbidden with default headers values
func NewIdentityAccessManagementCreateDocPolicyForbidden() *IdentityAccessManagementCreateDocPolicyForbidden {
	return &IdentityAccessManagementCreateDocPolicyForbidden{}
}

/*
IdentityAccessManagementCreateDocPolicyForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type IdentityAccessManagementCreateDocPolicyForbidden struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management create doc policy forbidden response has a 2xx status code
func (o *IdentityAccessManagementCreateDocPolicyForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management create doc policy forbidden response has a 3xx status code
func (o *IdentityAccessManagementCreateDocPolicyForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management create doc policy forbidden response has a 4xx status code
func (o *IdentityAccessManagementCreateDocPolicyForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this identity access management create doc policy forbidden response has a 5xx status code
func (o *IdentityAccessManagementCreateDocPolicyForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management create doc policy forbidden response a status code equal to that given
func (o *IdentityAccessManagementCreateDocPolicyForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the identity access management create doc policy forbidden response
func (o *IdentityAccessManagementCreateDocPolicyForbidden) Code() int {
	return 403
}

func (o *IdentityAccessManagementCreateDocPolicyForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/cloud/policies][%d] identityAccessManagementCreateDocPolicyForbidden  %+v", 403, o.Payload)
}

func (o *IdentityAccessManagementCreateDocPolicyForbidden) String() string {
	return fmt.Sprintf("[POST /v1/cloud/policies][%d] identityAccessManagementCreateDocPolicyForbidden  %+v", 403, o.Payload)
}

func (o *IdentityAccessManagementCreateDocPolicyForbidden) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementCreateDocPolicyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementCreateDocPolicyConflict creates a IdentityAccessManagementCreateDocPolicyConflict with default headers values
func NewIdentityAccessManagementCreateDocPolicyConflict() *IdentityAccessManagementCreateDocPolicyConflict {
	return &IdentityAccessManagementCreateDocPolicyConflict{}
}

/*
IdentityAccessManagementCreateDocPolicyConflict describes a response with status code 409, with default header values.

Conflict. The API gateway did not process the request because this operation will conflict with an already existing operation.
*/
type IdentityAccessManagementCreateDocPolicyConflict struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management create doc policy conflict response has a 2xx status code
func (o *IdentityAccessManagementCreateDocPolicyConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management create doc policy conflict response has a 3xx status code
func (o *IdentityAccessManagementCreateDocPolicyConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management create doc policy conflict response has a 4xx status code
func (o *IdentityAccessManagementCreateDocPolicyConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this identity access management create doc policy conflict response has a 5xx status code
func (o *IdentityAccessManagementCreateDocPolicyConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management create doc policy conflict response a status code equal to that given
func (o *IdentityAccessManagementCreateDocPolicyConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the identity access management create doc policy conflict response
func (o *IdentityAccessManagementCreateDocPolicyConflict) Code() int {
	return 409
}

func (o *IdentityAccessManagementCreateDocPolicyConflict) Error() string {
	return fmt.Sprintf("[POST /v1/cloud/policies][%d] identityAccessManagementCreateDocPolicyConflict  %+v", 409, o.Payload)
}

func (o *IdentityAccessManagementCreateDocPolicyConflict) String() string {
	return fmt.Sprintf("[POST /v1/cloud/policies][%d] identityAccessManagementCreateDocPolicyConflict  %+v", 409, o.Payload)
}

func (o *IdentityAccessManagementCreateDocPolicyConflict) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementCreateDocPolicyConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementCreateDocPolicyInternalServerError creates a IdentityAccessManagementCreateDocPolicyInternalServerError with default headers values
func NewIdentityAccessManagementCreateDocPolicyInternalServerError() *IdentityAccessManagementCreateDocPolicyInternalServerError {
	return &IdentityAccessManagementCreateDocPolicyInternalServerError{}
}

/*
IdentityAccessManagementCreateDocPolicyInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type IdentityAccessManagementCreateDocPolicyInternalServerError struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management create doc policy internal server error response has a 2xx status code
func (o *IdentityAccessManagementCreateDocPolicyInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management create doc policy internal server error response has a 3xx status code
func (o *IdentityAccessManagementCreateDocPolicyInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management create doc policy internal server error response has a 4xx status code
func (o *IdentityAccessManagementCreateDocPolicyInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this identity access management create doc policy internal server error response has a 5xx status code
func (o *IdentityAccessManagementCreateDocPolicyInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this identity access management create doc policy internal server error response a status code equal to that given
func (o *IdentityAccessManagementCreateDocPolicyInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the identity access management create doc policy internal server error response
func (o *IdentityAccessManagementCreateDocPolicyInternalServerError) Code() int {
	return 500
}

func (o *IdentityAccessManagementCreateDocPolicyInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/cloud/policies][%d] identityAccessManagementCreateDocPolicyInternalServerError  %+v", 500, o.Payload)
}

func (o *IdentityAccessManagementCreateDocPolicyInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/cloud/policies][%d] identityAccessManagementCreateDocPolicyInternalServerError  %+v", 500, o.Payload)
}

func (o *IdentityAccessManagementCreateDocPolicyInternalServerError) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementCreateDocPolicyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementCreateDocPolicyGatewayTimeout creates a IdentityAccessManagementCreateDocPolicyGatewayTimeout with default headers values
func NewIdentityAccessManagementCreateDocPolicyGatewayTimeout() *IdentityAccessManagementCreateDocPolicyGatewayTimeout {
	return &IdentityAccessManagementCreateDocPolicyGatewayTimeout{}
}

/*
IdentityAccessManagementCreateDocPolicyGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type IdentityAccessManagementCreateDocPolicyGatewayTimeout struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management create doc policy gateway timeout response has a 2xx status code
func (o *IdentityAccessManagementCreateDocPolicyGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management create doc policy gateway timeout response has a 3xx status code
func (o *IdentityAccessManagementCreateDocPolicyGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management create doc policy gateway timeout response has a 4xx status code
func (o *IdentityAccessManagementCreateDocPolicyGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this identity access management create doc policy gateway timeout response has a 5xx status code
func (o *IdentityAccessManagementCreateDocPolicyGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this identity access management create doc policy gateway timeout response a status code equal to that given
func (o *IdentityAccessManagementCreateDocPolicyGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the identity access management create doc policy gateway timeout response
func (o *IdentityAccessManagementCreateDocPolicyGatewayTimeout) Code() int {
	return 504
}

func (o *IdentityAccessManagementCreateDocPolicyGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /v1/cloud/policies][%d] identityAccessManagementCreateDocPolicyGatewayTimeout  %+v", 504, o.Payload)
}

func (o *IdentityAccessManagementCreateDocPolicyGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /v1/cloud/policies][%d] identityAccessManagementCreateDocPolicyGatewayTimeout  %+v", 504, o.Payload)
}

func (o *IdentityAccessManagementCreateDocPolicyGatewayTimeout) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementCreateDocPolicyGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementCreateDocPolicyDefault creates a IdentityAccessManagementCreateDocPolicyDefault with default headers values
func NewIdentityAccessManagementCreateDocPolicyDefault(code int) *IdentityAccessManagementCreateDocPolicyDefault {
	return &IdentityAccessManagementCreateDocPolicyDefault{
		_statusCode: code,
	}
}

/*
IdentityAccessManagementCreateDocPolicyDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type IdentityAccessManagementCreateDocPolicyDefault struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// IsSuccess returns true when this identity access management create doc policy default response has a 2xx status code
func (o *IdentityAccessManagementCreateDocPolicyDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this identity access management create doc policy default response has a 3xx status code
func (o *IdentityAccessManagementCreateDocPolicyDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this identity access management create doc policy default response has a 4xx status code
func (o *IdentityAccessManagementCreateDocPolicyDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this identity access management create doc policy default response has a 5xx status code
func (o *IdentityAccessManagementCreateDocPolicyDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this identity access management create doc policy default response a status code equal to that given
func (o *IdentityAccessManagementCreateDocPolicyDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the identity access management create doc policy default response
func (o *IdentityAccessManagementCreateDocPolicyDefault) Code() int {
	return o._statusCode
}

func (o *IdentityAccessManagementCreateDocPolicyDefault) Error() string {
	return fmt.Sprintf("[POST /v1/cloud/policies][%d] IdentityAccessManagement_CreateDocPolicy default  %+v", o._statusCode, o.Payload)
}

func (o *IdentityAccessManagementCreateDocPolicyDefault) String() string {
	return fmt.Sprintf("[POST /v1/cloud/policies][%d] IdentityAccessManagement_CreateDocPolicy default  %+v", o._statusCode, o.Payload)
}

func (o *IdentityAccessManagementCreateDocPolicyDefault) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *IdentityAccessManagementCreateDocPolicyDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
