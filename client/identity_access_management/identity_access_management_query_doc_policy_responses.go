// Code generated by go-swagger; DO NOT EDIT.

package identity_access_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/terraform-provider/models"
)

// IdentityAccessManagementQueryDocPolicyReader is a Reader for the IdentityAccessManagementQueryDocPolicy structure.
type IdentityAccessManagementQueryDocPolicyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *IdentityAccessManagementQueryDocPolicyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewIdentityAccessManagementQueryDocPolicyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewIdentityAccessManagementQueryDocPolicyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewIdentityAccessManagementQueryDocPolicyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewIdentityAccessManagementQueryDocPolicyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewIdentityAccessManagementQueryDocPolicyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewIdentityAccessManagementQueryDocPolicyGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewIdentityAccessManagementQueryDocPolicyDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewIdentityAccessManagementQueryDocPolicyOK creates a IdentityAccessManagementQueryDocPolicyOK with default headers values
func NewIdentityAccessManagementQueryDocPolicyOK() *IdentityAccessManagementQueryDocPolicyOK {
	return &IdentityAccessManagementQueryDocPolicyOK{}
}

/*
IdentityAccessManagementQueryDocPolicyOK describes a response with status code 200, with default header values.

A successful response.
*/
type IdentityAccessManagementQueryDocPolicyOK struct {
	Payload *models.CrudResponse
}

// IsSuccess returns true when this identity access management query doc policy o k response has a 2xx status code
func (o *IdentityAccessManagementQueryDocPolicyOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this identity access management query doc policy o k response has a 3xx status code
func (o *IdentityAccessManagementQueryDocPolicyOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management query doc policy o k response has a 4xx status code
func (o *IdentityAccessManagementQueryDocPolicyOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this identity access management query doc policy o k response has a 5xx status code
func (o *IdentityAccessManagementQueryDocPolicyOK) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management query doc policy o k response a status code equal to that given
func (o *IdentityAccessManagementQueryDocPolicyOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the identity access management query doc policy o k response
func (o *IdentityAccessManagementQueryDocPolicyOK) Code() int {
	return 200
}

func (o *IdentityAccessManagementQueryDocPolicyOK) Error() string {
	return fmt.Sprintf("[GET /v1/cloud/policies][%d] identityAccessManagementQueryDocPolicyOK  %+v", 200, o.Payload)
}

func (o *IdentityAccessManagementQueryDocPolicyOK) String() string {
	return fmt.Sprintf("[GET /v1/cloud/policies][%d] identityAccessManagementQueryDocPolicyOK  %+v", 200, o.Payload)
}

func (o *IdentityAccessManagementQueryDocPolicyOK) GetPayload() *models.CrudResponse {
	return o.Payload
}

func (o *IdentityAccessManagementQueryDocPolicyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CrudResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementQueryDocPolicyBadRequest creates a IdentityAccessManagementQueryDocPolicyBadRequest with default headers values
func NewIdentityAccessManagementQueryDocPolicyBadRequest() *IdentityAccessManagementQueryDocPolicyBadRequest {
	return &IdentityAccessManagementQueryDocPolicyBadRequest{}
}

/*
IdentityAccessManagementQueryDocPolicyBadRequest describes a response with status code 400, with default header values.

Bad Request. The API gateway did not process the request because of invalid value of filter parameters.
*/
type IdentityAccessManagementQueryDocPolicyBadRequest struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management query doc policy bad request response has a 2xx status code
func (o *IdentityAccessManagementQueryDocPolicyBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management query doc policy bad request response has a 3xx status code
func (o *IdentityAccessManagementQueryDocPolicyBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management query doc policy bad request response has a 4xx status code
func (o *IdentityAccessManagementQueryDocPolicyBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this identity access management query doc policy bad request response has a 5xx status code
func (o *IdentityAccessManagementQueryDocPolicyBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management query doc policy bad request response a status code equal to that given
func (o *IdentityAccessManagementQueryDocPolicyBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the identity access management query doc policy bad request response
func (o *IdentityAccessManagementQueryDocPolicyBadRequest) Code() int {
	return 400
}

func (o *IdentityAccessManagementQueryDocPolicyBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/cloud/policies][%d] identityAccessManagementQueryDocPolicyBadRequest  %+v", 400, o.Payload)
}

func (o *IdentityAccessManagementQueryDocPolicyBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/cloud/policies][%d] identityAccessManagementQueryDocPolicyBadRequest  %+v", 400, o.Payload)
}

func (o *IdentityAccessManagementQueryDocPolicyBadRequest) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementQueryDocPolicyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementQueryDocPolicyUnauthorized creates a IdentityAccessManagementQueryDocPolicyUnauthorized with default headers values
func NewIdentityAccessManagementQueryDocPolicyUnauthorized() *IdentityAccessManagementQueryDocPolicyUnauthorized {
	return &IdentityAccessManagementQueryDocPolicyUnauthorized{}
}

/*
IdentityAccessManagementQueryDocPolicyUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type IdentityAccessManagementQueryDocPolicyUnauthorized struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management query doc policy unauthorized response has a 2xx status code
func (o *IdentityAccessManagementQueryDocPolicyUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management query doc policy unauthorized response has a 3xx status code
func (o *IdentityAccessManagementQueryDocPolicyUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management query doc policy unauthorized response has a 4xx status code
func (o *IdentityAccessManagementQueryDocPolicyUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this identity access management query doc policy unauthorized response has a 5xx status code
func (o *IdentityAccessManagementQueryDocPolicyUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management query doc policy unauthorized response a status code equal to that given
func (o *IdentityAccessManagementQueryDocPolicyUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the identity access management query doc policy unauthorized response
func (o *IdentityAccessManagementQueryDocPolicyUnauthorized) Code() int {
	return 401
}

func (o *IdentityAccessManagementQueryDocPolicyUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/cloud/policies][%d] identityAccessManagementQueryDocPolicyUnauthorized  %+v", 401, o.Payload)
}

func (o *IdentityAccessManagementQueryDocPolicyUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/cloud/policies][%d] identityAccessManagementQueryDocPolicyUnauthorized  %+v", 401, o.Payload)
}

func (o *IdentityAccessManagementQueryDocPolicyUnauthorized) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementQueryDocPolicyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementQueryDocPolicyForbidden creates a IdentityAccessManagementQueryDocPolicyForbidden with default headers values
func NewIdentityAccessManagementQueryDocPolicyForbidden() *IdentityAccessManagementQueryDocPolicyForbidden {
	return &IdentityAccessManagementQueryDocPolicyForbidden{}
}

/*
IdentityAccessManagementQueryDocPolicyForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type IdentityAccessManagementQueryDocPolicyForbidden struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management query doc policy forbidden response has a 2xx status code
func (o *IdentityAccessManagementQueryDocPolicyForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management query doc policy forbidden response has a 3xx status code
func (o *IdentityAccessManagementQueryDocPolicyForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management query doc policy forbidden response has a 4xx status code
func (o *IdentityAccessManagementQueryDocPolicyForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this identity access management query doc policy forbidden response has a 5xx status code
func (o *IdentityAccessManagementQueryDocPolicyForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management query doc policy forbidden response a status code equal to that given
func (o *IdentityAccessManagementQueryDocPolicyForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the identity access management query doc policy forbidden response
func (o *IdentityAccessManagementQueryDocPolicyForbidden) Code() int {
	return 403
}

func (o *IdentityAccessManagementQueryDocPolicyForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/cloud/policies][%d] identityAccessManagementQueryDocPolicyForbidden  %+v", 403, o.Payload)
}

func (o *IdentityAccessManagementQueryDocPolicyForbidden) String() string {
	return fmt.Sprintf("[GET /v1/cloud/policies][%d] identityAccessManagementQueryDocPolicyForbidden  %+v", 403, o.Payload)
}

func (o *IdentityAccessManagementQueryDocPolicyForbidden) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementQueryDocPolicyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementQueryDocPolicyInternalServerError creates a IdentityAccessManagementQueryDocPolicyInternalServerError with default headers values
func NewIdentityAccessManagementQueryDocPolicyInternalServerError() *IdentityAccessManagementQueryDocPolicyInternalServerError {
	return &IdentityAccessManagementQueryDocPolicyInternalServerError{}
}

/*
IdentityAccessManagementQueryDocPolicyInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type IdentityAccessManagementQueryDocPolicyInternalServerError struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management query doc policy internal server error response has a 2xx status code
func (o *IdentityAccessManagementQueryDocPolicyInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management query doc policy internal server error response has a 3xx status code
func (o *IdentityAccessManagementQueryDocPolicyInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management query doc policy internal server error response has a 4xx status code
func (o *IdentityAccessManagementQueryDocPolicyInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this identity access management query doc policy internal server error response has a 5xx status code
func (o *IdentityAccessManagementQueryDocPolicyInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this identity access management query doc policy internal server error response a status code equal to that given
func (o *IdentityAccessManagementQueryDocPolicyInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the identity access management query doc policy internal server error response
func (o *IdentityAccessManagementQueryDocPolicyInternalServerError) Code() int {
	return 500
}

func (o *IdentityAccessManagementQueryDocPolicyInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/cloud/policies][%d] identityAccessManagementQueryDocPolicyInternalServerError  %+v", 500, o.Payload)
}

func (o *IdentityAccessManagementQueryDocPolicyInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/cloud/policies][%d] identityAccessManagementQueryDocPolicyInternalServerError  %+v", 500, o.Payload)
}

func (o *IdentityAccessManagementQueryDocPolicyInternalServerError) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementQueryDocPolicyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementQueryDocPolicyGatewayTimeout creates a IdentityAccessManagementQueryDocPolicyGatewayTimeout with default headers values
func NewIdentityAccessManagementQueryDocPolicyGatewayTimeout() *IdentityAccessManagementQueryDocPolicyGatewayTimeout {
	return &IdentityAccessManagementQueryDocPolicyGatewayTimeout{}
}

/*
IdentityAccessManagementQueryDocPolicyGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type IdentityAccessManagementQueryDocPolicyGatewayTimeout struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management query doc policy gateway timeout response has a 2xx status code
func (o *IdentityAccessManagementQueryDocPolicyGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management query doc policy gateway timeout response has a 3xx status code
func (o *IdentityAccessManagementQueryDocPolicyGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management query doc policy gateway timeout response has a 4xx status code
func (o *IdentityAccessManagementQueryDocPolicyGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this identity access management query doc policy gateway timeout response has a 5xx status code
func (o *IdentityAccessManagementQueryDocPolicyGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this identity access management query doc policy gateway timeout response a status code equal to that given
func (o *IdentityAccessManagementQueryDocPolicyGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the identity access management query doc policy gateway timeout response
func (o *IdentityAccessManagementQueryDocPolicyGatewayTimeout) Code() int {
	return 504
}

func (o *IdentityAccessManagementQueryDocPolicyGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/cloud/policies][%d] identityAccessManagementQueryDocPolicyGatewayTimeout  %+v", 504, o.Payload)
}

func (o *IdentityAccessManagementQueryDocPolicyGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /v1/cloud/policies][%d] identityAccessManagementQueryDocPolicyGatewayTimeout  %+v", 504, o.Payload)
}

func (o *IdentityAccessManagementQueryDocPolicyGatewayTimeout) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementQueryDocPolicyGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementQueryDocPolicyDefault creates a IdentityAccessManagementQueryDocPolicyDefault with default headers values
func NewIdentityAccessManagementQueryDocPolicyDefault(code int) *IdentityAccessManagementQueryDocPolicyDefault {
	return &IdentityAccessManagementQueryDocPolicyDefault{
		_statusCode: code,
	}
}

/*
IdentityAccessManagementQueryDocPolicyDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type IdentityAccessManagementQueryDocPolicyDefault struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// IsSuccess returns true when this identity access management query doc policy default response has a 2xx status code
func (o *IdentityAccessManagementQueryDocPolicyDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this identity access management query doc policy default response has a 3xx status code
func (o *IdentityAccessManagementQueryDocPolicyDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this identity access management query doc policy default response has a 4xx status code
func (o *IdentityAccessManagementQueryDocPolicyDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this identity access management query doc policy default response has a 5xx status code
func (o *IdentityAccessManagementQueryDocPolicyDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this identity access management query doc policy default response a status code equal to that given
func (o *IdentityAccessManagementQueryDocPolicyDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the identity access management query doc policy default response
func (o *IdentityAccessManagementQueryDocPolicyDefault) Code() int {
	return o._statusCode
}

func (o *IdentityAccessManagementQueryDocPolicyDefault) Error() string {
	return fmt.Sprintf("[GET /v1/cloud/policies][%d] IdentityAccessManagement_QueryDocPolicy default  %+v", o._statusCode, o.Payload)
}

func (o *IdentityAccessManagementQueryDocPolicyDefault) String() string {
	return fmt.Sprintf("[GET /v1/cloud/policies][%d] IdentityAccessManagement_QueryDocPolicy default  %+v", o._statusCode, o.Payload)
}

func (o *IdentityAccessManagementQueryDocPolicyDefault) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *IdentityAccessManagementQueryDocPolicyDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
