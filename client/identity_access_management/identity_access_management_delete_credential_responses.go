// Code generated by go-swagger; DO NOT EDIT.

package identity_access_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/terraform-provider-zedcloud/models"
)

// IdentityAccessManagementDeleteCredentialReader is a Reader for the IdentityAccessManagementDeleteCredential structure.
type IdentityAccessManagementDeleteCredentialReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *IdentityAccessManagementDeleteCredentialReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewIdentityAccessManagementDeleteCredentialOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewIdentityAccessManagementDeleteCredentialUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewIdentityAccessManagementDeleteCredentialForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewIdentityAccessManagementDeleteCredentialNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewIdentityAccessManagementDeleteCredentialInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewIdentityAccessManagementDeleteCredentialGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewIdentityAccessManagementDeleteCredentialDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewIdentityAccessManagementDeleteCredentialOK creates a IdentityAccessManagementDeleteCredentialOK with default headers values
func NewIdentityAccessManagementDeleteCredentialOK() *IdentityAccessManagementDeleteCredentialOK {
	return &IdentityAccessManagementDeleteCredentialOK{}
}

/*
IdentityAccessManagementDeleteCredentialOK describes a response with status code 200, with default header values.

A successful response.
*/
type IdentityAccessManagementDeleteCredentialOK struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management delete credential o k response has a 2xx status code
func (o *IdentityAccessManagementDeleteCredentialOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this identity access management delete credential o k response has a 3xx status code
func (o *IdentityAccessManagementDeleteCredentialOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management delete credential o k response has a 4xx status code
func (o *IdentityAccessManagementDeleteCredentialOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this identity access management delete credential o k response has a 5xx status code
func (o *IdentityAccessManagementDeleteCredentialOK) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management delete credential o k response a status code equal to that given
func (o *IdentityAccessManagementDeleteCredentialOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the identity access management delete credential o k response
func (o *IdentityAccessManagementDeleteCredentialOK) Code() int {
	return 200
}

func (o *IdentityAccessManagementDeleteCredentialOK) Error() string {
	return fmt.Sprintf("[DELETE /v1/credentials/id/{id}][%d] identityAccessManagementDeleteCredentialOK  %+v", 200, o.Payload)
}

func (o *IdentityAccessManagementDeleteCredentialOK) String() string {
	return fmt.Sprintf("[DELETE /v1/credentials/id/{id}][%d] identityAccessManagementDeleteCredentialOK  %+v", 200, o.Payload)
}

func (o *IdentityAccessManagementDeleteCredentialOK) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementDeleteCredentialOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementDeleteCredentialUnauthorized creates a IdentityAccessManagementDeleteCredentialUnauthorized with default headers values
func NewIdentityAccessManagementDeleteCredentialUnauthorized() *IdentityAccessManagementDeleteCredentialUnauthorized {
	return &IdentityAccessManagementDeleteCredentialUnauthorized{}
}

/*
IdentityAccessManagementDeleteCredentialUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type IdentityAccessManagementDeleteCredentialUnauthorized struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management delete credential unauthorized response has a 2xx status code
func (o *IdentityAccessManagementDeleteCredentialUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management delete credential unauthorized response has a 3xx status code
func (o *IdentityAccessManagementDeleteCredentialUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management delete credential unauthorized response has a 4xx status code
func (o *IdentityAccessManagementDeleteCredentialUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this identity access management delete credential unauthorized response has a 5xx status code
func (o *IdentityAccessManagementDeleteCredentialUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management delete credential unauthorized response a status code equal to that given
func (o *IdentityAccessManagementDeleteCredentialUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the identity access management delete credential unauthorized response
func (o *IdentityAccessManagementDeleteCredentialUnauthorized) Code() int {
	return 401
}

func (o *IdentityAccessManagementDeleteCredentialUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /v1/credentials/id/{id}][%d] identityAccessManagementDeleteCredentialUnauthorized  %+v", 401, o.Payload)
}

func (o *IdentityAccessManagementDeleteCredentialUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /v1/credentials/id/{id}][%d] identityAccessManagementDeleteCredentialUnauthorized  %+v", 401, o.Payload)
}

func (o *IdentityAccessManagementDeleteCredentialUnauthorized) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementDeleteCredentialUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementDeleteCredentialForbidden creates a IdentityAccessManagementDeleteCredentialForbidden with default headers values
func NewIdentityAccessManagementDeleteCredentialForbidden() *IdentityAccessManagementDeleteCredentialForbidden {
	return &IdentityAccessManagementDeleteCredentialForbidden{}
}

/*
IdentityAccessManagementDeleteCredentialForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type IdentityAccessManagementDeleteCredentialForbidden struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management delete credential forbidden response has a 2xx status code
func (o *IdentityAccessManagementDeleteCredentialForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management delete credential forbidden response has a 3xx status code
func (o *IdentityAccessManagementDeleteCredentialForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management delete credential forbidden response has a 4xx status code
func (o *IdentityAccessManagementDeleteCredentialForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this identity access management delete credential forbidden response has a 5xx status code
func (o *IdentityAccessManagementDeleteCredentialForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management delete credential forbidden response a status code equal to that given
func (o *IdentityAccessManagementDeleteCredentialForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the identity access management delete credential forbidden response
func (o *IdentityAccessManagementDeleteCredentialForbidden) Code() int {
	return 403
}

func (o *IdentityAccessManagementDeleteCredentialForbidden) Error() string {
	return fmt.Sprintf("[DELETE /v1/credentials/id/{id}][%d] identityAccessManagementDeleteCredentialForbidden  %+v", 403, o.Payload)
}

func (o *IdentityAccessManagementDeleteCredentialForbidden) String() string {
	return fmt.Sprintf("[DELETE /v1/credentials/id/{id}][%d] identityAccessManagementDeleteCredentialForbidden  %+v", 403, o.Payload)
}

func (o *IdentityAccessManagementDeleteCredentialForbidden) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementDeleteCredentialForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementDeleteCredentialNotFound creates a IdentityAccessManagementDeleteCredentialNotFound with default headers values
func NewIdentityAccessManagementDeleteCredentialNotFound() *IdentityAccessManagementDeleteCredentialNotFound {
	return &IdentityAccessManagementDeleteCredentialNotFound{}
}

/*
IdentityAccessManagementDeleteCredentialNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type IdentityAccessManagementDeleteCredentialNotFound struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management delete credential not found response has a 2xx status code
func (o *IdentityAccessManagementDeleteCredentialNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management delete credential not found response has a 3xx status code
func (o *IdentityAccessManagementDeleteCredentialNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management delete credential not found response has a 4xx status code
func (o *IdentityAccessManagementDeleteCredentialNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this identity access management delete credential not found response has a 5xx status code
func (o *IdentityAccessManagementDeleteCredentialNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management delete credential not found response a status code equal to that given
func (o *IdentityAccessManagementDeleteCredentialNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the identity access management delete credential not found response
func (o *IdentityAccessManagementDeleteCredentialNotFound) Code() int {
	return 404
}

func (o *IdentityAccessManagementDeleteCredentialNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/credentials/id/{id}][%d] identityAccessManagementDeleteCredentialNotFound  %+v", 404, o.Payload)
}

func (o *IdentityAccessManagementDeleteCredentialNotFound) String() string {
	return fmt.Sprintf("[DELETE /v1/credentials/id/{id}][%d] identityAccessManagementDeleteCredentialNotFound  %+v", 404, o.Payload)
}

func (o *IdentityAccessManagementDeleteCredentialNotFound) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementDeleteCredentialNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementDeleteCredentialInternalServerError creates a IdentityAccessManagementDeleteCredentialInternalServerError with default headers values
func NewIdentityAccessManagementDeleteCredentialInternalServerError() *IdentityAccessManagementDeleteCredentialInternalServerError {
	return &IdentityAccessManagementDeleteCredentialInternalServerError{}
}

/*
IdentityAccessManagementDeleteCredentialInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type IdentityAccessManagementDeleteCredentialInternalServerError struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management delete credential internal server error response has a 2xx status code
func (o *IdentityAccessManagementDeleteCredentialInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management delete credential internal server error response has a 3xx status code
func (o *IdentityAccessManagementDeleteCredentialInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management delete credential internal server error response has a 4xx status code
func (o *IdentityAccessManagementDeleteCredentialInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this identity access management delete credential internal server error response has a 5xx status code
func (o *IdentityAccessManagementDeleteCredentialInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this identity access management delete credential internal server error response a status code equal to that given
func (o *IdentityAccessManagementDeleteCredentialInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the identity access management delete credential internal server error response
func (o *IdentityAccessManagementDeleteCredentialInternalServerError) Code() int {
	return 500
}

func (o *IdentityAccessManagementDeleteCredentialInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /v1/credentials/id/{id}][%d] identityAccessManagementDeleteCredentialInternalServerError  %+v", 500, o.Payload)
}

func (o *IdentityAccessManagementDeleteCredentialInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /v1/credentials/id/{id}][%d] identityAccessManagementDeleteCredentialInternalServerError  %+v", 500, o.Payload)
}

func (o *IdentityAccessManagementDeleteCredentialInternalServerError) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementDeleteCredentialInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementDeleteCredentialGatewayTimeout creates a IdentityAccessManagementDeleteCredentialGatewayTimeout with default headers values
func NewIdentityAccessManagementDeleteCredentialGatewayTimeout() *IdentityAccessManagementDeleteCredentialGatewayTimeout {
	return &IdentityAccessManagementDeleteCredentialGatewayTimeout{}
}

/*
IdentityAccessManagementDeleteCredentialGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type IdentityAccessManagementDeleteCredentialGatewayTimeout struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management delete credential gateway timeout response has a 2xx status code
func (o *IdentityAccessManagementDeleteCredentialGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management delete credential gateway timeout response has a 3xx status code
func (o *IdentityAccessManagementDeleteCredentialGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management delete credential gateway timeout response has a 4xx status code
func (o *IdentityAccessManagementDeleteCredentialGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this identity access management delete credential gateway timeout response has a 5xx status code
func (o *IdentityAccessManagementDeleteCredentialGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this identity access management delete credential gateway timeout response a status code equal to that given
func (o *IdentityAccessManagementDeleteCredentialGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the identity access management delete credential gateway timeout response
func (o *IdentityAccessManagementDeleteCredentialGatewayTimeout) Code() int {
	return 504
}

func (o *IdentityAccessManagementDeleteCredentialGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /v1/credentials/id/{id}][%d] identityAccessManagementDeleteCredentialGatewayTimeout  %+v", 504, o.Payload)
}

func (o *IdentityAccessManagementDeleteCredentialGatewayTimeout) String() string {
	return fmt.Sprintf("[DELETE /v1/credentials/id/{id}][%d] identityAccessManagementDeleteCredentialGatewayTimeout  %+v", 504, o.Payload)
}

func (o *IdentityAccessManagementDeleteCredentialGatewayTimeout) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementDeleteCredentialGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementDeleteCredentialDefault creates a IdentityAccessManagementDeleteCredentialDefault with default headers values
func NewIdentityAccessManagementDeleteCredentialDefault(code int) *IdentityAccessManagementDeleteCredentialDefault {
	return &IdentityAccessManagementDeleteCredentialDefault{
		_statusCode: code,
	}
}

/*
IdentityAccessManagementDeleteCredentialDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type IdentityAccessManagementDeleteCredentialDefault struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// IsSuccess returns true when this identity access management delete credential default response has a 2xx status code
func (o *IdentityAccessManagementDeleteCredentialDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this identity access management delete credential default response has a 3xx status code
func (o *IdentityAccessManagementDeleteCredentialDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this identity access management delete credential default response has a 4xx status code
func (o *IdentityAccessManagementDeleteCredentialDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this identity access management delete credential default response has a 5xx status code
func (o *IdentityAccessManagementDeleteCredentialDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this identity access management delete credential default response a status code equal to that given
func (o *IdentityAccessManagementDeleteCredentialDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the identity access management delete credential default response
func (o *IdentityAccessManagementDeleteCredentialDefault) Code() int {
	return o._statusCode
}

func (o *IdentityAccessManagementDeleteCredentialDefault) Error() string {
	return fmt.Sprintf("[DELETE /v1/credentials/id/{id}][%d] IdentityAccessManagement_DeleteCredential default  %+v", o._statusCode, o.Payload)
}

func (o *IdentityAccessManagementDeleteCredentialDefault) String() string {
	return fmt.Sprintf("[DELETE /v1/credentials/id/{id}][%d] IdentityAccessManagement_DeleteCredential default  %+v", o._statusCode, o.Payload)
}

func (o *IdentityAccessManagementDeleteCredentialDefault) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *IdentityAccessManagementDeleteCredentialDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
