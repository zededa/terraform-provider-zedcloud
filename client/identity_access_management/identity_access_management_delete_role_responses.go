// Code generated by go-swagger; DO NOT EDIT.

package identity_access_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/terraform-provider-zedcloud/models"
)

// IdentityAccessManagementDeleteRoleReader is a Reader for the IdentityAccessManagementDeleteRole structure.
type IdentityAccessManagementDeleteRoleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *IdentityAccessManagementDeleteRoleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewIdentityAccessManagementDeleteRoleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewIdentityAccessManagementDeleteRoleUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewIdentityAccessManagementDeleteRoleForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewIdentityAccessManagementDeleteRoleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewIdentityAccessManagementDeleteRoleConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewIdentityAccessManagementDeleteRoleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewIdentityAccessManagementDeleteRoleGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewIdentityAccessManagementDeleteRoleDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewIdentityAccessManagementDeleteRoleOK creates a IdentityAccessManagementDeleteRoleOK with default headers values
func NewIdentityAccessManagementDeleteRoleOK() *IdentityAccessManagementDeleteRoleOK {
	return &IdentityAccessManagementDeleteRoleOK{}
}

/*
IdentityAccessManagementDeleteRoleOK describes a response with status code 200, with default header values.

A successful response.
*/
type IdentityAccessManagementDeleteRoleOK struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management delete role o k response has a 2xx status code
func (o *IdentityAccessManagementDeleteRoleOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this identity access management delete role o k response has a 3xx status code
func (o *IdentityAccessManagementDeleteRoleOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management delete role o k response has a 4xx status code
func (o *IdentityAccessManagementDeleteRoleOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this identity access management delete role o k response has a 5xx status code
func (o *IdentityAccessManagementDeleteRoleOK) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management delete role o k response a status code equal to that given
func (o *IdentityAccessManagementDeleteRoleOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the identity access management delete role o k response
func (o *IdentityAccessManagementDeleteRoleOK) Code() int {
	return 200
}

func (o *IdentityAccessManagementDeleteRoleOK) Error() string {
	return fmt.Sprintf("[DELETE /v1/roles/id/{id}][%d] identityAccessManagementDeleteRoleOK  %+v", 200, o.Payload)
}

func (o *IdentityAccessManagementDeleteRoleOK) String() string {
	return fmt.Sprintf("[DELETE /v1/roles/id/{id}][%d] identityAccessManagementDeleteRoleOK  %+v", 200, o.Payload)
}

func (o *IdentityAccessManagementDeleteRoleOK) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementDeleteRoleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementDeleteRoleUnauthorized creates a IdentityAccessManagementDeleteRoleUnauthorized with default headers values
func NewIdentityAccessManagementDeleteRoleUnauthorized() *IdentityAccessManagementDeleteRoleUnauthorized {
	return &IdentityAccessManagementDeleteRoleUnauthorized{}
}

/*
IdentityAccessManagementDeleteRoleUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type IdentityAccessManagementDeleteRoleUnauthorized struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management delete role unauthorized response has a 2xx status code
func (o *IdentityAccessManagementDeleteRoleUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management delete role unauthorized response has a 3xx status code
func (o *IdentityAccessManagementDeleteRoleUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management delete role unauthorized response has a 4xx status code
func (o *IdentityAccessManagementDeleteRoleUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this identity access management delete role unauthorized response has a 5xx status code
func (o *IdentityAccessManagementDeleteRoleUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management delete role unauthorized response a status code equal to that given
func (o *IdentityAccessManagementDeleteRoleUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the identity access management delete role unauthorized response
func (o *IdentityAccessManagementDeleteRoleUnauthorized) Code() int {
	return 401
}

func (o *IdentityAccessManagementDeleteRoleUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /v1/roles/id/{id}][%d] identityAccessManagementDeleteRoleUnauthorized  %+v", 401, o.Payload)
}

func (o *IdentityAccessManagementDeleteRoleUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /v1/roles/id/{id}][%d] identityAccessManagementDeleteRoleUnauthorized  %+v", 401, o.Payload)
}

func (o *IdentityAccessManagementDeleteRoleUnauthorized) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementDeleteRoleUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementDeleteRoleForbidden creates a IdentityAccessManagementDeleteRoleForbidden with default headers values
func NewIdentityAccessManagementDeleteRoleForbidden() *IdentityAccessManagementDeleteRoleForbidden {
	return &IdentityAccessManagementDeleteRoleForbidden{}
}

/*
IdentityAccessManagementDeleteRoleForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type IdentityAccessManagementDeleteRoleForbidden struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management delete role forbidden response has a 2xx status code
func (o *IdentityAccessManagementDeleteRoleForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management delete role forbidden response has a 3xx status code
func (o *IdentityAccessManagementDeleteRoleForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management delete role forbidden response has a 4xx status code
func (o *IdentityAccessManagementDeleteRoleForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this identity access management delete role forbidden response has a 5xx status code
func (o *IdentityAccessManagementDeleteRoleForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management delete role forbidden response a status code equal to that given
func (o *IdentityAccessManagementDeleteRoleForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the identity access management delete role forbidden response
func (o *IdentityAccessManagementDeleteRoleForbidden) Code() int {
	return 403
}

func (o *IdentityAccessManagementDeleteRoleForbidden) Error() string {
	return fmt.Sprintf("[DELETE /v1/roles/id/{id}][%d] identityAccessManagementDeleteRoleForbidden  %+v", 403, o.Payload)
}

func (o *IdentityAccessManagementDeleteRoleForbidden) String() string {
	return fmt.Sprintf("[DELETE /v1/roles/id/{id}][%d] identityAccessManagementDeleteRoleForbidden  %+v", 403, o.Payload)
}

func (o *IdentityAccessManagementDeleteRoleForbidden) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementDeleteRoleForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementDeleteRoleNotFound creates a IdentityAccessManagementDeleteRoleNotFound with default headers values
func NewIdentityAccessManagementDeleteRoleNotFound() *IdentityAccessManagementDeleteRoleNotFound {
	return &IdentityAccessManagementDeleteRoleNotFound{}
}

/*
IdentityAccessManagementDeleteRoleNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type IdentityAccessManagementDeleteRoleNotFound struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management delete role not found response has a 2xx status code
func (o *IdentityAccessManagementDeleteRoleNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management delete role not found response has a 3xx status code
func (o *IdentityAccessManagementDeleteRoleNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management delete role not found response has a 4xx status code
func (o *IdentityAccessManagementDeleteRoleNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this identity access management delete role not found response has a 5xx status code
func (o *IdentityAccessManagementDeleteRoleNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management delete role not found response a status code equal to that given
func (o *IdentityAccessManagementDeleteRoleNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the identity access management delete role not found response
func (o *IdentityAccessManagementDeleteRoleNotFound) Code() int {
	return 404
}

func (o *IdentityAccessManagementDeleteRoleNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/roles/id/{id}][%d] identityAccessManagementDeleteRoleNotFound  %+v", 404, o.Payload)
}

func (o *IdentityAccessManagementDeleteRoleNotFound) String() string {
	return fmt.Sprintf("[DELETE /v1/roles/id/{id}][%d] identityAccessManagementDeleteRoleNotFound  %+v", 404, o.Payload)
}

func (o *IdentityAccessManagementDeleteRoleNotFound) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementDeleteRoleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementDeleteRoleConflict creates a IdentityAccessManagementDeleteRoleConflict with default headers values
func NewIdentityAccessManagementDeleteRoleConflict() *IdentityAccessManagementDeleteRoleConflict {
	return &IdentityAccessManagementDeleteRoleConflict{}
}

/*
IdentityAccessManagementDeleteRoleConflict describes a response with status code 409, with default header values.

Conflict. The API gateway did not process the request because there are IAM users of this IAM role
*/
type IdentityAccessManagementDeleteRoleConflict struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management delete role conflict response has a 2xx status code
func (o *IdentityAccessManagementDeleteRoleConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management delete role conflict response has a 3xx status code
func (o *IdentityAccessManagementDeleteRoleConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management delete role conflict response has a 4xx status code
func (o *IdentityAccessManagementDeleteRoleConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this identity access management delete role conflict response has a 5xx status code
func (o *IdentityAccessManagementDeleteRoleConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management delete role conflict response a status code equal to that given
func (o *IdentityAccessManagementDeleteRoleConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the identity access management delete role conflict response
func (o *IdentityAccessManagementDeleteRoleConflict) Code() int {
	return 409
}

func (o *IdentityAccessManagementDeleteRoleConflict) Error() string {
	return fmt.Sprintf("[DELETE /v1/roles/id/{id}][%d] identityAccessManagementDeleteRoleConflict  %+v", 409, o.Payload)
}

func (o *IdentityAccessManagementDeleteRoleConflict) String() string {
	return fmt.Sprintf("[DELETE /v1/roles/id/{id}][%d] identityAccessManagementDeleteRoleConflict  %+v", 409, o.Payload)
}

func (o *IdentityAccessManagementDeleteRoleConflict) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementDeleteRoleConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementDeleteRoleInternalServerError creates a IdentityAccessManagementDeleteRoleInternalServerError with default headers values
func NewIdentityAccessManagementDeleteRoleInternalServerError() *IdentityAccessManagementDeleteRoleInternalServerError {
	return &IdentityAccessManagementDeleteRoleInternalServerError{}
}

/*
IdentityAccessManagementDeleteRoleInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type IdentityAccessManagementDeleteRoleInternalServerError struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management delete role internal server error response has a 2xx status code
func (o *IdentityAccessManagementDeleteRoleInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management delete role internal server error response has a 3xx status code
func (o *IdentityAccessManagementDeleteRoleInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management delete role internal server error response has a 4xx status code
func (o *IdentityAccessManagementDeleteRoleInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this identity access management delete role internal server error response has a 5xx status code
func (o *IdentityAccessManagementDeleteRoleInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this identity access management delete role internal server error response a status code equal to that given
func (o *IdentityAccessManagementDeleteRoleInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the identity access management delete role internal server error response
func (o *IdentityAccessManagementDeleteRoleInternalServerError) Code() int {
	return 500
}

func (o *IdentityAccessManagementDeleteRoleInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /v1/roles/id/{id}][%d] identityAccessManagementDeleteRoleInternalServerError  %+v", 500, o.Payload)
}

func (o *IdentityAccessManagementDeleteRoleInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /v1/roles/id/{id}][%d] identityAccessManagementDeleteRoleInternalServerError  %+v", 500, o.Payload)
}

func (o *IdentityAccessManagementDeleteRoleInternalServerError) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementDeleteRoleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementDeleteRoleGatewayTimeout creates a IdentityAccessManagementDeleteRoleGatewayTimeout with default headers values
func NewIdentityAccessManagementDeleteRoleGatewayTimeout() *IdentityAccessManagementDeleteRoleGatewayTimeout {
	return &IdentityAccessManagementDeleteRoleGatewayTimeout{}
}

/*
IdentityAccessManagementDeleteRoleGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type IdentityAccessManagementDeleteRoleGatewayTimeout struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management delete role gateway timeout response has a 2xx status code
func (o *IdentityAccessManagementDeleteRoleGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management delete role gateway timeout response has a 3xx status code
func (o *IdentityAccessManagementDeleteRoleGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management delete role gateway timeout response has a 4xx status code
func (o *IdentityAccessManagementDeleteRoleGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this identity access management delete role gateway timeout response has a 5xx status code
func (o *IdentityAccessManagementDeleteRoleGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this identity access management delete role gateway timeout response a status code equal to that given
func (o *IdentityAccessManagementDeleteRoleGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the identity access management delete role gateway timeout response
func (o *IdentityAccessManagementDeleteRoleGatewayTimeout) Code() int {
	return 504
}

func (o *IdentityAccessManagementDeleteRoleGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /v1/roles/id/{id}][%d] identityAccessManagementDeleteRoleGatewayTimeout  %+v", 504, o.Payload)
}

func (o *IdentityAccessManagementDeleteRoleGatewayTimeout) String() string {
	return fmt.Sprintf("[DELETE /v1/roles/id/{id}][%d] identityAccessManagementDeleteRoleGatewayTimeout  %+v", 504, o.Payload)
}

func (o *IdentityAccessManagementDeleteRoleGatewayTimeout) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementDeleteRoleGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementDeleteRoleDefault creates a IdentityAccessManagementDeleteRoleDefault with default headers values
func NewIdentityAccessManagementDeleteRoleDefault(code int) *IdentityAccessManagementDeleteRoleDefault {
	return &IdentityAccessManagementDeleteRoleDefault{
		_statusCode: code,
	}
}

/*
IdentityAccessManagementDeleteRoleDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type IdentityAccessManagementDeleteRoleDefault struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// IsSuccess returns true when this identity access management delete role default response has a 2xx status code
func (o *IdentityAccessManagementDeleteRoleDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this identity access management delete role default response has a 3xx status code
func (o *IdentityAccessManagementDeleteRoleDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this identity access management delete role default response has a 4xx status code
func (o *IdentityAccessManagementDeleteRoleDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this identity access management delete role default response has a 5xx status code
func (o *IdentityAccessManagementDeleteRoleDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this identity access management delete role default response a status code equal to that given
func (o *IdentityAccessManagementDeleteRoleDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the identity access management delete role default response
func (o *IdentityAccessManagementDeleteRoleDefault) Code() int {
	return o._statusCode
}

func (o *IdentityAccessManagementDeleteRoleDefault) Error() string {
	return fmt.Sprintf("[DELETE /v1/roles/id/{id}][%d] IdentityAccessManagement_DeleteRole default  %+v", o._statusCode, o.Payload)
}

func (o *IdentityAccessManagementDeleteRoleDefault) String() string {
	return fmt.Sprintf("[DELETE /v1/roles/id/{id}][%d] IdentityAccessManagement_DeleteRole default  %+v", o._statusCode, o.Payload)
}

func (o *IdentityAccessManagementDeleteRoleDefault) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *IdentityAccessManagementDeleteRoleDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
