// Code generated by go-swagger; DO NOT EDIT.

package identity_access_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/terraform-provider-zedcloud/models"
)

// IdentityAccessManagementGetUserByNameReader is a Reader for the IdentityAccessManagementGetUserByName structure.
type IdentityAccessManagementGetUserByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *IdentityAccessManagementGetUserByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewIdentityAccessManagementGetUserByNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewIdentityAccessManagementGetUserByNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewIdentityAccessManagementGetUserByNameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewIdentityAccessManagementGetUserByNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewIdentityAccessManagementGetUserByNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewIdentityAccessManagementGetUserByNameGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewIdentityAccessManagementGetUserByNameDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewIdentityAccessManagementGetUserByNameOK creates a IdentityAccessManagementGetUserByNameOK with default headers values
func NewIdentityAccessManagementGetUserByNameOK() *IdentityAccessManagementGetUserByNameOK {
	return &IdentityAccessManagementGetUserByNameOK{}
}

/*
IdentityAccessManagementGetUserByNameOK describes a response with status code 200, with default header values.

A successful response.
*/
type IdentityAccessManagementGetUserByNameOK struct {
	Payload *models.DetailedUser
}

// IsSuccess returns true when this identity access management get user by name o k response has a 2xx status code
func (o *IdentityAccessManagementGetUserByNameOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this identity access management get user by name o k response has a 3xx status code
func (o *IdentityAccessManagementGetUserByNameOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management get user by name o k response has a 4xx status code
func (o *IdentityAccessManagementGetUserByNameOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this identity access management get user by name o k response has a 5xx status code
func (o *IdentityAccessManagementGetUserByNameOK) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management get user by name o k response a status code equal to that given
func (o *IdentityAccessManagementGetUserByNameOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the identity access management get user by name o k response
func (o *IdentityAccessManagementGetUserByNameOK) Code() int {
	return 200
}

func (o *IdentityAccessManagementGetUserByNameOK) Error() string {
	return fmt.Sprintf("[GET /v1/users/name/{name}][%d] identityAccessManagementGetUserByNameOK  %+v", 200, o.Payload)
}

func (o *IdentityAccessManagementGetUserByNameOK) String() string {
	return fmt.Sprintf("[GET /v1/users/name/{name}][%d] identityAccessManagementGetUserByNameOK  %+v", 200, o.Payload)
}

func (o *IdentityAccessManagementGetUserByNameOK) GetPayload() *models.DetailedUser {
	return o.Payload
}

func (o *IdentityAccessManagementGetUserByNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DetailedUser)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetUserByNameUnauthorized creates a IdentityAccessManagementGetUserByNameUnauthorized with default headers values
func NewIdentityAccessManagementGetUserByNameUnauthorized() *IdentityAccessManagementGetUserByNameUnauthorized {
	return &IdentityAccessManagementGetUserByNameUnauthorized{}
}

/*
IdentityAccessManagementGetUserByNameUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type IdentityAccessManagementGetUserByNameUnauthorized struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management get user by name unauthorized response has a 2xx status code
func (o *IdentityAccessManagementGetUserByNameUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management get user by name unauthorized response has a 3xx status code
func (o *IdentityAccessManagementGetUserByNameUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management get user by name unauthorized response has a 4xx status code
func (o *IdentityAccessManagementGetUserByNameUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this identity access management get user by name unauthorized response has a 5xx status code
func (o *IdentityAccessManagementGetUserByNameUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management get user by name unauthorized response a status code equal to that given
func (o *IdentityAccessManagementGetUserByNameUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the identity access management get user by name unauthorized response
func (o *IdentityAccessManagementGetUserByNameUnauthorized) Code() int {
	return 401
}

func (o *IdentityAccessManagementGetUserByNameUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/users/name/{name}][%d] identityAccessManagementGetUserByNameUnauthorized  %+v", 401, o.Payload)
}

func (o *IdentityAccessManagementGetUserByNameUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/users/name/{name}][%d] identityAccessManagementGetUserByNameUnauthorized  %+v", 401, o.Payload)
}

func (o *IdentityAccessManagementGetUserByNameUnauthorized) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementGetUserByNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetUserByNameForbidden creates a IdentityAccessManagementGetUserByNameForbidden with default headers values
func NewIdentityAccessManagementGetUserByNameForbidden() *IdentityAccessManagementGetUserByNameForbidden {
	return &IdentityAccessManagementGetUserByNameForbidden{}
}

/*
IdentityAccessManagementGetUserByNameForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type IdentityAccessManagementGetUserByNameForbidden struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management get user by name forbidden response has a 2xx status code
func (o *IdentityAccessManagementGetUserByNameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management get user by name forbidden response has a 3xx status code
func (o *IdentityAccessManagementGetUserByNameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management get user by name forbidden response has a 4xx status code
func (o *IdentityAccessManagementGetUserByNameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this identity access management get user by name forbidden response has a 5xx status code
func (o *IdentityAccessManagementGetUserByNameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management get user by name forbidden response a status code equal to that given
func (o *IdentityAccessManagementGetUserByNameForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the identity access management get user by name forbidden response
func (o *IdentityAccessManagementGetUserByNameForbidden) Code() int {
	return 403
}

func (o *IdentityAccessManagementGetUserByNameForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/users/name/{name}][%d] identityAccessManagementGetUserByNameForbidden  %+v", 403, o.Payload)
}

func (o *IdentityAccessManagementGetUserByNameForbidden) String() string {
	return fmt.Sprintf("[GET /v1/users/name/{name}][%d] identityAccessManagementGetUserByNameForbidden  %+v", 403, o.Payload)
}

func (o *IdentityAccessManagementGetUserByNameForbidden) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementGetUserByNameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetUserByNameNotFound creates a IdentityAccessManagementGetUserByNameNotFound with default headers values
func NewIdentityAccessManagementGetUserByNameNotFound() *IdentityAccessManagementGetUserByNameNotFound {
	return &IdentityAccessManagementGetUserByNameNotFound{}
}

/*
IdentityAccessManagementGetUserByNameNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type IdentityAccessManagementGetUserByNameNotFound struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management get user by name not found response has a 2xx status code
func (o *IdentityAccessManagementGetUserByNameNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management get user by name not found response has a 3xx status code
func (o *IdentityAccessManagementGetUserByNameNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management get user by name not found response has a 4xx status code
func (o *IdentityAccessManagementGetUserByNameNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this identity access management get user by name not found response has a 5xx status code
func (o *IdentityAccessManagementGetUserByNameNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management get user by name not found response a status code equal to that given
func (o *IdentityAccessManagementGetUserByNameNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the identity access management get user by name not found response
func (o *IdentityAccessManagementGetUserByNameNotFound) Code() int {
	return 404
}

func (o *IdentityAccessManagementGetUserByNameNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/users/name/{name}][%d] identityAccessManagementGetUserByNameNotFound  %+v", 404, o.Payload)
}

func (o *IdentityAccessManagementGetUserByNameNotFound) String() string {
	return fmt.Sprintf("[GET /v1/users/name/{name}][%d] identityAccessManagementGetUserByNameNotFound  %+v", 404, o.Payload)
}

func (o *IdentityAccessManagementGetUserByNameNotFound) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementGetUserByNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetUserByNameInternalServerError creates a IdentityAccessManagementGetUserByNameInternalServerError with default headers values
func NewIdentityAccessManagementGetUserByNameInternalServerError() *IdentityAccessManagementGetUserByNameInternalServerError {
	return &IdentityAccessManagementGetUserByNameInternalServerError{}
}

/*
IdentityAccessManagementGetUserByNameInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type IdentityAccessManagementGetUserByNameInternalServerError struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management get user by name internal server error response has a 2xx status code
func (o *IdentityAccessManagementGetUserByNameInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management get user by name internal server error response has a 3xx status code
func (o *IdentityAccessManagementGetUserByNameInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management get user by name internal server error response has a 4xx status code
func (o *IdentityAccessManagementGetUserByNameInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this identity access management get user by name internal server error response has a 5xx status code
func (o *IdentityAccessManagementGetUserByNameInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this identity access management get user by name internal server error response a status code equal to that given
func (o *IdentityAccessManagementGetUserByNameInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the identity access management get user by name internal server error response
func (o *IdentityAccessManagementGetUserByNameInternalServerError) Code() int {
	return 500
}

func (o *IdentityAccessManagementGetUserByNameInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/users/name/{name}][%d] identityAccessManagementGetUserByNameInternalServerError  %+v", 500, o.Payload)
}

func (o *IdentityAccessManagementGetUserByNameInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/users/name/{name}][%d] identityAccessManagementGetUserByNameInternalServerError  %+v", 500, o.Payload)
}

func (o *IdentityAccessManagementGetUserByNameInternalServerError) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementGetUserByNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetUserByNameGatewayTimeout creates a IdentityAccessManagementGetUserByNameGatewayTimeout with default headers values
func NewIdentityAccessManagementGetUserByNameGatewayTimeout() *IdentityAccessManagementGetUserByNameGatewayTimeout {
	return &IdentityAccessManagementGetUserByNameGatewayTimeout{}
}

/*
IdentityAccessManagementGetUserByNameGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type IdentityAccessManagementGetUserByNameGatewayTimeout struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management get user by name gateway timeout response has a 2xx status code
func (o *IdentityAccessManagementGetUserByNameGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management get user by name gateway timeout response has a 3xx status code
func (o *IdentityAccessManagementGetUserByNameGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management get user by name gateway timeout response has a 4xx status code
func (o *IdentityAccessManagementGetUserByNameGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this identity access management get user by name gateway timeout response has a 5xx status code
func (o *IdentityAccessManagementGetUserByNameGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this identity access management get user by name gateway timeout response a status code equal to that given
func (o *IdentityAccessManagementGetUserByNameGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the identity access management get user by name gateway timeout response
func (o *IdentityAccessManagementGetUserByNameGatewayTimeout) Code() int {
	return 504
}

func (o *IdentityAccessManagementGetUserByNameGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/users/name/{name}][%d] identityAccessManagementGetUserByNameGatewayTimeout  %+v", 504, o.Payload)
}

func (o *IdentityAccessManagementGetUserByNameGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /v1/users/name/{name}][%d] identityAccessManagementGetUserByNameGatewayTimeout  %+v", 504, o.Payload)
}

func (o *IdentityAccessManagementGetUserByNameGatewayTimeout) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementGetUserByNameGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetUserByNameDefault creates a IdentityAccessManagementGetUserByNameDefault with default headers values
func NewIdentityAccessManagementGetUserByNameDefault(code int) *IdentityAccessManagementGetUserByNameDefault {
	return &IdentityAccessManagementGetUserByNameDefault{
		_statusCode: code,
	}
}

/*
IdentityAccessManagementGetUserByNameDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type IdentityAccessManagementGetUserByNameDefault struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// IsSuccess returns true when this identity access management get user by name default response has a 2xx status code
func (o *IdentityAccessManagementGetUserByNameDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this identity access management get user by name default response has a 3xx status code
func (o *IdentityAccessManagementGetUserByNameDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this identity access management get user by name default response has a 4xx status code
func (o *IdentityAccessManagementGetUserByNameDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this identity access management get user by name default response has a 5xx status code
func (o *IdentityAccessManagementGetUserByNameDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this identity access management get user by name default response a status code equal to that given
func (o *IdentityAccessManagementGetUserByNameDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the identity access management get user by name default response
func (o *IdentityAccessManagementGetUserByNameDefault) Code() int {
	return o._statusCode
}

func (o *IdentityAccessManagementGetUserByNameDefault) Error() string {
	return fmt.Sprintf("[GET /v1/users/name/{name}][%d] IdentityAccessManagement_GetUserByName default  %+v", o._statusCode, o.Payload)
}

func (o *IdentityAccessManagementGetUserByNameDefault) String() string {
	return fmt.Sprintf("[GET /v1/users/name/{name}][%d] IdentityAccessManagement_GetUserByName default  %+v", o._statusCode, o.Payload)
}

func (o *IdentityAccessManagementGetUserByNameDefault) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *IdentityAccessManagementGetUserByNameDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
