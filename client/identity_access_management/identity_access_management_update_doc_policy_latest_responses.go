// Code generated by go-swagger; DO NOT EDIT.

package identity_access_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/terraform-provider/models"
)

// IdentityAccessManagementUpdateDocPolicyLatestReader is a Reader for the IdentityAccessManagementUpdateDocPolicyLatest structure.
type IdentityAccessManagementUpdateDocPolicyLatestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *IdentityAccessManagementUpdateDocPolicyLatestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewIdentityAccessManagementUpdateDocPolicyLatestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewIdentityAccessManagementUpdateDocPolicyLatestUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewIdentityAccessManagementUpdateDocPolicyLatestForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewIdentityAccessManagementUpdateDocPolicyLatestNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewIdentityAccessManagementUpdateDocPolicyLatestConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewIdentityAccessManagementUpdateDocPolicyLatestInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewIdentityAccessManagementUpdateDocPolicyLatestGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewIdentityAccessManagementUpdateDocPolicyLatestDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewIdentityAccessManagementUpdateDocPolicyLatestOK creates a IdentityAccessManagementUpdateDocPolicyLatestOK with default headers values
func NewIdentityAccessManagementUpdateDocPolicyLatestOK() *IdentityAccessManagementUpdateDocPolicyLatestOK {
	return &IdentityAccessManagementUpdateDocPolicyLatestOK{}
}

/*
IdentityAccessManagementUpdateDocPolicyLatestOK describes a response with status code 200, with default header values.

A successful response.
*/
type IdentityAccessManagementUpdateDocPolicyLatestOK struct {
	Payload *models.CrudResponse
}

// IsSuccess returns true when this identity access management update doc policy latest o k response has a 2xx status code
func (o *IdentityAccessManagementUpdateDocPolicyLatestOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this identity access management update doc policy latest o k response has a 3xx status code
func (o *IdentityAccessManagementUpdateDocPolicyLatestOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management update doc policy latest o k response has a 4xx status code
func (o *IdentityAccessManagementUpdateDocPolicyLatestOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this identity access management update doc policy latest o k response has a 5xx status code
func (o *IdentityAccessManagementUpdateDocPolicyLatestOK) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management update doc policy latest o k response a status code equal to that given
func (o *IdentityAccessManagementUpdateDocPolicyLatestOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the identity access management update doc policy latest o k response
func (o *IdentityAccessManagementUpdateDocPolicyLatestOK) Code() int {
	return 200
}

func (o *IdentityAccessManagementUpdateDocPolicyLatestOK) Error() string {
	return fmt.Sprintf("[PUT /v1/cloud/policies/latest][%d] identityAccessManagementUpdateDocPolicyLatestOK  %+v", 200, o.Payload)
}

func (o *IdentityAccessManagementUpdateDocPolicyLatestOK) String() string {
	return fmt.Sprintf("[PUT /v1/cloud/policies/latest][%d] identityAccessManagementUpdateDocPolicyLatestOK  %+v", 200, o.Payload)
}

func (o *IdentityAccessManagementUpdateDocPolicyLatestOK) GetPayload() *models.CrudResponse {
	return o.Payload
}

func (o *IdentityAccessManagementUpdateDocPolicyLatestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CrudResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementUpdateDocPolicyLatestUnauthorized creates a IdentityAccessManagementUpdateDocPolicyLatestUnauthorized with default headers values
func NewIdentityAccessManagementUpdateDocPolicyLatestUnauthorized() *IdentityAccessManagementUpdateDocPolicyLatestUnauthorized {
	return &IdentityAccessManagementUpdateDocPolicyLatestUnauthorized{}
}

/*
IdentityAccessManagementUpdateDocPolicyLatestUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type IdentityAccessManagementUpdateDocPolicyLatestUnauthorized struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management update doc policy latest unauthorized response has a 2xx status code
func (o *IdentityAccessManagementUpdateDocPolicyLatestUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management update doc policy latest unauthorized response has a 3xx status code
func (o *IdentityAccessManagementUpdateDocPolicyLatestUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management update doc policy latest unauthorized response has a 4xx status code
func (o *IdentityAccessManagementUpdateDocPolicyLatestUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this identity access management update doc policy latest unauthorized response has a 5xx status code
func (o *IdentityAccessManagementUpdateDocPolicyLatestUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management update doc policy latest unauthorized response a status code equal to that given
func (o *IdentityAccessManagementUpdateDocPolicyLatestUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the identity access management update doc policy latest unauthorized response
func (o *IdentityAccessManagementUpdateDocPolicyLatestUnauthorized) Code() int {
	return 401
}

func (o *IdentityAccessManagementUpdateDocPolicyLatestUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/cloud/policies/latest][%d] identityAccessManagementUpdateDocPolicyLatestUnauthorized  %+v", 401, o.Payload)
}

func (o *IdentityAccessManagementUpdateDocPolicyLatestUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/cloud/policies/latest][%d] identityAccessManagementUpdateDocPolicyLatestUnauthorized  %+v", 401, o.Payload)
}

func (o *IdentityAccessManagementUpdateDocPolicyLatestUnauthorized) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementUpdateDocPolicyLatestUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementUpdateDocPolicyLatestForbidden creates a IdentityAccessManagementUpdateDocPolicyLatestForbidden with default headers values
func NewIdentityAccessManagementUpdateDocPolicyLatestForbidden() *IdentityAccessManagementUpdateDocPolicyLatestForbidden {
	return &IdentityAccessManagementUpdateDocPolicyLatestForbidden{}
}

/*
IdentityAccessManagementUpdateDocPolicyLatestForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type IdentityAccessManagementUpdateDocPolicyLatestForbidden struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management update doc policy latest forbidden response has a 2xx status code
func (o *IdentityAccessManagementUpdateDocPolicyLatestForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management update doc policy latest forbidden response has a 3xx status code
func (o *IdentityAccessManagementUpdateDocPolicyLatestForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management update doc policy latest forbidden response has a 4xx status code
func (o *IdentityAccessManagementUpdateDocPolicyLatestForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this identity access management update doc policy latest forbidden response has a 5xx status code
func (o *IdentityAccessManagementUpdateDocPolicyLatestForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management update doc policy latest forbidden response a status code equal to that given
func (o *IdentityAccessManagementUpdateDocPolicyLatestForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the identity access management update doc policy latest forbidden response
func (o *IdentityAccessManagementUpdateDocPolicyLatestForbidden) Code() int {
	return 403
}

func (o *IdentityAccessManagementUpdateDocPolicyLatestForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/cloud/policies/latest][%d] identityAccessManagementUpdateDocPolicyLatestForbidden  %+v", 403, o.Payload)
}

func (o *IdentityAccessManagementUpdateDocPolicyLatestForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/cloud/policies/latest][%d] identityAccessManagementUpdateDocPolicyLatestForbidden  %+v", 403, o.Payload)
}

func (o *IdentityAccessManagementUpdateDocPolicyLatestForbidden) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementUpdateDocPolicyLatestForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementUpdateDocPolicyLatestNotFound creates a IdentityAccessManagementUpdateDocPolicyLatestNotFound with default headers values
func NewIdentityAccessManagementUpdateDocPolicyLatestNotFound() *IdentityAccessManagementUpdateDocPolicyLatestNotFound {
	return &IdentityAccessManagementUpdateDocPolicyLatestNotFound{}
}

/*
IdentityAccessManagementUpdateDocPolicyLatestNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type IdentityAccessManagementUpdateDocPolicyLatestNotFound struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management update doc policy latest not found response has a 2xx status code
func (o *IdentityAccessManagementUpdateDocPolicyLatestNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management update doc policy latest not found response has a 3xx status code
func (o *IdentityAccessManagementUpdateDocPolicyLatestNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management update doc policy latest not found response has a 4xx status code
func (o *IdentityAccessManagementUpdateDocPolicyLatestNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this identity access management update doc policy latest not found response has a 5xx status code
func (o *IdentityAccessManagementUpdateDocPolicyLatestNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management update doc policy latest not found response a status code equal to that given
func (o *IdentityAccessManagementUpdateDocPolicyLatestNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the identity access management update doc policy latest not found response
func (o *IdentityAccessManagementUpdateDocPolicyLatestNotFound) Code() int {
	return 404
}

func (o *IdentityAccessManagementUpdateDocPolicyLatestNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/cloud/policies/latest][%d] identityAccessManagementUpdateDocPolicyLatestNotFound  %+v", 404, o.Payload)
}

func (o *IdentityAccessManagementUpdateDocPolicyLatestNotFound) String() string {
	return fmt.Sprintf("[PUT /v1/cloud/policies/latest][%d] identityAccessManagementUpdateDocPolicyLatestNotFound  %+v", 404, o.Payload)
}

func (o *IdentityAccessManagementUpdateDocPolicyLatestNotFound) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementUpdateDocPolicyLatestNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementUpdateDocPolicyLatestConflict creates a IdentityAccessManagementUpdateDocPolicyLatestConflict with default headers values
func NewIdentityAccessManagementUpdateDocPolicyLatestConflict() *IdentityAccessManagementUpdateDocPolicyLatestConflict {
	return &IdentityAccessManagementUpdateDocPolicyLatestConflict{}
}

/*
IdentityAccessManagementUpdateDocPolicyLatestConflict describes a response with status code 409, with default header values.

Conflict. The API gateway did not process the request because this operation will conflict with an already existing AAA profile record.
*/
type IdentityAccessManagementUpdateDocPolicyLatestConflict struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management update doc policy latest conflict response has a 2xx status code
func (o *IdentityAccessManagementUpdateDocPolicyLatestConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management update doc policy latest conflict response has a 3xx status code
func (o *IdentityAccessManagementUpdateDocPolicyLatestConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management update doc policy latest conflict response has a 4xx status code
func (o *IdentityAccessManagementUpdateDocPolicyLatestConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this identity access management update doc policy latest conflict response has a 5xx status code
func (o *IdentityAccessManagementUpdateDocPolicyLatestConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management update doc policy latest conflict response a status code equal to that given
func (o *IdentityAccessManagementUpdateDocPolicyLatestConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the identity access management update doc policy latest conflict response
func (o *IdentityAccessManagementUpdateDocPolicyLatestConflict) Code() int {
	return 409
}

func (o *IdentityAccessManagementUpdateDocPolicyLatestConflict) Error() string {
	return fmt.Sprintf("[PUT /v1/cloud/policies/latest][%d] identityAccessManagementUpdateDocPolicyLatestConflict  %+v", 409, o.Payload)
}

func (o *IdentityAccessManagementUpdateDocPolicyLatestConflict) String() string {
	return fmt.Sprintf("[PUT /v1/cloud/policies/latest][%d] identityAccessManagementUpdateDocPolicyLatestConflict  %+v", 409, o.Payload)
}

func (o *IdentityAccessManagementUpdateDocPolicyLatestConflict) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementUpdateDocPolicyLatestConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementUpdateDocPolicyLatestInternalServerError creates a IdentityAccessManagementUpdateDocPolicyLatestInternalServerError with default headers values
func NewIdentityAccessManagementUpdateDocPolicyLatestInternalServerError() *IdentityAccessManagementUpdateDocPolicyLatestInternalServerError {
	return &IdentityAccessManagementUpdateDocPolicyLatestInternalServerError{}
}

/*
IdentityAccessManagementUpdateDocPolicyLatestInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type IdentityAccessManagementUpdateDocPolicyLatestInternalServerError struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management update doc policy latest internal server error response has a 2xx status code
func (o *IdentityAccessManagementUpdateDocPolicyLatestInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management update doc policy latest internal server error response has a 3xx status code
func (o *IdentityAccessManagementUpdateDocPolicyLatestInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management update doc policy latest internal server error response has a 4xx status code
func (o *IdentityAccessManagementUpdateDocPolicyLatestInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this identity access management update doc policy latest internal server error response has a 5xx status code
func (o *IdentityAccessManagementUpdateDocPolicyLatestInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this identity access management update doc policy latest internal server error response a status code equal to that given
func (o *IdentityAccessManagementUpdateDocPolicyLatestInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the identity access management update doc policy latest internal server error response
func (o *IdentityAccessManagementUpdateDocPolicyLatestInternalServerError) Code() int {
	return 500
}

func (o *IdentityAccessManagementUpdateDocPolicyLatestInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /v1/cloud/policies/latest][%d] identityAccessManagementUpdateDocPolicyLatestInternalServerError  %+v", 500, o.Payload)
}

func (o *IdentityAccessManagementUpdateDocPolicyLatestInternalServerError) String() string {
	return fmt.Sprintf("[PUT /v1/cloud/policies/latest][%d] identityAccessManagementUpdateDocPolicyLatestInternalServerError  %+v", 500, o.Payload)
}

func (o *IdentityAccessManagementUpdateDocPolicyLatestInternalServerError) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementUpdateDocPolicyLatestInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementUpdateDocPolicyLatestGatewayTimeout creates a IdentityAccessManagementUpdateDocPolicyLatestGatewayTimeout with default headers values
func NewIdentityAccessManagementUpdateDocPolicyLatestGatewayTimeout() *IdentityAccessManagementUpdateDocPolicyLatestGatewayTimeout {
	return &IdentityAccessManagementUpdateDocPolicyLatestGatewayTimeout{}
}

/*
IdentityAccessManagementUpdateDocPolicyLatestGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type IdentityAccessManagementUpdateDocPolicyLatestGatewayTimeout struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management update doc policy latest gateway timeout response has a 2xx status code
func (o *IdentityAccessManagementUpdateDocPolicyLatestGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management update doc policy latest gateway timeout response has a 3xx status code
func (o *IdentityAccessManagementUpdateDocPolicyLatestGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management update doc policy latest gateway timeout response has a 4xx status code
func (o *IdentityAccessManagementUpdateDocPolicyLatestGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this identity access management update doc policy latest gateway timeout response has a 5xx status code
func (o *IdentityAccessManagementUpdateDocPolicyLatestGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this identity access management update doc policy latest gateway timeout response a status code equal to that given
func (o *IdentityAccessManagementUpdateDocPolicyLatestGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the identity access management update doc policy latest gateway timeout response
func (o *IdentityAccessManagementUpdateDocPolicyLatestGatewayTimeout) Code() int {
	return 504
}

func (o *IdentityAccessManagementUpdateDocPolicyLatestGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /v1/cloud/policies/latest][%d] identityAccessManagementUpdateDocPolicyLatestGatewayTimeout  %+v", 504, o.Payload)
}

func (o *IdentityAccessManagementUpdateDocPolicyLatestGatewayTimeout) String() string {
	return fmt.Sprintf("[PUT /v1/cloud/policies/latest][%d] identityAccessManagementUpdateDocPolicyLatestGatewayTimeout  %+v", 504, o.Payload)
}

func (o *IdentityAccessManagementUpdateDocPolicyLatestGatewayTimeout) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementUpdateDocPolicyLatestGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementUpdateDocPolicyLatestDefault creates a IdentityAccessManagementUpdateDocPolicyLatestDefault with default headers values
func NewIdentityAccessManagementUpdateDocPolicyLatestDefault(code int) *IdentityAccessManagementUpdateDocPolicyLatestDefault {
	return &IdentityAccessManagementUpdateDocPolicyLatestDefault{
		_statusCode: code,
	}
}

/*
IdentityAccessManagementUpdateDocPolicyLatestDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type IdentityAccessManagementUpdateDocPolicyLatestDefault struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// IsSuccess returns true when this identity access management update doc policy latest default response has a 2xx status code
func (o *IdentityAccessManagementUpdateDocPolicyLatestDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this identity access management update doc policy latest default response has a 3xx status code
func (o *IdentityAccessManagementUpdateDocPolicyLatestDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this identity access management update doc policy latest default response has a 4xx status code
func (o *IdentityAccessManagementUpdateDocPolicyLatestDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this identity access management update doc policy latest default response has a 5xx status code
func (o *IdentityAccessManagementUpdateDocPolicyLatestDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this identity access management update doc policy latest default response a status code equal to that given
func (o *IdentityAccessManagementUpdateDocPolicyLatestDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the identity access management update doc policy latest default response
func (o *IdentityAccessManagementUpdateDocPolicyLatestDefault) Code() int {
	return o._statusCode
}

func (o *IdentityAccessManagementUpdateDocPolicyLatestDefault) Error() string {
	return fmt.Sprintf("[PUT /v1/cloud/policies/latest][%d] IdentityAccessManagement_UpdateDocPolicyLatest default  %+v", o._statusCode, o.Payload)
}

func (o *IdentityAccessManagementUpdateDocPolicyLatestDefault) String() string {
	return fmt.Sprintf("[PUT /v1/cloud/policies/latest][%d] IdentityAccessManagement_UpdateDocPolicyLatest default  %+v", o._statusCode, o.Payload)
}

func (o *IdentityAccessManagementUpdateDocPolicyLatestDefault) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *IdentityAccessManagementUpdateDocPolicyLatestDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
