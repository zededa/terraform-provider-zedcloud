// Code generated by go-swagger; DO NOT EDIT.

package identity_access_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/terraform-provider-zedcloud/models"
)

// IdentityAccessManagementGetRoleReader is a Reader for the IdentityAccessManagementGetRole structure.
type IdentityAccessManagementGetRoleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *IdentityAccessManagementGetRoleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewIdentityAccessManagementGetRoleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewIdentityAccessManagementGetRoleUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewIdentityAccessManagementGetRoleForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewIdentityAccessManagementGetRoleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewIdentityAccessManagementGetRoleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewIdentityAccessManagementGetRoleGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewIdentityAccessManagementGetRoleDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewIdentityAccessManagementGetRoleOK creates a IdentityAccessManagementGetRoleOK with default headers values
func NewIdentityAccessManagementGetRoleOK() *IdentityAccessManagementGetRoleOK {
	return &IdentityAccessManagementGetRoleOK{}
}

/*
IdentityAccessManagementGetRoleOK describes a response with status code 200, with default header values.

A successful response.
*/
type IdentityAccessManagementGetRoleOK struct {
	Payload *models.Role
}

// IsSuccess returns true when this identity access management get role o k response has a 2xx status code
func (o *IdentityAccessManagementGetRoleOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this identity access management get role o k response has a 3xx status code
func (o *IdentityAccessManagementGetRoleOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management get role o k response has a 4xx status code
func (o *IdentityAccessManagementGetRoleOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this identity access management get role o k response has a 5xx status code
func (o *IdentityAccessManagementGetRoleOK) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management get role o k response a status code equal to that given
func (o *IdentityAccessManagementGetRoleOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the identity access management get role o k response
func (o *IdentityAccessManagementGetRoleOK) Code() int {
	return 200
}

func (o *IdentityAccessManagementGetRoleOK) Error() string {
	return fmt.Sprintf("[GET /v1/roles/id/{id}][%d] identityAccessManagementGetRoleOK  %+v", 200, o.Payload)
}

func (o *IdentityAccessManagementGetRoleOK) String() string {
	return fmt.Sprintf("[GET /v1/roles/id/{id}][%d] identityAccessManagementGetRoleOK  %+v", 200, o.Payload)
}

func (o *IdentityAccessManagementGetRoleOK) GetPayload() *models.Role {
	return o.Payload
}

func (o *IdentityAccessManagementGetRoleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Role)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetRoleUnauthorized creates a IdentityAccessManagementGetRoleUnauthorized with default headers values
func NewIdentityAccessManagementGetRoleUnauthorized() *IdentityAccessManagementGetRoleUnauthorized {
	return &IdentityAccessManagementGetRoleUnauthorized{}
}

/*
IdentityAccessManagementGetRoleUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type IdentityAccessManagementGetRoleUnauthorized struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management get role unauthorized response has a 2xx status code
func (o *IdentityAccessManagementGetRoleUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management get role unauthorized response has a 3xx status code
func (o *IdentityAccessManagementGetRoleUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management get role unauthorized response has a 4xx status code
func (o *IdentityAccessManagementGetRoleUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this identity access management get role unauthorized response has a 5xx status code
func (o *IdentityAccessManagementGetRoleUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management get role unauthorized response a status code equal to that given
func (o *IdentityAccessManagementGetRoleUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the identity access management get role unauthorized response
func (o *IdentityAccessManagementGetRoleUnauthorized) Code() int {
	return 401
}

func (o *IdentityAccessManagementGetRoleUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/roles/id/{id}][%d] identityAccessManagementGetRoleUnauthorized  %+v", 401, o.Payload)
}

func (o *IdentityAccessManagementGetRoleUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/roles/id/{id}][%d] identityAccessManagementGetRoleUnauthorized  %+v", 401, o.Payload)
}

func (o *IdentityAccessManagementGetRoleUnauthorized) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementGetRoleUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetRoleForbidden creates a IdentityAccessManagementGetRoleForbidden with default headers values
func NewIdentityAccessManagementGetRoleForbidden() *IdentityAccessManagementGetRoleForbidden {
	return &IdentityAccessManagementGetRoleForbidden{}
}

/*
IdentityAccessManagementGetRoleForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type IdentityAccessManagementGetRoleForbidden struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management get role forbidden response has a 2xx status code
func (o *IdentityAccessManagementGetRoleForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management get role forbidden response has a 3xx status code
func (o *IdentityAccessManagementGetRoleForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management get role forbidden response has a 4xx status code
func (o *IdentityAccessManagementGetRoleForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this identity access management get role forbidden response has a 5xx status code
func (o *IdentityAccessManagementGetRoleForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management get role forbidden response a status code equal to that given
func (o *IdentityAccessManagementGetRoleForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the identity access management get role forbidden response
func (o *IdentityAccessManagementGetRoleForbidden) Code() int {
	return 403
}

func (o *IdentityAccessManagementGetRoleForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/roles/id/{id}][%d] identityAccessManagementGetRoleForbidden  %+v", 403, o.Payload)
}

func (o *IdentityAccessManagementGetRoleForbidden) String() string {
	return fmt.Sprintf("[GET /v1/roles/id/{id}][%d] identityAccessManagementGetRoleForbidden  %+v", 403, o.Payload)
}

func (o *IdentityAccessManagementGetRoleForbidden) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementGetRoleForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetRoleNotFound creates a IdentityAccessManagementGetRoleNotFound with default headers values
func NewIdentityAccessManagementGetRoleNotFound() *IdentityAccessManagementGetRoleNotFound {
	return &IdentityAccessManagementGetRoleNotFound{}
}

/*
IdentityAccessManagementGetRoleNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type IdentityAccessManagementGetRoleNotFound struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management get role not found response has a 2xx status code
func (o *IdentityAccessManagementGetRoleNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management get role not found response has a 3xx status code
func (o *IdentityAccessManagementGetRoleNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management get role not found response has a 4xx status code
func (o *IdentityAccessManagementGetRoleNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this identity access management get role not found response has a 5xx status code
func (o *IdentityAccessManagementGetRoleNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management get role not found response a status code equal to that given
func (o *IdentityAccessManagementGetRoleNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the identity access management get role not found response
func (o *IdentityAccessManagementGetRoleNotFound) Code() int {
	return 404
}

func (o *IdentityAccessManagementGetRoleNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/roles/id/{id}][%d] identityAccessManagementGetRoleNotFound  %+v", 404, o.Payload)
}

func (o *IdentityAccessManagementGetRoleNotFound) String() string {
	return fmt.Sprintf("[GET /v1/roles/id/{id}][%d] identityAccessManagementGetRoleNotFound  %+v", 404, o.Payload)
}

func (o *IdentityAccessManagementGetRoleNotFound) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementGetRoleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetRoleInternalServerError creates a IdentityAccessManagementGetRoleInternalServerError with default headers values
func NewIdentityAccessManagementGetRoleInternalServerError() *IdentityAccessManagementGetRoleInternalServerError {
	return &IdentityAccessManagementGetRoleInternalServerError{}
}

/*
IdentityAccessManagementGetRoleInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type IdentityAccessManagementGetRoleInternalServerError struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management get role internal server error response has a 2xx status code
func (o *IdentityAccessManagementGetRoleInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management get role internal server error response has a 3xx status code
func (o *IdentityAccessManagementGetRoleInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management get role internal server error response has a 4xx status code
func (o *IdentityAccessManagementGetRoleInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this identity access management get role internal server error response has a 5xx status code
func (o *IdentityAccessManagementGetRoleInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this identity access management get role internal server error response a status code equal to that given
func (o *IdentityAccessManagementGetRoleInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the identity access management get role internal server error response
func (o *IdentityAccessManagementGetRoleInternalServerError) Code() int {
	return 500
}

func (o *IdentityAccessManagementGetRoleInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/roles/id/{id}][%d] identityAccessManagementGetRoleInternalServerError  %+v", 500, o.Payload)
}

func (o *IdentityAccessManagementGetRoleInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/roles/id/{id}][%d] identityAccessManagementGetRoleInternalServerError  %+v", 500, o.Payload)
}

func (o *IdentityAccessManagementGetRoleInternalServerError) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementGetRoleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetRoleGatewayTimeout creates a IdentityAccessManagementGetRoleGatewayTimeout with default headers values
func NewIdentityAccessManagementGetRoleGatewayTimeout() *IdentityAccessManagementGetRoleGatewayTimeout {
	return &IdentityAccessManagementGetRoleGatewayTimeout{}
}

/*
IdentityAccessManagementGetRoleGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type IdentityAccessManagementGetRoleGatewayTimeout struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management get role gateway timeout response has a 2xx status code
func (o *IdentityAccessManagementGetRoleGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management get role gateway timeout response has a 3xx status code
func (o *IdentityAccessManagementGetRoleGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management get role gateway timeout response has a 4xx status code
func (o *IdentityAccessManagementGetRoleGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this identity access management get role gateway timeout response has a 5xx status code
func (o *IdentityAccessManagementGetRoleGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this identity access management get role gateway timeout response a status code equal to that given
func (o *IdentityAccessManagementGetRoleGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the identity access management get role gateway timeout response
func (o *IdentityAccessManagementGetRoleGatewayTimeout) Code() int {
	return 504
}

func (o *IdentityAccessManagementGetRoleGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/roles/id/{id}][%d] identityAccessManagementGetRoleGatewayTimeout  %+v", 504, o.Payload)
}

func (o *IdentityAccessManagementGetRoleGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /v1/roles/id/{id}][%d] identityAccessManagementGetRoleGatewayTimeout  %+v", 504, o.Payload)
}

func (o *IdentityAccessManagementGetRoleGatewayTimeout) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementGetRoleGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetRoleDefault creates a IdentityAccessManagementGetRoleDefault with default headers values
func NewIdentityAccessManagementGetRoleDefault(code int) *IdentityAccessManagementGetRoleDefault {
	return &IdentityAccessManagementGetRoleDefault{
		_statusCode: code,
	}
}

/*
IdentityAccessManagementGetRoleDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type IdentityAccessManagementGetRoleDefault struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// IsSuccess returns true when this identity access management get role default response has a 2xx status code
func (o *IdentityAccessManagementGetRoleDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this identity access management get role default response has a 3xx status code
func (o *IdentityAccessManagementGetRoleDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this identity access management get role default response has a 4xx status code
func (o *IdentityAccessManagementGetRoleDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this identity access management get role default response has a 5xx status code
func (o *IdentityAccessManagementGetRoleDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this identity access management get role default response a status code equal to that given
func (o *IdentityAccessManagementGetRoleDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the identity access management get role default response
func (o *IdentityAccessManagementGetRoleDefault) Code() int {
	return o._statusCode
}

func (o *IdentityAccessManagementGetRoleDefault) Error() string {
	return fmt.Sprintf("[GET /v1/roles/id/{id}][%d] IdentityAccessManagement_GetRole default  %+v", o._statusCode, o.Payload)
}

func (o *IdentityAccessManagementGetRoleDefault) String() string {
	return fmt.Sprintf("[GET /v1/roles/id/{id}][%d] IdentityAccessManagement_GetRole default  %+v", o._statusCode, o.Payload)
}

func (o *IdentityAccessManagementGetRoleDefault) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *IdentityAccessManagementGetRoleDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
