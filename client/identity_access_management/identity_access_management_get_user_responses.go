// Code generated by go-swagger; DO NOT EDIT.

package identity_access_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/terraform-provider-zedcloud/models"
)

// IdentityAccessManagementGetUserReader is a Reader for the IdentityAccessManagementGetUser structure.
type IdentityAccessManagementGetUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *IdentityAccessManagementGetUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewIdentityAccessManagementGetUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewIdentityAccessManagementGetUserUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewIdentityAccessManagementGetUserForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewIdentityAccessManagementGetUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewIdentityAccessManagementGetUserInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewIdentityAccessManagementGetUserGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewIdentityAccessManagementGetUserDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewIdentityAccessManagementGetUserOK creates a IdentityAccessManagementGetUserOK with default headers values
func NewIdentityAccessManagementGetUserOK() *IdentityAccessManagementGetUserOK {
	return &IdentityAccessManagementGetUserOK{}
}

/*
IdentityAccessManagementGetUserOK describes a response with status code 200, with default header values.

A successful response.
*/
type IdentityAccessManagementGetUserOK struct {
	Payload *models.DetailedUser
}

// IsSuccess returns true when this identity access management get user o k response has a 2xx status code
func (o *IdentityAccessManagementGetUserOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this identity access management get user o k response has a 3xx status code
func (o *IdentityAccessManagementGetUserOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management get user o k response has a 4xx status code
func (o *IdentityAccessManagementGetUserOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this identity access management get user o k response has a 5xx status code
func (o *IdentityAccessManagementGetUserOK) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management get user o k response a status code equal to that given
func (o *IdentityAccessManagementGetUserOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the identity access management get user o k response
func (o *IdentityAccessManagementGetUserOK) Code() int {
	return 200
}

func (o *IdentityAccessManagementGetUserOK) Error() string {
	return fmt.Sprintf("[GET /v1/users/id/{id}][%d] identityAccessManagementGetUserOK  %+v", 200, o.Payload)
}

func (o *IdentityAccessManagementGetUserOK) String() string {
	return fmt.Sprintf("[GET /v1/users/id/{id}][%d] identityAccessManagementGetUserOK  %+v", 200, o.Payload)
}

func (o *IdentityAccessManagementGetUserOK) GetPayload() *models.DetailedUser {
	return o.Payload
}

func (o *IdentityAccessManagementGetUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DetailedUser)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetUserUnauthorized creates a IdentityAccessManagementGetUserUnauthorized with default headers values
func NewIdentityAccessManagementGetUserUnauthorized() *IdentityAccessManagementGetUserUnauthorized {
	return &IdentityAccessManagementGetUserUnauthorized{}
}

/*
IdentityAccessManagementGetUserUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type IdentityAccessManagementGetUserUnauthorized struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management get user unauthorized response has a 2xx status code
func (o *IdentityAccessManagementGetUserUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management get user unauthorized response has a 3xx status code
func (o *IdentityAccessManagementGetUserUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management get user unauthorized response has a 4xx status code
func (o *IdentityAccessManagementGetUserUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this identity access management get user unauthorized response has a 5xx status code
func (o *IdentityAccessManagementGetUserUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management get user unauthorized response a status code equal to that given
func (o *IdentityAccessManagementGetUserUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the identity access management get user unauthorized response
func (o *IdentityAccessManagementGetUserUnauthorized) Code() int {
	return 401
}

func (o *IdentityAccessManagementGetUserUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/users/id/{id}][%d] identityAccessManagementGetUserUnauthorized  %+v", 401, o.Payload)
}

func (o *IdentityAccessManagementGetUserUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/users/id/{id}][%d] identityAccessManagementGetUserUnauthorized  %+v", 401, o.Payload)
}

func (o *IdentityAccessManagementGetUserUnauthorized) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementGetUserUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetUserForbidden creates a IdentityAccessManagementGetUserForbidden with default headers values
func NewIdentityAccessManagementGetUserForbidden() *IdentityAccessManagementGetUserForbidden {
	return &IdentityAccessManagementGetUserForbidden{}
}

/*
IdentityAccessManagementGetUserForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type IdentityAccessManagementGetUserForbidden struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management get user forbidden response has a 2xx status code
func (o *IdentityAccessManagementGetUserForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management get user forbidden response has a 3xx status code
func (o *IdentityAccessManagementGetUserForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management get user forbidden response has a 4xx status code
func (o *IdentityAccessManagementGetUserForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this identity access management get user forbidden response has a 5xx status code
func (o *IdentityAccessManagementGetUserForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management get user forbidden response a status code equal to that given
func (o *IdentityAccessManagementGetUserForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the identity access management get user forbidden response
func (o *IdentityAccessManagementGetUserForbidden) Code() int {
	return 403
}

func (o *IdentityAccessManagementGetUserForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/users/id/{id}][%d] identityAccessManagementGetUserForbidden  %+v", 403, o.Payload)
}

func (o *IdentityAccessManagementGetUserForbidden) String() string {
	return fmt.Sprintf("[GET /v1/users/id/{id}][%d] identityAccessManagementGetUserForbidden  %+v", 403, o.Payload)
}

func (o *IdentityAccessManagementGetUserForbidden) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementGetUserForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetUserNotFound creates a IdentityAccessManagementGetUserNotFound with default headers values
func NewIdentityAccessManagementGetUserNotFound() *IdentityAccessManagementGetUserNotFound {
	return &IdentityAccessManagementGetUserNotFound{}
}

/*
IdentityAccessManagementGetUserNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type IdentityAccessManagementGetUserNotFound struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management get user not found response has a 2xx status code
func (o *IdentityAccessManagementGetUserNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management get user not found response has a 3xx status code
func (o *IdentityAccessManagementGetUserNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management get user not found response has a 4xx status code
func (o *IdentityAccessManagementGetUserNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this identity access management get user not found response has a 5xx status code
func (o *IdentityAccessManagementGetUserNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management get user not found response a status code equal to that given
func (o *IdentityAccessManagementGetUserNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the identity access management get user not found response
func (o *IdentityAccessManagementGetUserNotFound) Code() int {
	return 404
}

func (o *IdentityAccessManagementGetUserNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/users/id/{id}][%d] identityAccessManagementGetUserNotFound  %+v", 404, o.Payload)
}

func (o *IdentityAccessManagementGetUserNotFound) String() string {
	return fmt.Sprintf("[GET /v1/users/id/{id}][%d] identityAccessManagementGetUserNotFound  %+v", 404, o.Payload)
}

func (o *IdentityAccessManagementGetUserNotFound) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementGetUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetUserInternalServerError creates a IdentityAccessManagementGetUserInternalServerError with default headers values
func NewIdentityAccessManagementGetUserInternalServerError() *IdentityAccessManagementGetUserInternalServerError {
	return &IdentityAccessManagementGetUserInternalServerError{}
}

/*
IdentityAccessManagementGetUserInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type IdentityAccessManagementGetUserInternalServerError struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management get user internal server error response has a 2xx status code
func (o *IdentityAccessManagementGetUserInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management get user internal server error response has a 3xx status code
func (o *IdentityAccessManagementGetUserInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management get user internal server error response has a 4xx status code
func (o *IdentityAccessManagementGetUserInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this identity access management get user internal server error response has a 5xx status code
func (o *IdentityAccessManagementGetUserInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this identity access management get user internal server error response a status code equal to that given
func (o *IdentityAccessManagementGetUserInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the identity access management get user internal server error response
func (o *IdentityAccessManagementGetUserInternalServerError) Code() int {
	return 500
}

func (o *IdentityAccessManagementGetUserInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/users/id/{id}][%d] identityAccessManagementGetUserInternalServerError  %+v", 500, o.Payload)
}

func (o *IdentityAccessManagementGetUserInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/users/id/{id}][%d] identityAccessManagementGetUserInternalServerError  %+v", 500, o.Payload)
}

func (o *IdentityAccessManagementGetUserInternalServerError) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementGetUserInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetUserGatewayTimeout creates a IdentityAccessManagementGetUserGatewayTimeout with default headers values
func NewIdentityAccessManagementGetUserGatewayTimeout() *IdentityAccessManagementGetUserGatewayTimeout {
	return &IdentityAccessManagementGetUserGatewayTimeout{}
}

/*
IdentityAccessManagementGetUserGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type IdentityAccessManagementGetUserGatewayTimeout struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management get user gateway timeout response has a 2xx status code
func (o *IdentityAccessManagementGetUserGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management get user gateway timeout response has a 3xx status code
func (o *IdentityAccessManagementGetUserGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management get user gateway timeout response has a 4xx status code
func (o *IdentityAccessManagementGetUserGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this identity access management get user gateway timeout response has a 5xx status code
func (o *IdentityAccessManagementGetUserGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this identity access management get user gateway timeout response a status code equal to that given
func (o *IdentityAccessManagementGetUserGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the identity access management get user gateway timeout response
func (o *IdentityAccessManagementGetUserGatewayTimeout) Code() int {
	return 504
}

func (o *IdentityAccessManagementGetUserGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/users/id/{id}][%d] identityAccessManagementGetUserGatewayTimeout  %+v", 504, o.Payload)
}

func (o *IdentityAccessManagementGetUserGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /v1/users/id/{id}][%d] identityAccessManagementGetUserGatewayTimeout  %+v", 504, o.Payload)
}

func (o *IdentityAccessManagementGetUserGatewayTimeout) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementGetUserGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetUserDefault creates a IdentityAccessManagementGetUserDefault with default headers values
func NewIdentityAccessManagementGetUserDefault(code int) *IdentityAccessManagementGetUserDefault {
	return &IdentityAccessManagementGetUserDefault{
		_statusCode: code,
	}
}

/*
IdentityAccessManagementGetUserDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type IdentityAccessManagementGetUserDefault struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// IsSuccess returns true when this identity access management get user default response has a 2xx status code
func (o *IdentityAccessManagementGetUserDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this identity access management get user default response has a 3xx status code
func (o *IdentityAccessManagementGetUserDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this identity access management get user default response has a 4xx status code
func (o *IdentityAccessManagementGetUserDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this identity access management get user default response has a 5xx status code
func (o *IdentityAccessManagementGetUserDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this identity access management get user default response a status code equal to that given
func (o *IdentityAccessManagementGetUserDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the identity access management get user default response
func (o *IdentityAccessManagementGetUserDefault) Code() int {
	return o._statusCode
}

func (o *IdentityAccessManagementGetUserDefault) Error() string {
	return fmt.Sprintf("[GET /v1/users/id/{id}][%d] IdentityAccessManagement_GetUser default  %+v", o._statusCode, o.Payload)
}

func (o *IdentityAccessManagementGetUserDefault) String() string {
	return fmt.Sprintf("[GET /v1/users/id/{id}][%d] IdentityAccessManagement_GetUser default  %+v", o._statusCode, o.Payload)
}

func (o *IdentityAccessManagementGetUserDefault) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *IdentityAccessManagementGetUserDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
