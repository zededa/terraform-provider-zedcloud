// Code generated by go-swagger; DO NOT EDIT.

package identity_access_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/terraform-provider/models"
)

// IdentityAccessManagementGetUserSessionReader is a Reader for the IdentityAccessManagementGetUserSession structure.
type IdentityAccessManagementGetUserSessionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *IdentityAccessManagementGetUserSessionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewIdentityAccessManagementGetUserSessionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewIdentityAccessManagementGetUserSessionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewIdentityAccessManagementGetUserSessionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewIdentityAccessManagementGetUserSessionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewIdentityAccessManagementGetUserSessionGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewIdentityAccessManagementGetUserSessionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewIdentityAccessManagementGetUserSessionOK creates a IdentityAccessManagementGetUserSessionOK with default headers values
func NewIdentityAccessManagementGetUserSessionOK() *IdentityAccessManagementGetUserSessionOK {
	return &IdentityAccessManagementGetUserSessionOK{}
}

/*
IdentityAccessManagementGetUserSessionOK describes a response with status code 200, with default header values.

A successful response.
*/
type IdentityAccessManagementGetUserSessionOK struct {
	Payload *models.AAAFrontendSessionDetailsResponse
}

// IsSuccess returns true when this identity access management get user session o k response has a 2xx status code
func (o *IdentityAccessManagementGetUserSessionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this identity access management get user session o k response has a 3xx status code
func (o *IdentityAccessManagementGetUserSessionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management get user session o k response has a 4xx status code
func (o *IdentityAccessManagementGetUserSessionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this identity access management get user session o k response has a 5xx status code
func (o *IdentityAccessManagementGetUserSessionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management get user session o k response a status code equal to that given
func (o *IdentityAccessManagementGetUserSessionOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the identity access management get user session o k response
func (o *IdentityAccessManagementGetUserSessionOK) Code() int {
	return 200
}

func (o *IdentityAccessManagementGetUserSessionOK) Error() string {
	return fmt.Sprintf("[GET /v1/sessions/token/{sessionToken.base64}][%d] identityAccessManagementGetUserSessionOK  %+v", 200, o.Payload)
}

func (o *IdentityAccessManagementGetUserSessionOK) String() string {
	return fmt.Sprintf("[GET /v1/sessions/token/{sessionToken.base64}][%d] identityAccessManagementGetUserSessionOK  %+v", 200, o.Payload)
}

func (o *IdentityAccessManagementGetUserSessionOK) GetPayload() *models.AAAFrontendSessionDetailsResponse {
	return o.Payload
}

func (o *IdentityAccessManagementGetUserSessionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AAAFrontendSessionDetailsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetUserSessionUnauthorized creates a IdentityAccessManagementGetUserSessionUnauthorized with default headers values
func NewIdentityAccessManagementGetUserSessionUnauthorized() *IdentityAccessManagementGetUserSessionUnauthorized {
	return &IdentityAccessManagementGetUserSessionUnauthorized{}
}

/*
IdentityAccessManagementGetUserSessionUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type IdentityAccessManagementGetUserSessionUnauthorized struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management get user session unauthorized response has a 2xx status code
func (o *IdentityAccessManagementGetUserSessionUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management get user session unauthorized response has a 3xx status code
func (o *IdentityAccessManagementGetUserSessionUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management get user session unauthorized response has a 4xx status code
func (o *IdentityAccessManagementGetUserSessionUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this identity access management get user session unauthorized response has a 5xx status code
func (o *IdentityAccessManagementGetUserSessionUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management get user session unauthorized response a status code equal to that given
func (o *IdentityAccessManagementGetUserSessionUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the identity access management get user session unauthorized response
func (o *IdentityAccessManagementGetUserSessionUnauthorized) Code() int {
	return 401
}

func (o *IdentityAccessManagementGetUserSessionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/sessions/token/{sessionToken.base64}][%d] identityAccessManagementGetUserSessionUnauthorized  %+v", 401, o.Payload)
}

func (o *IdentityAccessManagementGetUserSessionUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/sessions/token/{sessionToken.base64}][%d] identityAccessManagementGetUserSessionUnauthorized  %+v", 401, o.Payload)
}

func (o *IdentityAccessManagementGetUserSessionUnauthorized) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementGetUserSessionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetUserSessionForbidden creates a IdentityAccessManagementGetUserSessionForbidden with default headers values
func NewIdentityAccessManagementGetUserSessionForbidden() *IdentityAccessManagementGetUserSessionForbidden {
	return &IdentityAccessManagementGetUserSessionForbidden{}
}

/*
IdentityAccessManagementGetUserSessionForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type IdentityAccessManagementGetUserSessionForbidden struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management get user session forbidden response has a 2xx status code
func (o *IdentityAccessManagementGetUserSessionForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management get user session forbidden response has a 3xx status code
func (o *IdentityAccessManagementGetUserSessionForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management get user session forbidden response has a 4xx status code
func (o *IdentityAccessManagementGetUserSessionForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this identity access management get user session forbidden response has a 5xx status code
func (o *IdentityAccessManagementGetUserSessionForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management get user session forbidden response a status code equal to that given
func (o *IdentityAccessManagementGetUserSessionForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the identity access management get user session forbidden response
func (o *IdentityAccessManagementGetUserSessionForbidden) Code() int {
	return 403
}

func (o *IdentityAccessManagementGetUserSessionForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/sessions/token/{sessionToken.base64}][%d] identityAccessManagementGetUserSessionForbidden  %+v", 403, o.Payload)
}

func (o *IdentityAccessManagementGetUserSessionForbidden) String() string {
	return fmt.Sprintf("[GET /v1/sessions/token/{sessionToken.base64}][%d] identityAccessManagementGetUserSessionForbidden  %+v", 403, o.Payload)
}

func (o *IdentityAccessManagementGetUserSessionForbidden) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementGetUserSessionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetUserSessionInternalServerError creates a IdentityAccessManagementGetUserSessionInternalServerError with default headers values
func NewIdentityAccessManagementGetUserSessionInternalServerError() *IdentityAccessManagementGetUserSessionInternalServerError {
	return &IdentityAccessManagementGetUserSessionInternalServerError{}
}

/*
IdentityAccessManagementGetUserSessionInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type IdentityAccessManagementGetUserSessionInternalServerError struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management get user session internal server error response has a 2xx status code
func (o *IdentityAccessManagementGetUserSessionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management get user session internal server error response has a 3xx status code
func (o *IdentityAccessManagementGetUserSessionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management get user session internal server error response has a 4xx status code
func (o *IdentityAccessManagementGetUserSessionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this identity access management get user session internal server error response has a 5xx status code
func (o *IdentityAccessManagementGetUserSessionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this identity access management get user session internal server error response a status code equal to that given
func (o *IdentityAccessManagementGetUserSessionInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the identity access management get user session internal server error response
func (o *IdentityAccessManagementGetUserSessionInternalServerError) Code() int {
	return 500
}

func (o *IdentityAccessManagementGetUserSessionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/sessions/token/{sessionToken.base64}][%d] identityAccessManagementGetUserSessionInternalServerError  %+v", 500, o.Payload)
}

func (o *IdentityAccessManagementGetUserSessionInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/sessions/token/{sessionToken.base64}][%d] identityAccessManagementGetUserSessionInternalServerError  %+v", 500, o.Payload)
}

func (o *IdentityAccessManagementGetUserSessionInternalServerError) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementGetUserSessionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetUserSessionGatewayTimeout creates a IdentityAccessManagementGetUserSessionGatewayTimeout with default headers values
func NewIdentityAccessManagementGetUserSessionGatewayTimeout() *IdentityAccessManagementGetUserSessionGatewayTimeout {
	return &IdentityAccessManagementGetUserSessionGatewayTimeout{}
}

/*
IdentityAccessManagementGetUserSessionGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type IdentityAccessManagementGetUserSessionGatewayTimeout struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management get user session gateway timeout response has a 2xx status code
func (o *IdentityAccessManagementGetUserSessionGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management get user session gateway timeout response has a 3xx status code
func (o *IdentityAccessManagementGetUserSessionGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management get user session gateway timeout response has a 4xx status code
func (o *IdentityAccessManagementGetUserSessionGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this identity access management get user session gateway timeout response has a 5xx status code
func (o *IdentityAccessManagementGetUserSessionGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this identity access management get user session gateway timeout response a status code equal to that given
func (o *IdentityAccessManagementGetUserSessionGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the identity access management get user session gateway timeout response
func (o *IdentityAccessManagementGetUserSessionGatewayTimeout) Code() int {
	return 504
}

func (o *IdentityAccessManagementGetUserSessionGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/sessions/token/{sessionToken.base64}][%d] identityAccessManagementGetUserSessionGatewayTimeout  %+v", 504, o.Payload)
}

func (o *IdentityAccessManagementGetUserSessionGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /v1/sessions/token/{sessionToken.base64}][%d] identityAccessManagementGetUserSessionGatewayTimeout  %+v", 504, o.Payload)
}

func (o *IdentityAccessManagementGetUserSessionGatewayTimeout) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementGetUserSessionGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetUserSessionDefault creates a IdentityAccessManagementGetUserSessionDefault with default headers values
func NewIdentityAccessManagementGetUserSessionDefault(code int) *IdentityAccessManagementGetUserSessionDefault {
	return &IdentityAccessManagementGetUserSessionDefault{
		_statusCode: code,
	}
}

/*
IdentityAccessManagementGetUserSessionDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type IdentityAccessManagementGetUserSessionDefault struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// IsSuccess returns true when this identity access management get user session default response has a 2xx status code
func (o *IdentityAccessManagementGetUserSessionDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this identity access management get user session default response has a 3xx status code
func (o *IdentityAccessManagementGetUserSessionDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this identity access management get user session default response has a 4xx status code
func (o *IdentityAccessManagementGetUserSessionDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this identity access management get user session default response has a 5xx status code
func (o *IdentityAccessManagementGetUserSessionDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this identity access management get user session default response a status code equal to that given
func (o *IdentityAccessManagementGetUserSessionDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the identity access management get user session default response
func (o *IdentityAccessManagementGetUserSessionDefault) Code() int {
	return o._statusCode
}

func (o *IdentityAccessManagementGetUserSessionDefault) Error() string {
	return fmt.Sprintf("[GET /v1/sessions/token/{sessionToken.base64}][%d] IdentityAccessManagement_GetUserSession default  %+v", o._statusCode, o.Payload)
}

func (o *IdentityAccessManagementGetUserSessionDefault) String() string {
	return fmt.Sprintf("[GET /v1/sessions/token/{sessionToken.base64}][%d] IdentityAccessManagement_GetUserSession default  %+v", o._statusCode, o.Payload)
}

func (o *IdentityAccessManagementGetUserSessionDefault) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *IdentityAccessManagementGetUserSessionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
