// Code generated by go-swagger; DO NOT EDIT.

package identity_access_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/terraform-provider/models"
)

// IdentityAccessManagementGetUserSession2Reader is a Reader for the IdentityAccessManagementGetUserSession2 structure.
type IdentityAccessManagementGetUserSession2Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *IdentityAccessManagementGetUserSession2Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewIdentityAccessManagementGetUserSession2OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewIdentityAccessManagementGetUserSession2Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewIdentityAccessManagementGetUserSession2Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewIdentityAccessManagementGetUserSession2InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewIdentityAccessManagementGetUserSession2GatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewIdentityAccessManagementGetUserSession2Default(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewIdentityAccessManagementGetUserSession2OK creates a IdentityAccessManagementGetUserSession2OK with default headers values
func NewIdentityAccessManagementGetUserSession2OK() *IdentityAccessManagementGetUserSession2OK {
	return &IdentityAccessManagementGetUserSession2OK{}
}

/*
IdentityAccessManagementGetUserSession2OK describes a response with status code 200, with default header values.

A successful response.
*/
type IdentityAccessManagementGetUserSession2OK struct {
	Payload *models.AAAFrontendSessionDetailsResponse
}

// IsSuccess returns true when this identity access management get user session2 o k response has a 2xx status code
func (o *IdentityAccessManagementGetUserSession2OK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this identity access management get user session2 o k response has a 3xx status code
func (o *IdentityAccessManagementGetUserSession2OK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management get user session2 o k response has a 4xx status code
func (o *IdentityAccessManagementGetUserSession2OK) IsClientError() bool {
	return false
}

// IsServerError returns true when this identity access management get user session2 o k response has a 5xx status code
func (o *IdentityAccessManagementGetUserSession2OK) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management get user session2 o k response a status code equal to that given
func (o *IdentityAccessManagementGetUserSession2OK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the identity access management get user session2 o k response
func (o *IdentityAccessManagementGetUserSession2OK) Code() int {
	return 200
}

func (o *IdentityAccessManagementGetUserSession2OK) Error() string {
	return fmt.Sprintf("[GET /v1/sessions/token][%d] identityAccessManagementGetUserSession2OK  %+v", 200, o.Payload)
}

func (o *IdentityAccessManagementGetUserSession2OK) String() string {
	return fmt.Sprintf("[GET /v1/sessions/token][%d] identityAccessManagementGetUserSession2OK  %+v", 200, o.Payload)
}

func (o *IdentityAccessManagementGetUserSession2OK) GetPayload() *models.AAAFrontendSessionDetailsResponse {
	return o.Payload
}

func (o *IdentityAccessManagementGetUserSession2OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AAAFrontendSessionDetailsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetUserSession2Unauthorized creates a IdentityAccessManagementGetUserSession2Unauthorized with default headers values
func NewIdentityAccessManagementGetUserSession2Unauthorized() *IdentityAccessManagementGetUserSession2Unauthorized {
	return &IdentityAccessManagementGetUserSession2Unauthorized{}
}

/*
IdentityAccessManagementGetUserSession2Unauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type IdentityAccessManagementGetUserSession2Unauthorized struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management get user session2 unauthorized response has a 2xx status code
func (o *IdentityAccessManagementGetUserSession2Unauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management get user session2 unauthorized response has a 3xx status code
func (o *IdentityAccessManagementGetUserSession2Unauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management get user session2 unauthorized response has a 4xx status code
func (o *IdentityAccessManagementGetUserSession2Unauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this identity access management get user session2 unauthorized response has a 5xx status code
func (o *IdentityAccessManagementGetUserSession2Unauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management get user session2 unauthorized response a status code equal to that given
func (o *IdentityAccessManagementGetUserSession2Unauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the identity access management get user session2 unauthorized response
func (o *IdentityAccessManagementGetUserSession2Unauthorized) Code() int {
	return 401
}

func (o *IdentityAccessManagementGetUserSession2Unauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/sessions/token][%d] identityAccessManagementGetUserSession2Unauthorized  %+v", 401, o.Payload)
}

func (o *IdentityAccessManagementGetUserSession2Unauthorized) String() string {
	return fmt.Sprintf("[GET /v1/sessions/token][%d] identityAccessManagementGetUserSession2Unauthorized  %+v", 401, o.Payload)
}

func (o *IdentityAccessManagementGetUserSession2Unauthorized) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementGetUserSession2Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetUserSession2Forbidden creates a IdentityAccessManagementGetUserSession2Forbidden with default headers values
func NewIdentityAccessManagementGetUserSession2Forbidden() *IdentityAccessManagementGetUserSession2Forbidden {
	return &IdentityAccessManagementGetUserSession2Forbidden{}
}

/*
IdentityAccessManagementGetUserSession2Forbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type IdentityAccessManagementGetUserSession2Forbidden struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management get user session2 forbidden response has a 2xx status code
func (o *IdentityAccessManagementGetUserSession2Forbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management get user session2 forbidden response has a 3xx status code
func (o *IdentityAccessManagementGetUserSession2Forbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management get user session2 forbidden response has a 4xx status code
func (o *IdentityAccessManagementGetUserSession2Forbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this identity access management get user session2 forbidden response has a 5xx status code
func (o *IdentityAccessManagementGetUserSession2Forbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management get user session2 forbidden response a status code equal to that given
func (o *IdentityAccessManagementGetUserSession2Forbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the identity access management get user session2 forbidden response
func (o *IdentityAccessManagementGetUserSession2Forbidden) Code() int {
	return 403
}

func (o *IdentityAccessManagementGetUserSession2Forbidden) Error() string {
	return fmt.Sprintf("[GET /v1/sessions/token][%d] identityAccessManagementGetUserSession2Forbidden  %+v", 403, o.Payload)
}

func (o *IdentityAccessManagementGetUserSession2Forbidden) String() string {
	return fmt.Sprintf("[GET /v1/sessions/token][%d] identityAccessManagementGetUserSession2Forbidden  %+v", 403, o.Payload)
}

func (o *IdentityAccessManagementGetUserSession2Forbidden) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementGetUserSession2Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetUserSession2InternalServerError creates a IdentityAccessManagementGetUserSession2InternalServerError with default headers values
func NewIdentityAccessManagementGetUserSession2InternalServerError() *IdentityAccessManagementGetUserSession2InternalServerError {
	return &IdentityAccessManagementGetUserSession2InternalServerError{}
}

/*
IdentityAccessManagementGetUserSession2InternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type IdentityAccessManagementGetUserSession2InternalServerError struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management get user session2 internal server error response has a 2xx status code
func (o *IdentityAccessManagementGetUserSession2InternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management get user session2 internal server error response has a 3xx status code
func (o *IdentityAccessManagementGetUserSession2InternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management get user session2 internal server error response has a 4xx status code
func (o *IdentityAccessManagementGetUserSession2InternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this identity access management get user session2 internal server error response has a 5xx status code
func (o *IdentityAccessManagementGetUserSession2InternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this identity access management get user session2 internal server error response a status code equal to that given
func (o *IdentityAccessManagementGetUserSession2InternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the identity access management get user session2 internal server error response
func (o *IdentityAccessManagementGetUserSession2InternalServerError) Code() int {
	return 500
}

func (o *IdentityAccessManagementGetUserSession2InternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/sessions/token][%d] identityAccessManagementGetUserSession2InternalServerError  %+v", 500, o.Payload)
}

func (o *IdentityAccessManagementGetUserSession2InternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/sessions/token][%d] identityAccessManagementGetUserSession2InternalServerError  %+v", 500, o.Payload)
}

func (o *IdentityAccessManagementGetUserSession2InternalServerError) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementGetUserSession2InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetUserSession2GatewayTimeout creates a IdentityAccessManagementGetUserSession2GatewayTimeout with default headers values
func NewIdentityAccessManagementGetUserSession2GatewayTimeout() *IdentityAccessManagementGetUserSession2GatewayTimeout {
	return &IdentityAccessManagementGetUserSession2GatewayTimeout{}
}

/*
IdentityAccessManagementGetUserSession2GatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type IdentityAccessManagementGetUserSession2GatewayTimeout struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management get user session2 gateway timeout response has a 2xx status code
func (o *IdentityAccessManagementGetUserSession2GatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management get user session2 gateway timeout response has a 3xx status code
func (o *IdentityAccessManagementGetUserSession2GatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management get user session2 gateway timeout response has a 4xx status code
func (o *IdentityAccessManagementGetUserSession2GatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this identity access management get user session2 gateway timeout response has a 5xx status code
func (o *IdentityAccessManagementGetUserSession2GatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this identity access management get user session2 gateway timeout response a status code equal to that given
func (o *IdentityAccessManagementGetUserSession2GatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the identity access management get user session2 gateway timeout response
func (o *IdentityAccessManagementGetUserSession2GatewayTimeout) Code() int {
	return 504
}

func (o *IdentityAccessManagementGetUserSession2GatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/sessions/token][%d] identityAccessManagementGetUserSession2GatewayTimeout  %+v", 504, o.Payload)
}

func (o *IdentityAccessManagementGetUserSession2GatewayTimeout) String() string {
	return fmt.Sprintf("[GET /v1/sessions/token][%d] identityAccessManagementGetUserSession2GatewayTimeout  %+v", 504, o.Payload)
}

func (o *IdentityAccessManagementGetUserSession2GatewayTimeout) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementGetUserSession2GatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementGetUserSession2Default creates a IdentityAccessManagementGetUserSession2Default with default headers values
func NewIdentityAccessManagementGetUserSession2Default(code int) *IdentityAccessManagementGetUserSession2Default {
	return &IdentityAccessManagementGetUserSession2Default{
		_statusCode: code,
	}
}

/*
IdentityAccessManagementGetUserSession2Default describes a response with status code -1, with default header values.

An unexpected error response.
*/
type IdentityAccessManagementGetUserSession2Default struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// IsSuccess returns true when this identity access management get user session2 default response has a 2xx status code
func (o *IdentityAccessManagementGetUserSession2Default) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this identity access management get user session2 default response has a 3xx status code
func (o *IdentityAccessManagementGetUserSession2Default) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this identity access management get user session2 default response has a 4xx status code
func (o *IdentityAccessManagementGetUserSession2Default) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this identity access management get user session2 default response has a 5xx status code
func (o *IdentityAccessManagementGetUserSession2Default) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this identity access management get user session2 default response a status code equal to that given
func (o *IdentityAccessManagementGetUserSession2Default) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the identity access management get user session2 default response
func (o *IdentityAccessManagementGetUserSession2Default) Code() int {
	return o._statusCode
}

func (o *IdentityAccessManagementGetUserSession2Default) Error() string {
	return fmt.Sprintf("[GET /v1/sessions/token][%d] IdentityAccessManagement_GetUserSession2 default  %+v", o._statusCode, o.Payload)
}

func (o *IdentityAccessManagementGetUserSession2Default) String() string {
	return fmt.Sprintf("[GET /v1/sessions/token][%d] IdentityAccessManagement_GetUserSession2 default  %+v", o._statusCode, o.Payload)
}

func (o *IdentityAccessManagementGetUserSession2Default) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *IdentityAccessManagementGetUserSession2Default) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
