// Code generated by go-swagger; DO NOT EDIT.

package identity_access_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/terraform-provider/models"
)

// IdentityAccessManagementSignupUserReader is a Reader for the IdentityAccessManagementSignupUser structure.
type IdentityAccessManagementSignupUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *IdentityAccessManagementSignupUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewIdentityAccessManagementSignupUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewIdentityAccessManagementSignupUserUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewIdentityAccessManagementSignupUserForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewIdentityAccessManagementSignupUserInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewIdentityAccessManagementSignupUserGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewIdentityAccessManagementSignupUserDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewIdentityAccessManagementSignupUserOK creates a IdentityAccessManagementSignupUserOK with default headers values
func NewIdentityAccessManagementSignupUserOK() *IdentityAccessManagementSignupUserOK {
	return &IdentityAccessManagementSignupUserOK{}
}

/*
IdentityAccessManagementSignupUserOK describes a response with status code 200, with default header values.

A successful response.
*/
type IdentityAccessManagementSignupUserOK struct {
	Payload *models.AAAResponse
}

// IsSuccess returns true when this identity access management signup user o k response has a 2xx status code
func (o *IdentityAccessManagementSignupUserOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this identity access management signup user o k response has a 3xx status code
func (o *IdentityAccessManagementSignupUserOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management signup user o k response has a 4xx status code
func (o *IdentityAccessManagementSignupUserOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this identity access management signup user o k response has a 5xx status code
func (o *IdentityAccessManagementSignupUserOK) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management signup user o k response a status code equal to that given
func (o *IdentityAccessManagementSignupUserOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the identity access management signup user o k response
func (o *IdentityAccessManagementSignupUserOK) Code() int {
	return 200
}

func (o *IdentityAccessManagementSignupUserOK) Error() string {
	return fmt.Sprintf("[POST /v1/login/signup/user][%d] identityAccessManagementSignupUserOK  %+v", 200, o.Payload)
}

func (o *IdentityAccessManagementSignupUserOK) String() string {
	return fmt.Sprintf("[POST /v1/login/signup/user][%d] identityAccessManagementSignupUserOK  %+v", 200, o.Payload)
}

func (o *IdentityAccessManagementSignupUserOK) GetPayload() *models.AAAResponse {
	return o.Payload
}

func (o *IdentityAccessManagementSignupUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AAAResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementSignupUserUnauthorized creates a IdentityAccessManagementSignupUserUnauthorized with default headers values
func NewIdentityAccessManagementSignupUserUnauthorized() *IdentityAccessManagementSignupUserUnauthorized {
	return &IdentityAccessManagementSignupUserUnauthorized{}
}

/*
IdentityAccessManagementSignupUserUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type IdentityAccessManagementSignupUserUnauthorized struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management signup user unauthorized response has a 2xx status code
func (o *IdentityAccessManagementSignupUserUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management signup user unauthorized response has a 3xx status code
func (o *IdentityAccessManagementSignupUserUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management signup user unauthorized response has a 4xx status code
func (o *IdentityAccessManagementSignupUserUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this identity access management signup user unauthorized response has a 5xx status code
func (o *IdentityAccessManagementSignupUserUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management signup user unauthorized response a status code equal to that given
func (o *IdentityAccessManagementSignupUserUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the identity access management signup user unauthorized response
func (o *IdentityAccessManagementSignupUserUnauthorized) Code() int {
	return 401
}

func (o *IdentityAccessManagementSignupUserUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/login/signup/user][%d] identityAccessManagementSignupUserUnauthorized  %+v", 401, o.Payload)
}

func (o *IdentityAccessManagementSignupUserUnauthorized) String() string {
	return fmt.Sprintf("[POST /v1/login/signup/user][%d] identityAccessManagementSignupUserUnauthorized  %+v", 401, o.Payload)
}

func (o *IdentityAccessManagementSignupUserUnauthorized) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementSignupUserUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementSignupUserForbidden creates a IdentityAccessManagementSignupUserForbidden with default headers values
func NewIdentityAccessManagementSignupUserForbidden() *IdentityAccessManagementSignupUserForbidden {
	return &IdentityAccessManagementSignupUserForbidden{}
}

/*
IdentityAccessManagementSignupUserForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type IdentityAccessManagementSignupUserForbidden struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management signup user forbidden response has a 2xx status code
func (o *IdentityAccessManagementSignupUserForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management signup user forbidden response has a 3xx status code
func (o *IdentityAccessManagementSignupUserForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management signup user forbidden response has a 4xx status code
func (o *IdentityAccessManagementSignupUserForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this identity access management signup user forbidden response has a 5xx status code
func (o *IdentityAccessManagementSignupUserForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this identity access management signup user forbidden response a status code equal to that given
func (o *IdentityAccessManagementSignupUserForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the identity access management signup user forbidden response
func (o *IdentityAccessManagementSignupUserForbidden) Code() int {
	return 403
}

func (o *IdentityAccessManagementSignupUserForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/login/signup/user][%d] identityAccessManagementSignupUserForbidden  %+v", 403, o.Payload)
}

func (o *IdentityAccessManagementSignupUserForbidden) String() string {
	return fmt.Sprintf("[POST /v1/login/signup/user][%d] identityAccessManagementSignupUserForbidden  %+v", 403, o.Payload)
}

func (o *IdentityAccessManagementSignupUserForbidden) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementSignupUserForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementSignupUserInternalServerError creates a IdentityAccessManagementSignupUserInternalServerError with default headers values
func NewIdentityAccessManagementSignupUserInternalServerError() *IdentityAccessManagementSignupUserInternalServerError {
	return &IdentityAccessManagementSignupUserInternalServerError{}
}

/*
IdentityAccessManagementSignupUserInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type IdentityAccessManagementSignupUserInternalServerError struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management signup user internal server error response has a 2xx status code
func (o *IdentityAccessManagementSignupUserInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management signup user internal server error response has a 3xx status code
func (o *IdentityAccessManagementSignupUserInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management signup user internal server error response has a 4xx status code
func (o *IdentityAccessManagementSignupUserInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this identity access management signup user internal server error response has a 5xx status code
func (o *IdentityAccessManagementSignupUserInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this identity access management signup user internal server error response a status code equal to that given
func (o *IdentityAccessManagementSignupUserInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the identity access management signup user internal server error response
func (o *IdentityAccessManagementSignupUserInternalServerError) Code() int {
	return 500
}

func (o *IdentityAccessManagementSignupUserInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/login/signup/user][%d] identityAccessManagementSignupUserInternalServerError  %+v", 500, o.Payload)
}

func (o *IdentityAccessManagementSignupUserInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/login/signup/user][%d] identityAccessManagementSignupUserInternalServerError  %+v", 500, o.Payload)
}

func (o *IdentityAccessManagementSignupUserInternalServerError) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementSignupUserInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementSignupUserGatewayTimeout creates a IdentityAccessManagementSignupUserGatewayTimeout with default headers values
func NewIdentityAccessManagementSignupUserGatewayTimeout() *IdentityAccessManagementSignupUserGatewayTimeout {
	return &IdentityAccessManagementSignupUserGatewayTimeout{}
}

/*
IdentityAccessManagementSignupUserGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type IdentityAccessManagementSignupUserGatewayTimeout struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this identity access management signup user gateway timeout response has a 2xx status code
func (o *IdentityAccessManagementSignupUserGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identity access management signup user gateway timeout response has a 3xx status code
func (o *IdentityAccessManagementSignupUserGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identity access management signup user gateway timeout response has a 4xx status code
func (o *IdentityAccessManagementSignupUserGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this identity access management signup user gateway timeout response has a 5xx status code
func (o *IdentityAccessManagementSignupUserGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this identity access management signup user gateway timeout response a status code equal to that given
func (o *IdentityAccessManagementSignupUserGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the identity access management signup user gateway timeout response
func (o *IdentityAccessManagementSignupUserGatewayTimeout) Code() int {
	return 504
}

func (o *IdentityAccessManagementSignupUserGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /v1/login/signup/user][%d] identityAccessManagementSignupUserGatewayTimeout  %+v", 504, o.Payload)
}

func (o *IdentityAccessManagementSignupUserGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /v1/login/signup/user][%d] identityAccessManagementSignupUserGatewayTimeout  %+v", 504, o.Payload)
}

func (o *IdentityAccessManagementSignupUserGatewayTimeout) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *IdentityAccessManagementSignupUserGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentityAccessManagementSignupUserDefault creates a IdentityAccessManagementSignupUserDefault with default headers values
func NewIdentityAccessManagementSignupUserDefault(code int) *IdentityAccessManagementSignupUserDefault {
	return &IdentityAccessManagementSignupUserDefault{
		_statusCode: code,
	}
}

/*
IdentityAccessManagementSignupUserDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type IdentityAccessManagementSignupUserDefault struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// IsSuccess returns true when this identity access management signup user default response has a 2xx status code
func (o *IdentityAccessManagementSignupUserDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this identity access management signup user default response has a 3xx status code
func (o *IdentityAccessManagementSignupUserDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this identity access management signup user default response has a 4xx status code
func (o *IdentityAccessManagementSignupUserDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this identity access management signup user default response has a 5xx status code
func (o *IdentityAccessManagementSignupUserDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this identity access management signup user default response a status code equal to that given
func (o *IdentityAccessManagementSignupUserDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the identity access management signup user default response
func (o *IdentityAccessManagementSignupUserDefault) Code() int {
	return o._statusCode
}

func (o *IdentityAccessManagementSignupUserDefault) Error() string {
	return fmt.Sprintf("[POST /v1/login/signup/user][%d] IdentityAccessManagement_SignupUser default  %+v", o._statusCode, o.Payload)
}

func (o *IdentityAccessManagementSignupUserDefault) String() string {
	return fmt.Sprintf("[POST /v1/login/signup/user][%d] IdentityAccessManagement_SignupUser default  %+v", o._statusCode, o.Payload)
}

func (o *IdentityAccessManagementSignupUserDefault) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *IdentityAccessManagementSignupUserDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
