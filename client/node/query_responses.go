package node

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/terraform-provider-zedcloud/models"
)

// EdgeNodeConfigurationQueryEdgeNodesReader is a Reader for the EdgeNodeConfigurationQueryEdgeNodes structure.
type EdgeNodeConfigurationQueryEdgeNodesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EdgeNodeConfigurationQueryEdgeNodesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewEdgeNodeConfigurationQueryEdgeNodesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewEdgeNodeConfigurationQueryEdgeNodesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewEdgeNodeConfigurationQueryEdgeNodesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewEdgeNodeConfigurationQueryEdgeNodesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewEdgeNodeConfigurationQueryEdgeNodesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewEdgeNodeConfigurationQueryEdgeNodesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewEdgeNodeConfigurationQueryEdgeNodesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewEdgeNodeConfigurationQueryEdgeNodesOK creates a EdgeNodeConfigurationQueryEdgeNodesOK with default headers values
func NewEdgeNodeConfigurationQueryEdgeNodesOK() *EdgeNodeConfigurationQueryEdgeNodesOK {
	return &EdgeNodeConfigurationQueryEdgeNodesOK{}
}

/*
EdgeNodeConfigurationQueryEdgeNodesOK describes a response with status code 200, with default header values.

A successful response.
*/
type EdgeNodeConfigurationQueryEdgeNodesOK struct {
	Payload *models.DeviceConfigList
}

// IsSuccess returns true when this edge node configuration query edge nodes o k response has a 2xx status code
func (o *EdgeNodeConfigurationQueryEdgeNodesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this edge node configuration query edge nodes o k response has a 3xx status code
func (o *EdgeNodeConfigurationQueryEdgeNodesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edge node configuration query edge nodes o k response has a 4xx status code
func (o *EdgeNodeConfigurationQueryEdgeNodesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this edge node configuration query edge nodes o k response has a 5xx status code
func (o *EdgeNodeConfigurationQueryEdgeNodesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this edge node configuration query edge nodes o k response a status code equal to that given
func (o *EdgeNodeConfigurationQueryEdgeNodesOK) IsCode(code int) bool {
	return code == 200
}

func (o *EdgeNodeConfigurationQueryEdgeNodesOK) Error() string {
	return fmt.Sprintf("[GET /v1/devices][%d] edgeNodeConfigurationQueryEdgeNodesOK  %+v", 200, o.Payload)
}

func (o *EdgeNodeConfigurationQueryEdgeNodesOK) String() string {
	return fmt.Sprintf("[GET /v1/devices][%d] edgeNodeConfigurationQueryEdgeNodesOK  %+v", 200, o.Payload)
}

func (o *EdgeNodeConfigurationQueryEdgeNodesOK) GetPayload() *models.DeviceConfigList {
	return o.Payload
}

func (o *EdgeNodeConfigurationQueryEdgeNodesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeviceConfigList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationQueryEdgeNodesBadRequest creates a EdgeNodeConfigurationQueryEdgeNodesBadRequest with default headers values
func NewEdgeNodeConfigurationQueryEdgeNodesBadRequest() *EdgeNodeConfigurationQueryEdgeNodesBadRequest {
	return &EdgeNodeConfigurationQueryEdgeNodesBadRequest{}
}

/*
EdgeNodeConfigurationQueryEdgeNodesBadRequest describes a response with status code 400, with default header values.

Bad Request. The API gateway did not process the request because of invalid value of filter parameters.
*/
type EdgeNodeConfigurationQueryEdgeNodesBadRequest struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this edge node configuration query edge nodes bad request response has a 2xx status code
func (o *EdgeNodeConfigurationQueryEdgeNodesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edge node configuration query edge nodes bad request response has a 3xx status code
func (o *EdgeNodeConfigurationQueryEdgeNodesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edge node configuration query edge nodes bad request response has a 4xx status code
func (o *EdgeNodeConfigurationQueryEdgeNodesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this edge node configuration query edge nodes bad request response has a 5xx status code
func (o *EdgeNodeConfigurationQueryEdgeNodesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this edge node configuration query edge nodes bad request response a status code equal to that given
func (o *EdgeNodeConfigurationQueryEdgeNodesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *EdgeNodeConfigurationQueryEdgeNodesBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/devices][%d] edgeNodeConfigurationQueryEdgeNodesBadRequest  %+v", 400, o.Payload)
}

func (o *EdgeNodeConfigurationQueryEdgeNodesBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/devices][%d] edgeNodeConfigurationQueryEdgeNodesBadRequest  %+v", 400, o.Payload)
}

func (o *EdgeNodeConfigurationQueryEdgeNodesBadRequest) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationQueryEdgeNodesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationQueryEdgeNodesUnauthorized creates a EdgeNodeConfigurationQueryEdgeNodesUnauthorized with default headers values
func NewEdgeNodeConfigurationQueryEdgeNodesUnauthorized() *EdgeNodeConfigurationQueryEdgeNodesUnauthorized {
	return &EdgeNodeConfigurationQueryEdgeNodesUnauthorized{}
}

/*
EdgeNodeConfigurationQueryEdgeNodesUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type EdgeNodeConfigurationQueryEdgeNodesUnauthorized struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this edge node configuration query edge nodes unauthorized response has a 2xx status code
func (o *EdgeNodeConfigurationQueryEdgeNodesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edge node configuration query edge nodes unauthorized response has a 3xx status code
func (o *EdgeNodeConfigurationQueryEdgeNodesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edge node configuration query edge nodes unauthorized response has a 4xx status code
func (o *EdgeNodeConfigurationQueryEdgeNodesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this edge node configuration query edge nodes unauthorized response has a 5xx status code
func (o *EdgeNodeConfigurationQueryEdgeNodesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this edge node configuration query edge nodes unauthorized response a status code equal to that given
func (o *EdgeNodeConfigurationQueryEdgeNodesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *EdgeNodeConfigurationQueryEdgeNodesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/devices][%d] edgeNodeConfigurationQueryEdgeNodesUnauthorized  %+v", 401, o.Payload)
}

func (o *EdgeNodeConfigurationQueryEdgeNodesUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/devices][%d] edgeNodeConfigurationQueryEdgeNodesUnauthorized  %+v", 401, o.Payload)
}

func (o *EdgeNodeConfigurationQueryEdgeNodesUnauthorized) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationQueryEdgeNodesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationQueryEdgeNodesForbidden creates a EdgeNodeConfigurationQueryEdgeNodesForbidden with default headers values
func NewEdgeNodeConfigurationQueryEdgeNodesForbidden() *EdgeNodeConfigurationQueryEdgeNodesForbidden {
	return &EdgeNodeConfigurationQueryEdgeNodesForbidden{}
}

/*
EdgeNodeConfigurationQueryEdgeNodesForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type EdgeNodeConfigurationQueryEdgeNodesForbidden struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this edge node configuration query edge nodes forbidden response has a 2xx status code
func (o *EdgeNodeConfigurationQueryEdgeNodesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edge node configuration query edge nodes forbidden response has a 3xx status code
func (o *EdgeNodeConfigurationQueryEdgeNodesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edge node configuration query edge nodes forbidden response has a 4xx status code
func (o *EdgeNodeConfigurationQueryEdgeNodesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this edge node configuration query edge nodes forbidden response has a 5xx status code
func (o *EdgeNodeConfigurationQueryEdgeNodesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this edge node configuration query edge nodes forbidden response a status code equal to that given
func (o *EdgeNodeConfigurationQueryEdgeNodesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *EdgeNodeConfigurationQueryEdgeNodesForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/devices][%d] edgeNodeConfigurationQueryEdgeNodesForbidden  %+v", 403, o.Payload)
}

func (o *EdgeNodeConfigurationQueryEdgeNodesForbidden) String() string {
	return fmt.Sprintf("[GET /v1/devices][%d] edgeNodeConfigurationQueryEdgeNodesForbidden  %+v", 403, o.Payload)
}

func (o *EdgeNodeConfigurationQueryEdgeNodesForbidden) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationQueryEdgeNodesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationQueryEdgeNodesInternalServerError creates a EdgeNodeConfigurationQueryEdgeNodesInternalServerError with default headers values
func NewEdgeNodeConfigurationQueryEdgeNodesInternalServerError() *EdgeNodeConfigurationQueryEdgeNodesInternalServerError {
	return &EdgeNodeConfigurationQueryEdgeNodesInternalServerError{}
}

/*
EdgeNodeConfigurationQueryEdgeNodesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type EdgeNodeConfigurationQueryEdgeNodesInternalServerError struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this edge node configuration query edge nodes internal server error response has a 2xx status code
func (o *EdgeNodeConfigurationQueryEdgeNodesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edge node configuration query edge nodes internal server error response has a 3xx status code
func (o *EdgeNodeConfigurationQueryEdgeNodesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edge node configuration query edge nodes internal server error response has a 4xx status code
func (o *EdgeNodeConfigurationQueryEdgeNodesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this edge node configuration query edge nodes internal server error response has a 5xx status code
func (o *EdgeNodeConfigurationQueryEdgeNodesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this edge node configuration query edge nodes internal server error response a status code equal to that given
func (o *EdgeNodeConfigurationQueryEdgeNodesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *EdgeNodeConfigurationQueryEdgeNodesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/devices][%d] edgeNodeConfigurationQueryEdgeNodesInternalServerError  %+v", 500, o.Payload)
}

func (o *EdgeNodeConfigurationQueryEdgeNodesInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/devices][%d] edgeNodeConfigurationQueryEdgeNodesInternalServerError  %+v", 500, o.Payload)
}

func (o *EdgeNodeConfigurationQueryEdgeNodesInternalServerError) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationQueryEdgeNodesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationQueryEdgeNodesGatewayTimeout creates a EdgeNodeConfigurationQueryEdgeNodesGatewayTimeout with default headers values
func NewEdgeNodeConfigurationQueryEdgeNodesGatewayTimeout() *EdgeNodeConfigurationQueryEdgeNodesGatewayTimeout {
	return &EdgeNodeConfigurationQueryEdgeNodesGatewayTimeout{}
}

/*
EdgeNodeConfigurationQueryEdgeNodesGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type EdgeNodeConfigurationQueryEdgeNodesGatewayTimeout struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this edge node configuration query edge nodes gateway timeout response has a 2xx status code
func (o *EdgeNodeConfigurationQueryEdgeNodesGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edge node configuration query edge nodes gateway timeout response has a 3xx status code
func (o *EdgeNodeConfigurationQueryEdgeNodesGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edge node configuration query edge nodes gateway timeout response has a 4xx status code
func (o *EdgeNodeConfigurationQueryEdgeNodesGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this edge node configuration query edge nodes gateway timeout response has a 5xx status code
func (o *EdgeNodeConfigurationQueryEdgeNodesGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this edge node configuration query edge nodes gateway timeout response a status code equal to that given
func (o *EdgeNodeConfigurationQueryEdgeNodesGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *EdgeNodeConfigurationQueryEdgeNodesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/devices][%d] edgeNodeConfigurationQueryEdgeNodesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *EdgeNodeConfigurationQueryEdgeNodesGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /v1/devices][%d] edgeNodeConfigurationQueryEdgeNodesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *EdgeNodeConfigurationQueryEdgeNodesGatewayTimeout) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationQueryEdgeNodesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationQueryEdgeNodesDefault creates a EdgeNodeConfigurationQueryEdgeNodesDefault with default headers values
func NewEdgeNodeConfigurationQueryEdgeNodesDefault(code int) *EdgeNodeConfigurationQueryEdgeNodesDefault {
	return &EdgeNodeConfigurationQueryEdgeNodesDefault{
		_statusCode: code,
	}
}

/*
EdgeNodeConfigurationQueryEdgeNodesDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type EdgeNodeConfigurationQueryEdgeNodesDefault struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// Code gets the status code for the edge node configuration query edge nodes default response
func (o *EdgeNodeConfigurationQueryEdgeNodesDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this edge node configuration query edge nodes default response has a 2xx status code
func (o *EdgeNodeConfigurationQueryEdgeNodesDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this edge node configuration query edge nodes default response has a 3xx status code
func (o *EdgeNodeConfigurationQueryEdgeNodesDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this edge node configuration query edge nodes default response has a 4xx status code
func (o *EdgeNodeConfigurationQueryEdgeNodesDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this edge node configuration query edge nodes default response has a 5xx status code
func (o *EdgeNodeConfigurationQueryEdgeNodesDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this edge node configuration query edge nodes default response a status code equal to that given
func (o *EdgeNodeConfigurationQueryEdgeNodesDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *EdgeNodeConfigurationQueryEdgeNodesDefault) Error() string {
	return fmt.Sprintf("[GET /v1/devices][%d] EdgeNodeConfiguration_QueryEdgeNodes default  %+v", o._statusCode, o.Payload)
}

func (o *EdgeNodeConfigurationQueryEdgeNodesDefault) String() string {
	return fmt.Sprintf("[GET /v1/devices][%d] EdgeNodeConfiguration_QueryEdgeNodes default  %+v", o._statusCode, o.Payload)
}

func (o *EdgeNodeConfigurationQueryEdgeNodesDefault) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *EdgeNodeConfigurationQueryEdgeNodesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
