package node

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/terraform-provider-zedcloud/models"
)

// EdgeNodeConfigurationGetEdgeviewClientScriptReader is a Reader for the EdgeNodeConfigurationGetEdgeviewClientScript structure.
type EdgeNodeConfigurationGetEdgeviewClientScriptReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EdgeNodeConfigurationGetEdgeviewClientScriptReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewEdgeNodeConfigurationGetEdgeviewClientScriptOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewEdgeNodeConfigurationGetEdgeviewClientScriptUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewEdgeNodeConfigurationGetEdgeviewClientScriptForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewEdgeNodeConfigurationGetEdgeviewClientScriptNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewEdgeNodeConfigurationGetEdgeviewClientScriptInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewEdgeNodeConfigurationGetEdgeviewClientScriptGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewEdgeNodeConfigurationGetEdgeviewClientScriptDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewEdgeNodeConfigurationGetEdgeviewClientScriptOK creates a EdgeNodeConfigurationGetEdgeviewClientScriptOK with default headers values
func NewEdgeNodeConfigurationGetEdgeviewClientScriptOK() *EdgeNodeConfigurationGetEdgeviewClientScriptOK {
	return &EdgeNodeConfigurationGetEdgeviewClientScriptOK{}
}

/*
EdgeNodeConfigurationGetEdgeviewClientScriptOK describes a response with status code 200, with default header values.

A successful response.
*/
type EdgeNodeConfigurationGetEdgeviewClientScriptOK struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this edge node configuration get edgeview client script o k response has a 2xx status code
func (o *EdgeNodeConfigurationGetEdgeviewClientScriptOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this edge node configuration get edgeview client script o k response has a 3xx status code
func (o *EdgeNodeConfigurationGetEdgeviewClientScriptOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edge node configuration get edgeview client script o k response has a 4xx status code
func (o *EdgeNodeConfigurationGetEdgeviewClientScriptOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this edge node configuration get edgeview client script o k response has a 5xx status code
func (o *EdgeNodeConfigurationGetEdgeviewClientScriptOK) IsServerError() bool {
	return false
}

// IsCode returns true when this edge node configuration get edgeview client script o k response a status code equal to that given
func (o *EdgeNodeConfigurationGetEdgeviewClientScriptOK) IsCode(code int) bool {
	return code == 200
}

func (o *EdgeNodeConfigurationGetEdgeviewClientScriptOK) Error() string {
	return fmt.Sprintf("[GET /v1/devices/id/{id}/edgeview/clientscript][%d] edgeNodeConfigurationGetEdgeviewClientScriptOK  %+v", 200, o.Payload)
}

func (o *EdgeNodeConfigurationGetEdgeviewClientScriptOK) String() string {
	return fmt.Sprintf("[GET /v1/devices/id/{id}/edgeview/clientscript][%d] edgeNodeConfigurationGetEdgeviewClientScriptOK  %+v", 200, o.Payload)
}

func (o *EdgeNodeConfigurationGetEdgeviewClientScriptOK) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationGetEdgeviewClientScriptOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationGetEdgeviewClientScriptUnauthorized creates a EdgeNodeConfigurationGetEdgeviewClientScriptUnauthorized with default headers values
func NewEdgeNodeConfigurationGetEdgeviewClientScriptUnauthorized() *EdgeNodeConfigurationGetEdgeviewClientScriptUnauthorized {
	return &EdgeNodeConfigurationGetEdgeviewClientScriptUnauthorized{}
}

/*
EdgeNodeConfigurationGetEdgeviewClientScriptUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type EdgeNodeConfigurationGetEdgeviewClientScriptUnauthorized struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this edge node configuration get edgeview client script unauthorized response has a 2xx status code
func (o *EdgeNodeConfigurationGetEdgeviewClientScriptUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edge node configuration get edgeview client script unauthorized response has a 3xx status code
func (o *EdgeNodeConfigurationGetEdgeviewClientScriptUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edge node configuration get edgeview client script unauthorized response has a 4xx status code
func (o *EdgeNodeConfigurationGetEdgeviewClientScriptUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this edge node configuration get edgeview client script unauthorized response has a 5xx status code
func (o *EdgeNodeConfigurationGetEdgeviewClientScriptUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this edge node configuration get edgeview client script unauthorized response a status code equal to that given
func (o *EdgeNodeConfigurationGetEdgeviewClientScriptUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *EdgeNodeConfigurationGetEdgeviewClientScriptUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/devices/id/{id}/edgeview/clientscript][%d] edgeNodeConfigurationGetEdgeviewClientScriptUnauthorized  %+v", 401, o.Payload)
}

func (o *EdgeNodeConfigurationGetEdgeviewClientScriptUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/devices/id/{id}/edgeview/clientscript][%d] edgeNodeConfigurationGetEdgeviewClientScriptUnauthorized  %+v", 401, o.Payload)
}

func (o *EdgeNodeConfigurationGetEdgeviewClientScriptUnauthorized) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationGetEdgeviewClientScriptUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationGetEdgeviewClientScriptForbidden creates a EdgeNodeConfigurationGetEdgeviewClientScriptForbidden with default headers values
func NewEdgeNodeConfigurationGetEdgeviewClientScriptForbidden() *EdgeNodeConfigurationGetEdgeviewClientScriptForbidden {
	return &EdgeNodeConfigurationGetEdgeviewClientScriptForbidden{}
}

/*
EdgeNodeConfigurationGetEdgeviewClientScriptForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type EdgeNodeConfigurationGetEdgeviewClientScriptForbidden struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this edge node configuration get edgeview client script forbidden response has a 2xx status code
func (o *EdgeNodeConfigurationGetEdgeviewClientScriptForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edge node configuration get edgeview client script forbidden response has a 3xx status code
func (o *EdgeNodeConfigurationGetEdgeviewClientScriptForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edge node configuration get edgeview client script forbidden response has a 4xx status code
func (o *EdgeNodeConfigurationGetEdgeviewClientScriptForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this edge node configuration get edgeview client script forbidden response has a 5xx status code
func (o *EdgeNodeConfigurationGetEdgeviewClientScriptForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this edge node configuration get edgeview client script forbidden response a status code equal to that given
func (o *EdgeNodeConfigurationGetEdgeviewClientScriptForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *EdgeNodeConfigurationGetEdgeviewClientScriptForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/devices/id/{id}/edgeview/clientscript][%d] edgeNodeConfigurationGetEdgeviewClientScriptForbidden  %+v", 403, o.Payload)
}

func (o *EdgeNodeConfigurationGetEdgeviewClientScriptForbidden) String() string {
	return fmt.Sprintf("[GET /v1/devices/id/{id}/edgeview/clientscript][%d] edgeNodeConfigurationGetEdgeviewClientScriptForbidden  %+v", 403, o.Payload)
}

func (o *EdgeNodeConfigurationGetEdgeviewClientScriptForbidden) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationGetEdgeviewClientScriptForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationGetEdgeviewClientScriptNotFound creates a EdgeNodeConfigurationGetEdgeviewClientScriptNotFound with default headers values
func NewEdgeNodeConfigurationGetEdgeviewClientScriptNotFound() *EdgeNodeConfigurationGetEdgeviewClientScriptNotFound {
	return &EdgeNodeConfigurationGetEdgeviewClientScriptNotFound{}
}

/*
EdgeNodeConfigurationGetEdgeviewClientScriptNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type EdgeNodeConfigurationGetEdgeviewClientScriptNotFound struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this edge node configuration get edgeview client script not found response has a 2xx status code
func (o *EdgeNodeConfigurationGetEdgeviewClientScriptNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edge node configuration get edgeview client script not found response has a 3xx status code
func (o *EdgeNodeConfigurationGetEdgeviewClientScriptNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edge node configuration get edgeview client script not found response has a 4xx status code
func (o *EdgeNodeConfigurationGetEdgeviewClientScriptNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this edge node configuration get edgeview client script not found response has a 5xx status code
func (o *EdgeNodeConfigurationGetEdgeviewClientScriptNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this edge node configuration get edgeview client script not found response a status code equal to that given
func (o *EdgeNodeConfigurationGetEdgeviewClientScriptNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *EdgeNodeConfigurationGetEdgeviewClientScriptNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/devices/id/{id}/edgeview/clientscript][%d] edgeNodeConfigurationGetEdgeviewClientScriptNotFound  %+v", 404, o.Payload)
}

func (o *EdgeNodeConfigurationGetEdgeviewClientScriptNotFound) String() string {
	return fmt.Sprintf("[GET /v1/devices/id/{id}/edgeview/clientscript][%d] edgeNodeConfigurationGetEdgeviewClientScriptNotFound  %+v", 404, o.Payload)
}

func (o *EdgeNodeConfigurationGetEdgeviewClientScriptNotFound) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationGetEdgeviewClientScriptNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationGetEdgeviewClientScriptInternalServerError creates a EdgeNodeConfigurationGetEdgeviewClientScriptInternalServerError with default headers values
func NewEdgeNodeConfigurationGetEdgeviewClientScriptInternalServerError() *EdgeNodeConfigurationGetEdgeviewClientScriptInternalServerError {
	return &EdgeNodeConfigurationGetEdgeviewClientScriptInternalServerError{}
}

/*
EdgeNodeConfigurationGetEdgeviewClientScriptInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type EdgeNodeConfigurationGetEdgeviewClientScriptInternalServerError struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this edge node configuration get edgeview client script internal server error response has a 2xx status code
func (o *EdgeNodeConfigurationGetEdgeviewClientScriptInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edge node configuration get edgeview client script internal server error response has a 3xx status code
func (o *EdgeNodeConfigurationGetEdgeviewClientScriptInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edge node configuration get edgeview client script internal server error response has a 4xx status code
func (o *EdgeNodeConfigurationGetEdgeviewClientScriptInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this edge node configuration get edgeview client script internal server error response has a 5xx status code
func (o *EdgeNodeConfigurationGetEdgeviewClientScriptInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this edge node configuration get edgeview client script internal server error response a status code equal to that given
func (o *EdgeNodeConfigurationGetEdgeviewClientScriptInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *EdgeNodeConfigurationGetEdgeviewClientScriptInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/devices/id/{id}/edgeview/clientscript][%d] edgeNodeConfigurationGetEdgeviewClientScriptInternalServerError  %+v", 500, o.Payload)
}

func (o *EdgeNodeConfigurationGetEdgeviewClientScriptInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/devices/id/{id}/edgeview/clientscript][%d] edgeNodeConfigurationGetEdgeviewClientScriptInternalServerError  %+v", 500, o.Payload)
}

func (o *EdgeNodeConfigurationGetEdgeviewClientScriptInternalServerError) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationGetEdgeviewClientScriptInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationGetEdgeviewClientScriptGatewayTimeout creates a EdgeNodeConfigurationGetEdgeviewClientScriptGatewayTimeout with default headers values
func NewEdgeNodeConfigurationGetEdgeviewClientScriptGatewayTimeout() *EdgeNodeConfigurationGetEdgeviewClientScriptGatewayTimeout {
	return &EdgeNodeConfigurationGetEdgeviewClientScriptGatewayTimeout{}
}

/*
EdgeNodeConfigurationGetEdgeviewClientScriptGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type EdgeNodeConfigurationGetEdgeviewClientScriptGatewayTimeout struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this edge node configuration get edgeview client script gateway timeout response has a 2xx status code
func (o *EdgeNodeConfigurationGetEdgeviewClientScriptGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edge node configuration get edgeview client script gateway timeout response has a 3xx status code
func (o *EdgeNodeConfigurationGetEdgeviewClientScriptGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edge node configuration get edgeview client script gateway timeout response has a 4xx status code
func (o *EdgeNodeConfigurationGetEdgeviewClientScriptGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this edge node configuration get edgeview client script gateway timeout response has a 5xx status code
func (o *EdgeNodeConfigurationGetEdgeviewClientScriptGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this edge node configuration get edgeview client script gateway timeout response a status code equal to that given
func (o *EdgeNodeConfigurationGetEdgeviewClientScriptGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *EdgeNodeConfigurationGetEdgeviewClientScriptGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/devices/id/{id}/edgeview/clientscript][%d] edgeNodeConfigurationGetEdgeviewClientScriptGatewayTimeout  %+v", 504, o.Payload)
}

func (o *EdgeNodeConfigurationGetEdgeviewClientScriptGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /v1/devices/id/{id}/edgeview/clientscript][%d] edgeNodeConfigurationGetEdgeviewClientScriptGatewayTimeout  %+v", 504, o.Payload)
}

func (o *EdgeNodeConfigurationGetEdgeviewClientScriptGatewayTimeout) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationGetEdgeviewClientScriptGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationGetEdgeviewClientScriptDefault creates a EdgeNodeConfigurationGetEdgeviewClientScriptDefault with default headers values
func NewEdgeNodeConfigurationGetEdgeviewClientScriptDefault(code int) *EdgeNodeConfigurationGetEdgeviewClientScriptDefault {
	return &EdgeNodeConfigurationGetEdgeviewClientScriptDefault{
		_statusCode: code,
	}
}

/*
EdgeNodeConfigurationGetEdgeviewClientScriptDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type EdgeNodeConfigurationGetEdgeviewClientScriptDefault struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// Code gets the status code for the edge node configuration get edgeview client script default response
func (o *EdgeNodeConfigurationGetEdgeviewClientScriptDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this edge node configuration get edgeview client script default response has a 2xx status code
func (o *EdgeNodeConfigurationGetEdgeviewClientScriptDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this edge node configuration get edgeview client script default response has a 3xx status code
func (o *EdgeNodeConfigurationGetEdgeviewClientScriptDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this edge node configuration get edgeview client script default response has a 4xx status code
func (o *EdgeNodeConfigurationGetEdgeviewClientScriptDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this edge node configuration get edgeview client script default response has a 5xx status code
func (o *EdgeNodeConfigurationGetEdgeviewClientScriptDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this edge node configuration get edgeview client script default response a status code equal to that given
func (o *EdgeNodeConfigurationGetEdgeviewClientScriptDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *EdgeNodeConfigurationGetEdgeviewClientScriptDefault) Error() string {
	return fmt.Sprintf("[GET /v1/devices/id/{id}/edgeview/clientscript][%d] EdgeNodeConfiguration_GetEdgeviewClientScript default  %+v", o._statusCode, o.Payload)
}

func (o *EdgeNodeConfigurationGetEdgeviewClientScriptDefault) String() string {
	return fmt.Sprintf("[GET /v1/devices/id/{id}/edgeview/clientscript][%d] EdgeNodeConfiguration_GetEdgeviewClientScript default  %+v", o._statusCode, o.Payload)
}

func (o *EdgeNodeConfigurationGetEdgeviewClientScriptDefault) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *EdgeNodeConfigurationGetEdgeviewClientScriptDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
