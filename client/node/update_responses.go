package node

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/terraform-provider-zedcloud/models"
)

// EdgeNodeConfigurationUpdateEdgeNodeReader is a Reader for the EdgeNodeConfigurationUpdateEdgeNode structure.
type EdgeNodeConfigurationUpdateEdgeNodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EdgeNodeConfigurationUpdateEdgeNodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewEdgeNodeConfigurationUpdateEdgeNodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewEdgeNodeConfigurationUpdateEdgeNodeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewEdgeNodeConfigurationUpdateEdgeNodeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewEdgeNodeConfigurationUpdateEdgeNodeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewEdgeNodeConfigurationUpdateEdgeNodeConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewEdgeNodeConfigurationUpdateEdgeNodeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewEdgeNodeConfigurationUpdateEdgeNodeGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewEdgeNodeConfigurationUpdateEdgeNodeDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewEdgeNodeConfigurationUpdateEdgeNodeOK creates a EdgeNodeConfigurationUpdateEdgeNodeOK with default headers values
func NewEdgeNodeConfigurationUpdateEdgeNodeOK() *EdgeNodeConfigurationUpdateEdgeNodeOK {
	return &EdgeNodeConfigurationUpdateEdgeNodeOK{}
}

/*
EdgeNodeConfigurationUpdateEdgeNodeOK describes a response with status code 200, with default header values.

A successful response.
*/
type EdgeNodeConfigurationUpdateEdgeNodeOK struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this edge node configuration update edge node o k response has a 2xx status code
func (o *EdgeNodeConfigurationUpdateEdgeNodeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this edge node configuration update edge node o k response has a 3xx status code
func (o *EdgeNodeConfigurationUpdateEdgeNodeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edge node configuration update edge node o k response has a 4xx status code
func (o *EdgeNodeConfigurationUpdateEdgeNodeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this edge node configuration update edge node o k response has a 5xx status code
func (o *EdgeNodeConfigurationUpdateEdgeNodeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this edge node configuration update edge node o k response a status code equal to that given
func (o *EdgeNodeConfigurationUpdateEdgeNodeOK) IsCode(code int) bool {
	return code == 200
}

func (o *EdgeNodeConfigurationUpdateEdgeNodeOK) Error() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}][%d] edgeNodeConfigurationUpdateEdgeNodeOK  %+v", 200, o.Payload)
}

func (o *EdgeNodeConfigurationUpdateEdgeNodeOK) String() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}][%d] edgeNodeConfigurationUpdateEdgeNodeOK  %+v", 200, o.Payload)
}

func (o *EdgeNodeConfigurationUpdateEdgeNodeOK) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationUpdateEdgeNodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationUpdateEdgeNodeUnauthorized creates a EdgeNodeConfigurationUpdateEdgeNodeUnauthorized with default headers values
func NewEdgeNodeConfigurationUpdateEdgeNodeUnauthorized() *EdgeNodeConfigurationUpdateEdgeNodeUnauthorized {
	return &EdgeNodeConfigurationUpdateEdgeNodeUnauthorized{}
}

/*
EdgeNodeConfigurationUpdateEdgeNodeUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type EdgeNodeConfigurationUpdateEdgeNodeUnauthorized struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this edge node configuration update edge node unauthorized response has a 2xx status code
func (o *EdgeNodeConfigurationUpdateEdgeNodeUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edge node configuration update edge node unauthorized response has a 3xx status code
func (o *EdgeNodeConfigurationUpdateEdgeNodeUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edge node configuration update edge node unauthorized response has a 4xx status code
func (o *EdgeNodeConfigurationUpdateEdgeNodeUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this edge node configuration update edge node unauthorized response has a 5xx status code
func (o *EdgeNodeConfigurationUpdateEdgeNodeUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this edge node configuration update edge node unauthorized response a status code equal to that given
func (o *EdgeNodeConfigurationUpdateEdgeNodeUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *EdgeNodeConfigurationUpdateEdgeNodeUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}][%d] edgeNodeConfigurationUpdateEdgeNodeUnauthorized  %+v", 401, o.Payload)
}

func (o *EdgeNodeConfigurationUpdateEdgeNodeUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}][%d] edgeNodeConfigurationUpdateEdgeNodeUnauthorized  %+v", 401, o.Payload)
}

func (o *EdgeNodeConfigurationUpdateEdgeNodeUnauthorized) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationUpdateEdgeNodeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationUpdateEdgeNodeForbidden creates a EdgeNodeConfigurationUpdateEdgeNodeForbidden with default headers values
func NewEdgeNodeConfigurationUpdateEdgeNodeForbidden() *EdgeNodeConfigurationUpdateEdgeNodeForbidden {
	return &EdgeNodeConfigurationUpdateEdgeNodeForbidden{}
}

/*
EdgeNodeConfigurationUpdateEdgeNodeForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type EdgeNodeConfigurationUpdateEdgeNodeForbidden struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this edge node configuration update edge node forbidden response has a 2xx status code
func (o *EdgeNodeConfigurationUpdateEdgeNodeForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edge node configuration update edge node forbidden response has a 3xx status code
func (o *EdgeNodeConfigurationUpdateEdgeNodeForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edge node configuration update edge node forbidden response has a 4xx status code
func (o *EdgeNodeConfigurationUpdateEdgeNodeForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this edge node configuration update edge node forbidden response has a 5xx status code
func (o *EdgeNodeConfigurationUpdateEdgeNodeForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this edge node configuration update edge node forbidden response a status code equal to that given
func (o *EdgeNodeConfigurationUpdateEdgeNodeForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *EdgeNodeConfigurationUpdateEdgeNodeForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}][%d] edgeNodeConfigurationUpdateEdgeNodeForbidden  %+v", 403, o.Payload)
}

func (o *EdgeNodeConfigurationUpdateEdgeNodeForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}][%d] edgeNodeConfigurationUpdateEdgeNodeForbidden  %+v", 403, o.Payload)
}

func (o *EdgeNodeConfigurationUpdateEdgeNodeForbidden) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationUpdateEdgeNodeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationUpdateEdgeNodeNotFound creates a EdgeNodeConfigurationUpdateEdgeNodeNotFound with default headers values
func NewEdgeNodeConfigurationUpdateEdgeNodeNotFound() *EdgeNodeConfigurationUpdateEdgeNodeNotFound {
	return &EdgeNodeConfigurationUpdateEdgeNodeNotFound{}
}

/*
EdgeNodeConfigurationUpdateEdgeNodeNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type EdgeNodeConfigurationUpdateEdgeNodeNotFound struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this edge node configuration update edge node not found response has a 2xx status code
func (o *EdgeNodeConfigurationUpdateEdgeNodeNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edge node configuration update edge node not found response has a 3xx status code
func (o *EdgeNodeConfigurationUpdateEdgeNodeNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edge node configuration update edge node not found response has a 4xx status code
func (o *EdgeNodeConfigurationUpdateEdgeNodeNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this edge node configuration update edge node not found response has a 5xx status code
func (o *EdgeNodeConfigurationUpdateEdgeNodeNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this edge node configuration update edge node not found response a status code equal to that given
func (o *EdgeNodeConfigurationUpdateEdgeNodeNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *EdgeNodeConfigurationUpdateEdgeNodeNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}][%d] edgeNodeConfigurationUpdateEdgeNodeNotFound  %+v", 404, o.Payload)
}

func (o *EdgeNodeConfigurationUpdateEdgeNodeNotFound) String() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}][%d] edgeNodeConfigurationUpdateEdgeNodeNotFound  %+v", 404, o.Payload)
}

func (o *EdgeNodeConfigurationUpdateEdgeNodeNotFound) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationUpdateEdgeNodeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationUpdateEdgeNodeConflict creates a EdgeNodeConfigurationUpdateEdgeNodeConflict with default headers values
func NewEdgeNodeConfigurationUpdateEdgeNodeConflict() *EdgeNodeConfigurationUpdateEdgeNodeConflict {
	return &EdgeNodeConfigurationUpdateEdgeNodeConflict{}
}

/*
EdgeNodeConfigurationUpdateEdgeNodeConflict describes a response with status code 409, with default header values.

Conflict. The API gateway did not process the request because this operation will conflict with an already existing edge node record.
*/
type EdgeNodeConfigurationUpdateEdgeNodeConflict struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this edge node configuration update edge node conflict response has a 2xx status code
func (o *EdgeNodeConfigurationUpdateEdgeNodeConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edge node configuration update edge node conflict response has a 3xx status code
func (o *EdgeNodeConfigurationUpdateEdgeNodeConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edge node configuration update edge node conflict response has a 4xx status code
func (o *EdgeNodeConfigurationUpdateEdgeNodeConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this edge node configuration update edge node conflict response has a 5xx status code
func (o *EdgeNodeConfigurationUpdateEdgeNodeConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this edge node configuration update edge node conflict response a status code equal to that given
func (o *EdgeNodeConfigurationUpdateEdgeNodeConflict) IsCode(code int) bool {
	return code == 409
}

func (o *EdgeNodeConfigurationUpdateEdgeNodeConflict) Error() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}][%d] edgeNodeConfigurationUpdateEdgeNodeConflict  %+v", 409, o.Payload)
}

func (o *EdgeNodeConfigurationUpdateEdgeNodeConflict) String() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}][%d] edgeNodeConfigurationUpdateEdgeNodeConflict  %+v", 409, o.Payload)
}

func (o *EdgeNodeConfigurationUpdateEdgeNodeConflict) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationUpdateEdgeNodeConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationUpdateEdgeNodeInternalServerError creates a EdgeNodeConfigurationUpdateEdgeNodeInternalServerError with default headers values
func NewEdgeNodeConfigurationUpdateEdgeNodeInternalServerError() *EdgeNodeConfigurationUpdateEdgeNodeInternalServerError {
	return &EdgeNodeConfigurationUpdateEdgeNodeInternalServerError{}
}

/*
EdgeNodeConfigurationUpdateEdgeNodeInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type EdgeNodeConfigurationUpdateEdgeNodeInternalServerError struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this edge node configuration update edge node internal server error response has a 2xx status code
func (o *EdgeNodeConfigurationUpdateEdgeNodeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edge node configuration update edge node internal server error response has a 3xx status code
func (o *EdgeNodeConfigurationUpdateEdgeNodeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edge node configuration update edge node internal server error response has a 4xx status code
func (o *EdgeNodeConfigurationUpdateEdgeNodeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this edge node configuration update edge node internal server error response has a 5xx status code
func (o *EdgeNodeConfigurationUpdateEdgeNodeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this edge node configuration update edge node internal server error response a status code equal to that given
func (o *EdgeNodeConfigurationUpdateEdgeNodeInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *EdgeNodeConfigurationUpdateEdgeNodeInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}][%d] edgeNodeConfigurationUpdateEdgeNodeInternalServerError  %+v", 500, o.Payload)
}

func (o *EdgeNodeConfigurationUpdateEdgeNodeInternalServerError) String() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}][%d] edgeNodeConfigurationUpdateEdgeNodeInternalServerError  %+v", 500, o.Payload)
}

func (o *EdgeNodeConfigurationUpdateEdgeNodeInternalServerError) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationUpdateEdgeNodeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationUpdateEdgeNodeGatewayTimeout creates a EdgeNodeConfigurationUpdateEdgeNodeGatewayTimeout with default headers values
func NewEdgeNodeConfigurationUpdateEdgeNodeGatewayTimeout() *EdgeNodeConfigurationUpdateEdgeNodeGatewayTimeout {
	return &EdgeNodeConfigurationUpdateEdgeNodeGatewayTimeout{}
}

/*
EdgeNodeConfigurationUpdateEdgeNodeGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type EdgeNodeConfigurationUpdateEdgeNodeGatewayTimeout struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this edge node configuration update edge node gateway timeout response has a 2xx status code
func (o *EdgeNodeConfigurationUpdateEdgeNodeGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edge node configuration update edge node gateway timeout response has a 3xx status code
func (o *EdgeNodeConfigurationUpdateEdgeNodeGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edge node configuration update edge node gateway timeout response has a 4xx status code
func (o *EdgeNodeConfigurationUpdateEdgeNodeGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this edge node configuration update edge node gateway timeout response has a 5xx status code
func (o *EdgeNodeConfigurationUpdateEdgeNodeGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this edge node configuration update edge node gateway timeout response a status code equal to that given
func (o *EdgeNodeConfigurationUpdateEdgeNodeGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *EdgeNodeConfigurationUpdateEdgeNodeGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}][%d] edgeNodeConfigurationUpdateEdgeNodeGatewayTimeout  %+v", 504, o.Payload)
}

func (o *EdgeNodeConfigurationUpdateEdgeNodeGatewayTimeout) String() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}][%d] edgeNodeConfigurationUpdateEdgeNodeGatewayTimeout  %+v", 504, o.Payload)
}

func (o *EdgeNodeConfigurationUpdateEdgeNodeGatewayTimeout) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *EdgeNodeConfigurationUpdateEdgeNodeGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEdgeNodeConfigurationUpdateEdgeNodeDefault creates a EdgeNodeConfigurationUpdateEdgeNodeDefault with default headers values
func NewEdgeNodeConfigurationUpdateEdgeNodeDefault(code int) *EdgeNodeConfigurationUpdateEdgeNodeDefault {
	return &EdgeNodeConfigurationUpdateEdgeNodeDefault{
		_statusCode: code,
	}
}

/*
EdgeNodeConfigurationUpdateEdgeNodeDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type EdgeNodeConfigurationUpdateEdgeNodeDefault struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// Code gets the status code for the edge node configuration update edge node default response
func (o *EdgeNodeConfigurationUpdateEdgeNodeDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this edge node configuration update edge node default response has a 2xx status code
func (o *EdgeNodeConfigurationUpdateEdgeNodeDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this edge node configuration update edge node default response has a 3xx status code
func (o *EdgeNodeConfigurationUpdateEdgeNodeDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this edge node configuration update edge node default response has a 4xx status code
func (o *EdgeNodeConfigurationUpdateEdgeNodeDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this edge node configuration update edge node default response has a 5xx status code
func (o *EdgeNodeConfigurationUpdateEdgeNodeDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this edge node configuration update edge node default response a status code equal to that given
func (o *EdgeNodeConfigurationUpdateEdgeNodeDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *EdgeNodeConfigurationUpdateEdgeNodeDefault) Error() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}][%d] EdgeNodeConfiguration_UpdateEdgeNode default  %+v", o._statusCode, o.Payload)
}

func (o *EdgeNodeConfigurationUpdateEdgeNodeDefault) String() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}][%d] EdgeNodeConfiguration_UpdateEdgeNode default  %+v", o._statusCode, o.Payload)
}

func (o *EdgeNodeConfigurationUpdateEdgeNodeDefault) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *EdgeNodeConfigurationUpdateEdgeNodeDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
