// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/terraform-provider/models"
)

// ProjectDeleteReader is a Reader for the ProjectDelete structure.
type ProjectDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProjectDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProjectDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewProjectDeleteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewProjectDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewProjectDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewProjectDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewProjectDeleteGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewProjectDeleteDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewProjectDeleteOK creates a ProjectDeleteOK with default headers values
func NewProjectDeleteOK() *ProjectDeleteOK {
	return &ProjectDeleteOK{}
}

/*
ProjectDeleteOK describes a response with status code 200, with default header values.

A successful response.
*/
type ProjectDeleteOK struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this project delete o k response has a 2xx status code
func (o *ProjectDeleteOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this project delete o k response has a 3xx status code
func (o *ProjectDeleteOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project delete o k response has a 4xx status code
func (o *ProjectDeleteOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this project delete o k response has a 5xx status code
func (o *ProjectDeleteOK) IsServerError() bool {
	return false
}

// IsCode returns true when this project delete o k response a status code equal to that given
func (o *ProjectDeleteOK) IsCode(code int) bool {
	return code == 200
}

func (o *ProjectDeleteOK) Error() string {
	return fmt.Sprintf("[DELETE /v1/projects/id/{id}][%d] projectDeleteOK  %+v", 200, o.Payload)
}

func (o *ProjectDeleteOK) String() string {
	return fmt.Sprintf("[DELETE /v1/projects/id/{id}][%d] projectDeleteOK  %+v", 200, o.Payload)
}

func (o *ProjectDeleteOK) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ProjectDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectDeleteUnauthorized creates a ProjectDeleteUnauthorized with default headers values
func NewProjectDeleteUnauthorized() *ProjectDeleteUnauthorized {
	return &ProjectDeleteUnauthorized{}
}

/*
ProjectDeleteUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type ProjectDeleteUnauthorized struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this project delete unauthorized response has a 2xx status code
func (o *ProjectDeleteUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project delete unauthorized response has a 3xx status code
func (o *ProjectDeleteUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project delete unauthorized response has a 4xx status code
func (o *ProjectDeleteUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this project delete unauthorized response has a 5xx status code
func (o *ProjectDeleteUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this project delete unauthorized response a status code equal to that given
func (o *ProjectDeleteUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ProjectDeleteUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /v1/projects/id/{id}][%d] projectDeleteUnauthorized  %+v", 401, o.Payload)
}

func (o *ProjectDeleteUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /v1/projects/id/{id}][%d] projectDeleteUnauthorized  %+v", 401, o.Payload)
}

func (o *ProjectDeleteUnauthorized) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ProjectDeleteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectDeleteForbidden creates a ProjectDeleteForbidden with default headers values
func NewProjectDeleteForbidden() *ProjectDeleteForbidden {
	return &ProjectDeleteForbidden{}
}

/*
ProjectDeleteForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the request or does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type ProjectDeleteForbidden struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this project delete forbidden response has a 2xx status code
func (o *ProjectDeleteForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project delete forbidden response has a 3xx status code
func (o *ProjectDeleteForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project delete forbidden response has a 4xx status code
func (o *ProjectDeleteForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this project delete forbidden response has a 5xx status code
func (o *ProjectDeleteForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this project delete forbidden response a status code equal to that given
func (o *ProjectDeleteForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ProjectDeleteForbidden) Error() string {
	return fmt.Sprintf("[DELETE /v1/projects/id/{id}][%d] projectDeleteForbidden  %+v", 403, o.Payload)
}

func (o *ProjectDeleteForbidden) String() string {
	return fmt.Sprintf("[DELETE /v1/projects/id/{id}][%d] projectDeleteForbidden  %+v", 403, o.Payload)
}

func (o *ProjectDeleteForbidden) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ProjectDeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectDeleteNotFound creates a ProjectDeleteNotFound with default headers values
func NewProjectDeleteNotFound() *ProjectDeleteNotFound {
	return &ProjectDeleteNotFound{}
}

/*
ProjectDeleteNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type ProjectDeleteNotFound struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this project delete not found response has a 2xx status code
func (o *ProjectDeleteNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project delete not found response has a 3xx status code
func (o *ProjectDeleteNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project delete not found response has a 4xx status code
func (o *ProjectDeleteNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this project delete not found response has a 5xx status code
func (o *ProjectDeleteNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this project delete not found response a status code equal to that given
func (o *ProjectDeleteNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ProjectDeleteNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/projects/id/{id}][%d] projectDeleteNotFound  %+v", 404, o.Payload)
}

func (o *ProjectDeleteNotFound) String() string {
	return fmt.Sprintf("[DELETE /v1/projects/id/{id}][%d] projectDeleteNotFound  %+v", 404, o.Payload)
}

func (o *ProjectDeleteNotFound) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ProjectDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectDeleteInternalServerError creates a ProjectDeleteInternalServerError with default headers values
func NewProjectDeleteInternalServerError() *ProjectDeleteInternalServerError {
	return &ProjectDeleteInternalServerError{}
}

/*
ProjectDeleteInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type ProjectDeleteInternalServerError struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this project delete internal server error response has a 2xx status code
func (o *ProjectDeleteInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project delete internal server error response has a 3xx status code
func (o *ProjectDeleteInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project delete internal server error response has a 4xx status code
func (o *ProjectDeleteInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this project delete internal server error response has a 5xx status code
func (o *ProjectDeleteInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this project delete internal server error response a status code equal to that given
func (o *ProjectDeleteInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ProjectDeleteInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /v1/projects/id/{id}][%d] projectDeleteInternalServerError  %+v", 500, o.Payload)
}

func (o *ProjectDeleteInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /v1/projects/id/{id}][%d] projectDeleteInternalServerError  %+v", 500, o.Payload)
}

func (o *ProjectDeleteInternalServerError) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ProjectDeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectDeleteGatewayTimeout creates a ProjectDeleteGatewayTimeout with default headers values
func NewProjectDeleteGatewayTimeout() *ProjectDeleteGatewayTimeout {
	return &ProjectDeleteGatewayTimeout{}
}

/*
ProjectDeleteGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type ProjectDeleteGatewayTimeout struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this project delete gateway timeout response has a 2xx status code
func (o *ProjectDeleteGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project delete gateway timeout response has a 3xx status code
func (o *ProjectDeleteGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project delete gateway timeout response has a 4xx status code
func (o *ProjectDeleteGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this project delete gateway timeout response has a 5xx status code
func (o *ProjectDeleteGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this project delete gateway timeout response a status code equal to that given
func (o *ProjectDeleteGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *ProjectDeleteGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /v1/projects/id/{id}][%d] projectDeleteGatewayTimeout  %+v", 504, o.Payload)
}

func (o *ProjectDeleteGatewayTimeout) String() string {
	return fmt.Sprintf("[DELETE /v1/projects/id/{id}][%d] projectDeleteGatewayTimeout  %+v", 504, o.Payload)
}

func (o *ProjectDeleteGatewayTimeout) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ProjectDeleteGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectDeleteDefault creates a ProjectDeleteDefault with default headers values
func NewProjectDeleteDefault(code int) *ProjectDeleteDefault {
	return &ProjectDeleteDefault{
		_statusCode: code,
	}
}

/*
ProjectDeleteDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ProjectDeleteDefault struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// Code gets the status code for the project delete default response
func (o *ProjectDeleteDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this project delete default response has a 2xx status code
func (o *ProjectDeleteDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this project delete default response has a 3xx status code
func (o *ProjectDeleteDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this project delete default response has a 4xx status code
func (o *ProjectDeleteDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this project delete default response has a 5xx status code
func (o *ProjectDeleteDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this project delete default response a status code equal to that given
func (o *ProjectDeleteDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *ProjectDeleteDefault) Error() string {
	return fmt.Sprintf("[DELETE /v1/projects/id/{id}][%d] Project_Delete default  %+v", o._statusCode, o.Payload)
}

func (o *ProjectDeleteDefault) String() string {
	return fmt.Sprintf("[DELETE /v1/projects/id/{id}][%d] Project_Delete default  %+v", o._statusCode, o.Payload)
}

func (o *ProjectDeleteDefault) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *ProjectDeleteDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
