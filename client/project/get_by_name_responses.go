// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/terraform-provider/models"
)

// ProjectGetByNameReader is a Reader for the ProjectGetByName structure.
type ProjectGetByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProjectGetByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProjectGetByNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewProjectGetByNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewProjectGetByNameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewProjectGetByNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewProjectGetByNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewProjectGetByNameGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewProjectGetByNameDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewProjectGetByNameOK creates a ProjectGetByNameOK with default headers values
func NewProjectGetByNameOK() *ProjectGetByNameOK {
	return &ProjectGetByNameOK{}
}

/*
ProjectGetByNameOK describes a response with status code 200, with default header values.

A successful response.
*/
type ProjectGetByNameOK struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this project get by name o k response has a 2xx status code
func (o *ProjectGetByNameOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this project get by name o k response has a 3xx status code
func (o *ProjectGetByNameOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project get by name o k response has a 4xx status code
func (o *ProjectGetByNameOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this project get by name o k response has a 5xx status code
func (o *ProjectGetByNameOK) IsServerError() bool {
	return false
}

// IsCode returns true when this project get by name o k response a status code equal to that given
func (o *ProjectGetByNameOK) IsCode(code int) bool {
	return code == 200
}

func (o *ProjectGetByNameOK) Error() string {
	return fmt.Sprintf("[POST /v1/projects/name/{name}][%d] projectGetByNameOK  %+v", 200, o.Payload)
}

func (o *ProjectGetByNameOK) String() string {
	return fmt.Sprintf("[POST /v1/projects/name/{name}][%d] projectGetByNameOK  %+v", 200, o.Payload)
}

func (o *ProjectGetByNameOK) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ProjectGetByNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectGetByNameUnauthorized creates a ProjectGetByNameUnauthorized with default headers values
func NewProjectGetByNameUnauthorized() *ProjectGetByNameUnauthorized {
	return &ProjectGetByNameUnauthorized{}
}

/*
ProjectGetByNameUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type ProjectGetByNameUnauthorized struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this project get by name unauthorized response has a 2xx status code
func (o *ProjectGetByNameUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project get by name unauthorized response has a 3xx status code
func (o *ProjectGetByNameUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project get by name unauthorized response has a 4xx status code
func (o *ProjectGetByNameUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this project get by name unauthorized response has a 5xx status code
func (o *ProjectGetByNameUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this project get by name unauthorized response a status code equal to that given
func (o *ProjectGetByNameUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ProjectGetByNameUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/projects/name/{name}][%d] projectGetByNameUnauthorized  %+v", 401, o.Payload)
}

func (o *ProjectGetByNameUnauthorized) String() string {
	return fmt.Sprintf("[POST /v1/projects/name/{name}][%d] projectGetByNameUnauthorized  %+v", 401, o.Payload)
}

func (o *ProjectGetByNameUnauthorized) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ProjectGetByNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectGetByNameForbidden creates a ProjectGetByNameForbidden with default headers values
func NewProjectGetByNameForbidden() *ProjectGetByNameForbidden {
	return &ProjectGetByNameForbidden{}
}

/*
ProjectGetByNameForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the request or does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type ProjectGetByNameForbidden struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this project get by name forbidden response has a 2xx status code
func (o *ProjectGetByNameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project get by name forbidden response has a 3xx status code
func (o *ProjectGetByNameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project get by name forbidden response has a 4xx status code
func (o *ProjectGetByNameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this project get by name forbidden response has a 5xx status code
func (o *ProjectGetByNameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this project get by name forbidden response a status code equal to that given
func (o *ProjectGetByNameForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ProjectGetByNameForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/projects/name/{name}][%d] projectGetByNameForbidden  %+v", 403, o.Payload)
}

func (o *ProjectGetByNameForbidden) String() string {
	return fmt.Sprintf("[POST /v1/projects/name/{name}][%d] projectGetByNameForbidden  %+v", 403, o.Payload)
}

func (o *ProjectGetByNameForbidden) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ProjectGetByNameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectGetByNameNotFound creates a ProjectGetByNameNotFound with default headers values
func NewProjectGetByNameNotFound() *ProjectGetByNameNotFound {
	return &ProjectGetByNameNotFound{}
}

/*
ProjectGetByNameNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type ProjectGetByNameNotFound struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this project get by name not found response has a 2xx status code
func (o *ProjectGetByNameNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project get by name not found response has a 3xx status code
func (o *ProjectGetByNameNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project get by name not found response has a 4xx status code
func (o *ProjectGetByNameNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this project get by name not found response has a 5xx status code
func (o *ProjectGetByNameNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this project get by name not found response a status code equal to that given
func (o *ProjectGetByNameNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ProjectGetByNameNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/projects/name/{name}][%d] projectGetByNameNotFound  %+v", 404, o.Payload)
}

func (o *ProjectGetByNameNotFound) String() string {
	return fmt.Sprintf("[POST /v1/projects/name/{name}][%d] projectGetByNameNotFound  %+v", 404, o.Payload)
}

func (o *ProjectGetByNameNotFound) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ProjectGetByNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectGetByNameInternalServerError creates a ProjectGetByNameInternalServerError with default headers values
func NewProjectGetByNameInternalServerError() *ProjectGetByNameInternalServerError {
	return &ProjectGetByNameInternalServerError{}
}

/*
ProjectGetByNameInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type ProjectGetByNameInternalServerError struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this project get by name internal server error response has a 2xx status code
func (o *ProjectGetByNameInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project get by name internal server error response has a 3xx status code
func (o *ProjectGetByNameInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project get by name internal server error response has a 4xx status code
func (o *ProjectGetByNameInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this project get by name internal server error response has a 5xx status code
func (o *ProjectGetByNameInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this project get by name internal server error response a status code equal to that given
func (o *ProjectGetByNameInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ProjectGetByNameInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/projects/name/{name}][%d] projectGetByNameInternalServerError  %+v", 500, o.Payload)
}

func (o *ProjectGetByNameInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/projects/name/{name}][%d] projectGetByNameInternalServerError  %+v", 500, o.Payload)
}

func (o *ProjectGetByNameInternalServerError) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ProjectGetByNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectGetByNameGatewayTimeout creates a ProjectGetByNameGatewayTimeout with default headers values
func NewProjectGetByNameGatewayTimeout() *ProjectGetByNameGatewayTimeout {
	return &ProjectGetByNameGatewayTimeout{}
}

/*
ProjectGetByNameGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type ProjectGetByNameGatewayTimeout struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this project get by name gateway timeout response has a 2xx status code
func (o *ProjectGetByNameGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project get by name gateway timeout response has a 3xx status code
func (o *ProjectGetByNameGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project get by name gateway timeout response has a 4xx status code
func (o *ProjectGetByNameGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this project get by name gateway timeout response has a 5xx status code
func (o *ProjectGetByNameGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this project get by name gateway timeout response a status code equal to that given
func (o *ProjectGetByNameGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *ProjectGetByNameGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /v1/projects/name/{name}][%d] projectGetByNameGatewayTimeout  %+v", 504, o.Payload)
}

func (o *ProjectGetByNameGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /v1/projects/name/{name}][%d] projectGetByNameGatewayTimeout  %+v", 504, o.Payload)
}

func (o *ProjectGetByNameGatewayTimeout) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ProjectGetByNameGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectGetByNameDefault creates a ProjectGetByNameDefault with default headers values
func NewProjectGetByNameDefault(code int) *ProjectGetByNameDefault {
	return &ProjectGetByNameDefault{
		_statusCode: code,
	}
}

/*
ProjectGetByNameDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ProjectGetByNameDefault struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// Code gets the status code for the project get by name default response
func (o *ProjectGetByNameDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this project get by name default response has a 2xx status code
func (o *ProjectGetByNameDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this project get by name default response has a 3xx status code
func (o *ProjectGetByNameDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this project get by name default response has a 4xx status code
func (o *ProjectGetByNameDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this project get by name default response has a 5xx status code
func (o *ProjectGetByNameDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this project get by name default response a status code equal to that given
func (o *ProjectGetByNameDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *ProjectGetByNameDefault) Error() string {
	return fmt.Sprintf("[POST /v1/projects/name/{name}][%d] Project_GetByName default  %+v", o._statusCode, o.Payload)
}

func (o *ProjectGetByNameDefault) String() string {
	return fmt.Sprintf("[POST /v1/projects/name/{name}][%d] Project_GetByName default  %+v", o._statusCode, o.Payload)
}

func (o *ProjectGetByNameDefault) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *ProjectGetByNameDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
