// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/terraform-provider/models"
)

// ProjectCreateReader is a Reader for the ProjectCreate structure.
type ProjectCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProjectCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProjectCreateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewProjectCreateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewProjectCreateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewProjectCreateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewProjectCreateConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewProjectCreateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewProjectCreateGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewProjectCreateDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewProjectCreateOK creates a ProjectCreateOK with default headers values
func NewProjectCreateOK() *ProjectCreateOK {
	return &ProjectCreateOK{}
}

/*
ProjectCreateOK describes a response with status code 200, with default header values.

A successful response.
*/
type ProjectCreateOK struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this project create o k response has a 2xx status code
func (o *ProjectCreateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this project create o k response has a 3xx status code
func (o *ProjectCreateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project create o k response has a 4xx status code
func (o *ProjectCreateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this project create o k response has a 5xx status code
func (o *ProjectCreateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this project create o k response a status code equal to that given
func (o *ProjectCreateOK) IsCode(code int) bool {
	return code == 200
}

func (o *ProjectCreateOK) Error() string {
	return fmt.Sprintf("[POST /v1/projects][%d] projectCreateOK  %+v", 200, o.Payload)
}

func (o *ProjectCreateOK) String() string {
	return fmt.Sprintf("[POST /v1/projects][%d] projectCreateOK  %+v", 200, o.Payload)
}

func (o *ProjectCreateOK) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ProjectCreateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectCreateBadRequest creates a ProjectCreateBadRequest with default headers values
func NewProjectCreateBadRequest() *ProjectCreateBadRequest {
	return &ProjectCreateBadRequest{}
}

/*
ProjectCreateBadRequest describes a response with status code 400, with default header values.

Bad Request. The API gateway did not process the request because of missing parameter or invalid value of parameters.
*/
type ProjectCreateBadRequest struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this project create bad request response has a 2xx status code
func (o *ProjectCreateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project create bad request response has a 3xx status code
func (o *ProjectCreateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project create bad request response has a 4xx status code
func (o *ProjectCreateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this project create bad request response has a 5xx status code
func (o *ProjectCreateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this project create bad request response a status code equal to that given
func (o *ProjectCreateBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ProjectCreateBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/projects][%d] projectCreateBadRequest  %+v", 400, o.Payload)
}

func (o *ProjectCreateBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/projects][%d] projectCreateBadRequest  %+v", 400, o.Payload)
}

func (o *ProjectCreateBadRequest) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ProjectCreateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectCreateUnauthorized creates a ProjectCreateUnauthorized with default headers values
func NewProjectCreateUnauthorized() *ProjectCreateUnauthorized {
	return &ProjectCreateUnauthorized{}
}

/*
ProjectCreateUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type ProjectCreateUnauthorized struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this project create unauthorized response has a 2xx status code
func (o *ProjectCreateUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project create unauthorized response has a 3xx status code
func (o *ProjectCreateUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project create unauthorized response has a 4xx status code
func (o *ProjectCreateUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this project create unauthorized response has a 5xx status code
func (o *ProjectCreateUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this project create unauthorized response a status code equal to that given
func (o *ProjectCreateUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ProjectCreateUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/projects][%d] projectCreateUnauthorized  %+v", 401, o.Payload)
}

func (o *ProjectCreateUnauthorized) String() string {
	return fmt.Sprintf("[POST /v1/projects][%d] projectCreateUnauthorized  %+v", 401, o.Payload)
}

func (o *ProjectCreateUnauthorized) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ProjectCreateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectCreateForbidden creates a ProjectCreateForbidden with default headers values
func NewProjectCreateForbidden() *ProjectCreateForbidden {
	return &ProjectCreateForbidden{}
}

/*
ProjectCreateForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the request or does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type ProjectCreateForbidden struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this project create forbidden response has a 2xx status code
func (o *ProjectCreateForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project create forbidden response has a 3xx status code
func (o *ProjectCreateForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project create forbidden response has a 4xx status code
func (o *ProjectCreateForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this project create forbidden response has a 5xx status code
func (o *ProjectCreateForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this project create forbidden response a status code equal to that given
func (o *ProjectCreateForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ProjectCreateForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/projects][%d] projectCreateForbidden  %+v", 403, o.Payload)
}

func (o *ProjectCreateForbidden) String() string {
	return fmt.Sprintf("[POST /v1/projects][%d] projectCreateForbidden  %+v", 403, o.Payload)
}

func (o *ProjectCreateForbidden) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ProjectCreateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectCreateConflict creates a ProjectCreateConflict with default headers values
func NewProjectCreateConflict() *ProjectCreateConflict {
	return &ProjectCreateConflict{}
}

/*
ProjectCreateConflict describes a response with status code 409, with default header values.

Conflict. The API gateway did not process the request because this edge network record will conflict with an already existing edge network record.
*/
type ProjectCreateConflict struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this project create conflict response has a 2xx status code
func (o *ProjectCreateConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project create conflict response has a 3xx status code
func (o *ProjectCreateConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project create conflict response has a 4xx status code
func (o *ProjectCreateConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this project create conflict response has a 5xx status code
func (o *ProjectCreateConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this project create conflict response a status code equal to that given
func (o *ProjectCreateConflict) IsCode(code int) bool {
	return code == 409
}

func (o *ProjectCreateConflict) Error() string {
	return fmt.Sprintf("[POST /v1/projects][%d] projectCreateConflict  %+v", 409, o.Payload)
}

func (o *ProjectCreateConflict) String() string {
	return fmt.Sprintf("[POST /v1/projects][%d] projectCreateConflict  %+v", 409, o.Payload)
}

func (o *ProjectCreateConflict) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ProjectCreateConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectCreateInternalServerError creates a ProjectCreateInternalServerError with default headers values
func NewProjectCreateInternalServerError() *ProjectCreateInternalServerError {
	return &ProjectCreateInternalServerError{}
}

/*
ProjectCreateInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type ProjectCreateInternalServerError struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this project create internal server error response has a 2xx status code
func (o *ProjectCreateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project create internal server error response has a 3xx status code
func (o *ProjectCreateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project create internal server error response has a 4xx status code
func (o *ProjectCreateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this project create internal server error response has a 5xx status code
func (o *ProjectCreateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this project create internal server error response a status code equal to that given
func (o *ProjectCreateInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ProjectCreateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/projects][%d] projectCreateInternalServerError  %+v", 500, o.Payload)
}

func (o *ProjectCreateInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/projects][%d] projectCreateInternalServerError  %+v", 500, o.Payload)
}

func (o *ProjectCreateInternalServerError) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ProjectCreateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectCreateGatewayTimeout creates a ProjectCreateGatewayTimeout with default headers values
func NewProjectCreateGatewayTimeout() *ProjectCreateGatewayTimeout {
	return &ProjectCreateGatewayTimeout{}
}

/*
ProjectCreateGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type ProjectCreateGatewayTimeout struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this project create gateway timeout response has a 2xx status code
func (o *ProjectCreateGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project create gateway timeout response has a 3xx status code
func (o *ProjectCreateGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project create gateway timeout response has a 4xx status code
func (o *ProjectCreateGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this project create gateway timeout response has a 5xx status code
func (o *ProjectCreateGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this project create gateway timeout response a status code equal to that given
func (o *ProjectCreateGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *ProjectCreateGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /v1/projects][%d] projectCreateGatewayTimeout  %+v", 504, o.Payload)
}

func (o *ProjectCreateGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /v1/projects][%d] projectCreateGatewayTimeout  %+v", 504, o.Payload)
}

func (o *ProjectCreateGatewayTimeout) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ProjectCreateGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectCreateDefault creates a ProjectCreateDefault with default headers values
func NewProjectCreateDefault(code int) *ProjectCreateDefault {
	return &ProjectCreateDefault{
		_statusCode: code,
	}
}

/*
ProjectCreateDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ProjectCreateDefault struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// Code gets the status code for the project create default response
func (o *ProjectCreateDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this project create default response has a 2xx status code
func (o *ProjectCreateDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this project create default response has a 3xx status code
func (o *ProjectCreateDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this project create default response has a 4xx status code
func (o *ProjectCreateDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this project create default response has a 5xx status code
func (o *ProjectCreateDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this project create default response a status code equal to that given
func (o *ProjectCreateDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *ProjectCreateDefault) Error() string {
	return fmt.Sprintf("[POST /v1/projects][%d] Project_Create default  %+v", o._statusCode, o.Payload)
}

func (o *ProjectCreateDefault) String() string {
	return fmt.Sprintf("[POST /v1/projects][%d] Project_Create default  %+v", o._statusCode, o.Payload)
}

func (o *ProjectCreateDefault) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *ProjectCreateDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
