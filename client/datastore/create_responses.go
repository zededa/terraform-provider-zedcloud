package datastore

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/terraform-provider-zedcloud/models"
)

// DatastoreConfigurationCreateDatastoreReader is a Reader for the DatastoreConfigurationCreateDatastore structure.
type DatastoreConfigurationCreateDatastoreReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DatastoreConfigurationCreateDatastoreReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDatastoreConfigurationCreateDatastoreOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewDatastoreConfigurationCreateDatastoreCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDatastoreConfigurationCreateDatastoreBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDatastoreConfigurationCreateDatastoreUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDatastoreConfigurationCreateDatastoreForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDatastoreConfigurationCreateDatastoreConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDatastoreConfigurationCreateDatastoreInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDatastoreConfigurationCreateDatastoreGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDatastoreConfigurationCreateDatastoreDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDatastoreConfigurationCreateDatastoreOK creates a DatastoreConfigurationCreateDatastoreOK with default headers values
func NewDatastoreConfigurationCreateDatastoreOK() *DatastoreConfigurationCreateDatastoreOK {
	return &DatastoreConfigurationCreateDatastoreOK{}
}

/*
DatastoreConfigurationCreateDatastoreOK describes a response with status code 200, with default header values.

A successful response.
*/
type DatastoreConfigurationCreateDatastoreOK struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this datastore configuration create datastore o k response has a 2xx status code
func (o *DatastoreConfigurationCreateDatastoreOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this datastore configuration create datastore o k response has a 3xx status code
func (o *DatastoreConfigurationCreateDatastoreOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this datastore configuration create datastore o k response has a 4xx status code
func (o *DatastoreConfigurationCreateDatastoreOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this datastore configuration create datastore o k response has a 5xx status code
func (o *DatastoreConfigurationCreateDatastoreOK) IsServerError() bool {
	return false
}

// IsCode returns true when this datastore configuration create datastore o k response a status code equal to that given
func (o *DatastoreConfigurationCreateDatastoreOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the datastore configuration create datastore o k response
func (o *DatastoreConfigurationCreateDatastoreOK) Code() int {
	return 200
}

func (o *DatastoreConfigurationCreateDatastoreOK) Error() string {
	return fmt.Sprintf("[POST /v1/datastores][%d] datastoreConfigurationCreateDatastoreOK  %+v", 200, o.Payload)
}

func (o *DatastoreConfigurationCreateDatastoreOK) String() string {
	return fmt.Sprintf("[POST /v1/datastores][%d] datastoreConfigurationCreateDatastoreOK  %+v", 200, o.Payload)
}

func (o *DatastoreConfigurationCreateDatastoreOK) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *DatastoreConfigurationCreateDatastoreOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDatastoreConfigurationCreateDatastoreCreated creates a DatastoreConfigurationCreateDatastoreCreated with default headers values
func NewDatastoreConfigurationCreateDatastoreCreated() *DatastoreConfigurationCreateDatastoreCreated {
	return &DatastoreConfigurationCreateDatastoreCreated{}
}

/*
DatastoreConfigurationCreateDatastoreCreated describes a response with status code 201, with default header values.

Datastore created.
*/
type DatastoreConfigurationCreateDatastoreCreated struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this datastore configuration create datastore created response has a 2xx status code
func (o *DatastoreConfigurationCreateDatastoreCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this datastore configuration create datastore created response has a 3xx status code
func (o *DatastoreConfigurationCreateDatastoreCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this datastore configuration create datastore created response has a 4xx status code
func (o *DatastoreConfigurationCreateDatastoreCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this datastore configuration create datastore created response has a 5xx status code
func (o *DatastoreConfigurationCreateDatastoreCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this datastore configuration create datastore created response a status code equal to that given
func (o *DatastoreConfigurationCreateDatastoreCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the datastore configuration create datastore created response
func (o *DatastoreConfigurationCreateDatastoreCreated) Code() int {
	return 201
}

func (o *DatastoreConfigurationCreateDatastoreCreated) Error() string {
	return fmt.Sprintf("[POST /v1/datastores][%d] datastoreConfigurationCreateDatastoreCreated  %+v", 201, o.Payload)
}

func (o *DatastoreConfigurationCreateDatastoreCreated) String() string {
	return fmt.Sprintf("[POST /v1/datastores][%d] datastoreConfigurationCreateDatastoreCreated  %+v", 201, o.Payload)
}

func (o *DatastoreConfigurationCreateDatastoreCreated) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *DatastoreConfigurationCreateDatastoreCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDatastoreConfigurationCreateDatastoreBadRequest creates a DatastoreConfigurationCreateDatastoreBadRequest with default headers values
func NewDatastoreConfigurationCreateDatastoreBadRequest() *DatastoreConfigurationCreateDatastoreBadRequest {
	return &DatastoreConfigurationCreateDatastoreBadRequest{}
}

/*
DatastoreConfigurationCreateDatastoreBadRequest describes a response with status code 400, with default header values.

Bad Request. The API gateway did not process the request because of missing parameter or invalid value of parameters.
*/
type DatastoreConfigurationCreateDatastoreBadRequest struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this datastore configuration create datastore bad request response has a 2xx status code
func (o *DatastoreConfigurationCreateDatastoreBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this datastore configuration create datastore bad request response has a 3xx status code
func (o *DatastoreConfigurationCreateDatastoreBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this datastore configuration create datastore bad request response has a 4xx status code
func (o *DatastoreConfigurationCreateDatastoreBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this datastore configuration create datastore bad request response has a 5xx status code
func (o *DatastoreConfigurationCreateDatastoreBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this datastore configuration create datastore bad request response a status code equal to that given
func (o *DatastoreConfigurationCreateDatastoreBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the datastore configuration create datastore bad request response
func (o *DatastoreConfigurationCreateDatastoreBadRequest) Code() int {
	return 400
}

func (o *DatastoreConfigurationCreateDatastoreBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/datastores][%d] datastoreConfigurationCreateDatastoreBadRequest  %+v", 400, o.Payload)
}

func (o *DatastoreConfigurationCreateDatastoreBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/datastores][%d] datastoreConfigurationCreateDatastoreBadRequest  %+v", 400, o.Payload)
}

func (o *DatastoreConfigurationCreateDatastoreBadRequest) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *DatastoreConfigurationCreateDatastoreBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDatastoreConfigurationCreateDatastoreUnauthorized creates a DatastoreConfigurationCreateDatastoreUnauthorized with default headers values
func NewDatastoreConfigurationCreateDatastoreUnauthorized() *DatastoreConfigurationCreateDatastoreUnauthorized {
	return &DatastoreConfigurationCreateDatastoreUnauthorized{}
}

/*
DatastoreConfigurationCreateDatastoreUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type DatastoreConfigurationCreateDatastoreUnauthorized struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this datastore configuration create datastore unauthorized response has a 2xx status code
func (o *DatastoreConfigurationCreateDatastoreUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this datastore configuration create datastore unauthorized response has a 3xx status code
func (o *DatastoreConfigurationCreateDatastoreUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this datastore configuration create datastore unauthorized response has a 4xx status code
func (o *DatastoreConfigurationCreateDatastoreUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this datastore configuration create datastore unauthorized response has a 5xx status code
func (o *DatastoreConfigurationCreateDatastoreUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this datastore configuration create datastore unauthorized response a status code equal to that given
func (o *DatastoreConfigurationCreateDatastoreUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the datastore configuration create datastore unauthorized response
func (o *DatastoreConfigurationCreateDatastoreUnauthorized) Code() int {
	return 401
}

func (o *DatastoreConfigurationCreateDatastoreUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/datastores][%d] datastoreConfigurationCreateDatastoreUnauthorized  %+v", 401, o.Payload)
}

func (o *DatastoreConfigurationCreateDatastoreUnauthorized) String() string {
	return fmt.Sprintf("[POST /v1/datastores][%d] datastoreConfigurationCreateDatastoreUnauthorized  %+v", 401, o.Payload)
}

func (o *DatastoreConfigurationCreateDatastoreUnauthorized) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *DatastoreConfigurationCreateDatastoreUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDatastoreConfigurationCreateDatastoreForbidden creates a DatastoreConfigurationCreateDatastoreForbidden with default headers values
func NewDatastoreConfigurationCreateDatastoreForbidden() *DatastoreConfigurationCreateDatastoreForbidden {
	return &DatastoreConfigurationCreateDatastoreForbidden{}
}

/*
DatastoreConfigurationCreateDatastoreForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type DatastoreConfigurationCreateDatastoreForbidden struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this datastore configuration create datastore forbidden response has a 2xx status code
func (o *DatastoreConfigurationCreateDatastoreForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this datastore configuration create datastore forbidden response has a 3xx status code
func (o *DatastoreConfigurationCreateDatastoreForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this datastore configuration create datastore forbidden response has a 4xx status code
func (o *DatastoreConfigurationCreateDatastoreForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this datastore configuration create datastore forbidden response has a 5xx status code
func (o *DatastoreConfigurationCreateDatastoreForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this datastore configuration create datastore forbidden response a status code equal to that given
func (o *DatastoreConfigurationCreateDatastoreForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the datastore configuration create datastore forbidden response
func (o *DatastoreConfigurationCreateDatastoreForbidden) Code() int {
	return 403
}

func (o *DatastoreConfigurationCreateDatastoreForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/datastores][%d] datastoreConfigurationCreateDatastoreForbidden  %+v", 403, o.Payload)
}

func (o *DatastoreConfigurationCreateDatastoreForbidden) String() string {
	return fmt.Sprintf("[POST /v1/datastores][%d] datastoreConfigurationCreateDatastoreForbidden  %+v", 403, o.Payload)
}

func (o *DatastoreConfigurationCreateDatastoreForbidden) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *DatastoreConfigurationCreateDatastoreForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDatastoreConfigurationCreateDatastoreConflict creates a DatastoreConfigurationCreateDatastoreConflict with default headers values
func NewDatastoreConfigurationCreateDatastoreConflict() *DatastoreConfigurationCreateDatastoreConflict {
	return &DatastoreConfigurationCreateDatastoreConflict{}
}

/*
DatastoreConfigurationCreateDatastoreConflict describes a response with status code 409, with default header values.

Conflict. The API gateway did not process the request because this datastore record will conflict with an already existing datastore record.
*/
type DatastoreConfigurationCreateDatastoreConflict struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this datastore configuration create datastore conflict response has a 2xx status code
func (o *DatastoreConfigurationCreateDatastoreConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this datastore configuration create datastore conflict response has a 3xx status code
func (o *DatastoreConfigurationCreateDatastoreConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this datastore configuration create datastore conflict response has a 4xx status code
func (o *DatastoreConfigurationCreateDatastoreConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this datastore configuration create datastore conflict response has a 5xx status code
func (o *DatastoreConfigurationCreateDatastoreConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this datastore configuration create datastore conflict response a status code equal to that given
func (o *DatastoreConfigurationCreateDatastoreConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the datastore configuration create datastore conflict response
func (o *DatastoreConfigurationCreateDatastoreConflict) Code() int {
	return 409
}

func (o *DatastoreConfigurationCreateDatastoreConflict) Error() string {
	return fmt.Sprintf("[POST /v1/datastores][%d] datastoreConfigurationCreateDatastoreConflict  %+v", 409, o.Payload)
}

func (o *DatastoreConfigurationCreateDatastoreConflict) String() string {
	return fmt.Sprintf("[POST /v1/datastores][%d] datastoreConfigurationCreateDatastoreConflict  %+v", 409, o.Payload)
}

func (o *DatastoreConfigurationCreateDatastoreConflict) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *DatastoreConfigurationCreateDatastoreConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDatastoreConfigurationCreateDatastoreInternalServerError creates a DatastoreConfigurationCreateDatastoreInternalServerError with default headers values
func NewDatastoreConfigurationCreateDatastoreInternalServerError() *DatastoreConfigurationCreateDatastoreInternalServerError {
	return &DatastoreConfigurationCreateDatastoreInternalServerError{}
}

/*
DatastoreConfigurationCreateDatastoreInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type DatastoreConfigurationCreateDatastoreInternalServerError struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this datastore configuration create datastore internal server error response has a 2xx status code
func (o *DatastoreConfigurationCreateDatastoreInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this datastore configuration create datastore internal server error response has a 3xx status code
func (o *DatastoreConfigurationCreateDatastoreInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this datastore configuration create datastore internal server error response has a 4xx status code
func (o *DatastoreConfigurationCreateDatastoreInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this datastore configuration create datastore internal server error response has a 5xx status code
func (o *DatastoreConfigurationCreateDatastoreInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this datastore configuration create datastore internal server error response a status code equal to that given
func (o *DatastoreConfigurationCreateDatastoreInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the datastore configuration create datastore internal server error response
func (o *DatastoreConfigurationCreateDatastoreInternalServerError) Code() int {
	return 500
}

func (o *DatastoreConfigurationCreateDatastoreInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/datastores][%d] datastoreConfigurationCreateDatastoreInternalServerError  %+v", 500, o.Payload)
}

func (o *DatastoreConfigurationCreateDatastoreInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/datastores][%d] datastoreConfigurationCreateDatastoreInternalServerError  %+v", 500, o.Payload)
}

func (o *DatastoreConfigurationCreateDatastoreInternalServerError) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *DatastoreConfigurationCreateDatastoreInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDatastoreConfigurationCreateDatastoreGatewayTimeout creates a DatastoreConfigurationCreateDatastoreGatewayTimeout with default headers values
func NewDatastoreConfigurationCreateDatastoreGatewayTimeout() *DatastoreConfigurationCreateDatastoreGatewayTimeout {
	return &DatastoreConfigurationCreateDatastoreGatewayTimeout{}
}

/*
DatastoreConfigurationCreateDatastoreGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type DatastoreConfigurationCreateDatastoreGatewayTimeout struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this datastore configuration create datastore gateway timeout response has a 2xx status code
func (o *DatastoreConfigurationCreateDatastoreGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this datastore configuration create datastore gateway timeout response has a 3xx status code
func (o *DatastoreConfigurationCreateDatastoreGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this datastore configuration create datastore gateway timeout response has a 4xx status code
func (o *DatastoreConfigurationCreateDatastoreGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this datastore configuration create datastore gateway timeout response has a 5xx status code
func (o *DatastoreConfigurationCreateDatastoreGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this datastore configuration create datastore gateway timeout response a status code equal to that given
func (o *DatastoreConfigurationCreateDatastoreGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the datastore configuration create datastore gateway timeout response
func (o *DatastoreConfigurationCreateDatastoreGatewayTimeout) Code() int {
	return 504
}

func (o *DatastoreConfigurationCreateDatastoreGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /v1/datastores][%d] datastoreConfigurationCreateDatastoreGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DatastoreConfigurationCreateDatastoreGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /v1/datastores][%d] datastoreConfigurationCreateDatastoreGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DatastoreConfigurationCreateDatastoreGatewayTimeout) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *DatastoreConfigurationCreateDatastoreGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDatastoreConfigurationCreateDatastoreDefault creates a DatastoreConfigurationCreateDatastoreDefault with default headers values
func NewDatastoreConfigurationCreateDatastoreDefault(code int) *DatastoreConfigurationCreateDatastoreDefault {
	return &DatastoreConfigurationCreateDatastoreDefault{
		_statusCode: code,
	}
}

/*
DatastoreConfigurationCreateDatastoreDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type DatastoreConfigurationCreateDatastoreDefault struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// IsSuccess returns true when this datastore configuration create datastore default response has a 2xx status code
func (o *DatastoreConfigurationCreateDatastoreDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this datastore configuration create datastore default response has a 3xx status code
func (o *DatastoreConfigurationCreateDatastoreDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this datastore configuration create datastore default response has a 4xx status code
func (o *DatastoreConfigurationCreateDatastoreDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this datastore configuration create datastore default response has a 5xx status code
func (o *DatastoreConfigurationCreateDatastoreDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this datastore configuration create datastore default response a status code equal to that given
func (o *DatastoreConfigurationCreateDatastoreDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the datastore configuration create datastore default response
func (o *DatastoreConfigurationCreateDatastoreDefault) Code() int {
	return o._statusCode
}

func (o *DatastoreConfigurationCreateDatastoreDefault) Error() string {
	return fmt.Sprintf("[POST /v1/datastores][%d] DatastoreConfiguration_CreateDatastore default  %+v", o._statusCode, o.Payload)
}

func (o *DatastoreConfigurationCreateDatastoreDefault) String() string {
	return fmt.Sprintf("[POST /v1/datastores][%d] DatastoreConfiguration_CreateDatastore default  %+v", o._statusCode, o.Payload)
}

func (o *DatastoreConfigurationCreateDatastoreDefault) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *DatastoreConfigurationCreateDatastoreDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
