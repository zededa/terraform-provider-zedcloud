package image

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/terraform-provider-zedcloud/models"
)

// ImageConfigurationMarkEveImageLatestReader is a Reader for the ImageConfigurationMarkEveImageLatest structure.
type ImageConfigurationMarkEveImageLatestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ImageConfigurationMarkEveImageLatestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewImageConfigurationMarkEveImageLatestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewImageConfigurationMarkEveImageLatestBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewImageConfigurationMarkEveImageLatestUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewImageConfigurationMarkEveImageLatestForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewImageConfigurationMarkEveImageLatestNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewImageConfigurationMarkEveImageLatestInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewImageConfigurationMarkEveImageLatestGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewImageConfigurationMarkEveImageLatestDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewImageConfigurationMarkEveImageLatestOK creates a ImageConfigurationMarkEveImageLatestOK with default headers values
func NewImageConfigurationMarkEveImageLatestOK() *ImageConfigurationMarkEveImageLatestOK {
	return &ImageConfigurationMarkEveImageLatestOK{}
}

/*
ImageConfigurationMarkEveImageLatestOK describes a response with status code 200, with default header values.

A successful response.
*/
type ImageConfigurationMarkEveImageLatestOK struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this image configuration mark eve image latest o k response has a 2xx status code
func (o *ImageConfigurationMarkEveImageLatestOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this image configuration mark eve image latest o k response has a 3xx status code
func (o *ImageConfigurationMarkEveImageLatestOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this image configuration mark eve image latest o k response has a 4xx status code
func (o *ImageConfigurationMarkEveImageLatestOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this image configuration mark eve image latest o k response has a 5xx status code
func (o *ImageConfigurationMarkEveImageLatestOK) IsServerError() bool {
	return false
}

// IsCode returns true when this image configuration mark eve image latest o k response a status code equal to that given
func (o *ImageConfigurationMarkEveImageLatestOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the image configuration mark eve image latest o k response
func (o *ImageConfigurationMarkEveImageLatestOK) Code() int {
	return 200
}

func (o *ImageConfigurationMarkEveImageLatestOK) Error() string {
	return fmt.Sprintf("[PUT /v1/apps/images/baseos/latest][%d] imageConfigurationMarkEveImageLatestOK  %+v", 200, o.Payload)
}

func (o *ImageConfigurationMarkEveImageLatestOK) String() string {
	return fmt.Sprintf("[PUT /v1/apps/images/baseos/latest][%d] imageConfigurationMarkEveImageLatestOK  %+v", 200, o.Payload)
}

func (o *ImageConfigurationMarkEveImageLatestOK) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ImageConfigurationMarkEveImageLatestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageConfigurationMarkEveImageLatestBadRequest creates a ImageConfigurationMarkEveImageLatestBadRequest with default headers values
func NewImageConfigurationMarkEveImageLatestBadRequest() *ImageConfigurationMarkEveImageLatestBadRequest {
	return &ImageConfigurationMarkEveImageLatestBadRequest{}
}

/*
ImageConfigurationMarkEveImageLatestBadRequest describes a response with status code 400, with default header values.

Bad Request. The API gateway did not process the request because of missing parameter or invalid value of parameters.
*/
type ImageConfigurationMarkEveImageLatestBadRequest struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this image configuration mark eve image latest bad request response has a 2xx status code
func (o *ImageConfigurationMarkEveImageLatestBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this image configuration mark eve image latest bad request response has a 3xx status code
func (o *ImageConfigurationMarkEveImageLatestBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this image configuration mark eve image latest bad request response has a 4xx status code
func (o *ImageConfigurationMarkEveImageLatestBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this image configuration mark eve image latest bad request response has a 5xx status code
func (o *ImageConfigurationMarkEveImageLatestBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this image configuration mark eve image latest bad request response a status code equal to that given
func (o *ImageConfigurationMarkEveImageLatestBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the image configuration mark eve image latest bad request response
func (o *ImageConfigurationMarkEveImageLatestBadRequest) Code() int {
	return 400
}

func (o *ImageConfigurationMarkEveImageLatestBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/apps/images/baseos/latest][%d] imageConfigurationMarkEveImageLatestBadRequest  %+v", 400, o.Payload)
}

func (o *ImageConfigurationMarkEveImageLatestBadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/apps/images/baseos/latest][%d] imageConfigurationMarkEveImageLatestBadRequest  %+v", 400, o.Payload)
}

func (o *ImageConfigurationMarkEveImageLatestBadRequest) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ImageConfigurationMarkEveImageLatestBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageConfigurationMarkEveImageLatestUnauthorized creates a ImageConfigurationMarkEveImageLatestUnauthorized with default headers values
func NewImageConfigurationMarkEveImageLatestUnauthorized() *ImageConfigurationMarkEveImageLatestUnauthorized {
	return &ImageConfigurationMarkEveImageLatestUnauthorized{}
}

/*
ImageConfigurationMarkEveImageLatestUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type ImageConfigurationMarkEveImageLatestUnauthorized struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this image configuration mark eve image latest unauthorized response has a 2xx status code
func (o *ImageConfigurationMarkEveImageLatestUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this image configuration mark eve image latest unauthorized response has a 3xx status code
func (o *ImageConfigurationMarkEveImageLatestUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this image configuration mark eve image latest unauthorized response has a 4xx status code
func (o *ImageConfigurationMarkEveImageLatestUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this image configuration mark eve image latest unauthorized response has a 5xx status code
func (o *ImageConfigurationMarkEveImageLatestUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this image configuration mark eve image latest unauthorized response a status code equal to that given
func (o *ImageConfigurationMarkEveImageLatestUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the image configuration mark eve image latest unauthorized response
func (o *ImageConfigurationMarkEveImageLatestUnauthorized) Code() int {
	return 401
}

func (o *ImageConfigurationMarkEveImageLatestUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/apps/images/baseos/latest][%d] imageConfigurationMarkEveImageLatestUnauthorized  %+v", 401, o.Payload)
}

func (o *ImageConfigurationMarkEveImageLatestUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/apps/images/baseos/latest][%d] imageConfigurationMarkEveImageLatestUnauthorized  %+v", 401, o.Payload)
}

func (o *ImageConfigurationMarkEveImageLatestUnauthorized) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ImageConfigurationMarkEveImageLatestUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageConfigurationMarkEveImageLatestForbidden creates a ImageConfigurationMarkEveImageLatestForbidden with default headers values
func NewImageConfigurationMarkEveImageLatestForbidden() *ImageConfigurationMarkEveImageLatestForbidden {
	return &ImageConfigurationMarkEveImageLatestForbidden{}
}

/*
ImageConfigurationMarkEveImageLatestForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type ImageConfigurationMarkEveImageLatestForbidden struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this image configuration mark eve image latest forbidden response has a 2xx status code
func (o *ImageConfigurationMarkEveImageLatestForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this image configuration mark eve image latest forbidden response has a 3xx status code
func (o *ImageConfigurationMarkEveImageLatestForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this image configuration mark eve image latest forbidden response has a 4xx status code
func (o *ImageConfigurationMarkEveImageLatestForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this image configuration mark eve image latest forbidden response has a 5xx status code
func (o *ImageConfigurationMarkEveImageLatestForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this image configuration mark eve image latest forbidden response a status code equal to that given
func (o *ImageConfigurationMarkEveImageLatestForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the image configuration mark eve image latest forbidden response
func (o *ImageConfigurationMarkEveImageLatestForbidden) Code() int {
	return 403
}

func (o *ImageConfigurationMarkEveImageLatestForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/apps/images/baseos/latest][%d] imageConfigurationMarkEveImageLatestForbidden  %+v", 403, o.Payload)
}

func (o *ImageConfigurationMarkEveImageLatestForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/apps/images/baseos/latest][%d] imageConfigurationMarkEveImageLatestForbidden  %+v", 403, o.Payload)
}

func (o *ImageConfigurationMarkEveImageLatestForbidden) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ImageConfigurationMarkEveImageLatestForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageConfigurationMarkEveImageLatestNotFound creates a ImageConfigurationMarkEveImageLatestNotFound with default headers values
func NewImageConfigurationMarkEveImageLatestNotFound() *ImageConfigurationMarkEveImageLatestNotFound {
	return &ImageConfigurationMarkEveImageLatestNotFound{}
}

/*
ImageConfigurationMarkEveImageLatestNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type ImageConfigurationMarkEveImageLatestNotFound struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this image configuration mark eve image latest not found response has a 2xx status code
func (o *ImageConfigurationMarkEveImageLatestNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this image configuration mark eve image latest not found response has a 3xx status code
func (o *ImageConfigurationMarkEveImageLatestNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this image configuration mark eve image latest not found response has a 4xx status code
func (o *ImageConfigurationMarkEveImageLatestNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this image configuration mark eve image latest not found response has a 5xx status code
func (o *ImageConfigurationMarkEveImageLatestNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this image configuration mark eve image latest not found response a status code equal to that given
func (o *ImageConfigurationMarkEveImageLatestNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the image configuration mark eve image latest not found response
func (o *ImageConfigurationMarkEveImageLatestNotFound) Code() int {
	return 404
}

func (o *ImageConfigurationMarkEveImageLatestNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/apps/images/baseos/latest][%d] imageConfigurationMarkEveImageLatestNotFound  %+v", 404, o.Payload)
}

func (o *ImageConfigurationMarkEveImageLatestNotFound) String() string {
	return fmt.Sprintf("[PUT /v1/apps/images/baseos/latest][%d] imageConfigurationMarkEveImageLatestNotFound  %+v", 404, o.Payload)
}

func (o *ImageConfigurationMarkEveImageLatestNotFound) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ImageConfigurationMarkEveImageLatestNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageConfigurationMarkEveImageLatestInternalServerError creates a ImageConfigurationMarkEveImageLatestInternalServerError with default headers values
func NewImageConfigurationMarkEveImageLatestInternalServerError() *ImageConfigurationMarkEveImageLatestInternalServerError {
	return &ImageConfigurationMarkEveImageLatestInternalServerError{}
}

/*
ImageConfigurationMarkEveImageLatestInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type ImageConfigurationMarkEveImageLatestInternalServerError struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this image configuration mark eve image latest internal server error response has a 2xx status code
func (o *ImageConfigurationMarkEveImageLatestInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this image configuration mark eve image latest internal server error response has a 3xx status code
func (o *ImageConfigurationMarkEveImageLatestInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this image configuration mark eve image latest internal server error response has a 4xx status code
func (o *ImageConfigurationMarkEveImageLatestInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this image configuration mark eve image latest internal server error response has a 5xx status code
func (o *ImageConfigurationMarkEveImageLatestInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this image configuration mark eve image latest internal server error response a status code equal to that given
func (o *ImageConfigurationMarkEveImageLatestInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the image configuration mark eve image latest internal server error response
func (o *ImageConfigurationMarkEveImageLatestInternalServerError) Code() int {
	return 500
}

func (o *ImageConfigurationMarkEveImageLatestInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /v1/apps/images/baseos/latest][%d] imageConfigurationMarkEveImageLatestInternalServerError  %+v", 500, o.Payload)
}

func (o *ImageConfigurationMarkEveImageLatestInternalServerError) String() string {
	return fmt.Sprintf("[PUT /v1/apps/images/baseos/latest][%d] imageConfigurationMarkEveImageLatestInternalServerError  %+v", 500, o.Payload)
}

func (o *ImageConfigurationMarkEveImageLatestInternalServerError) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ImageConfigurationMarkEveImageLatestInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageConfigurationMarkEveImageLatestGatewayTimeout creates a ImageConfigurationMarkEveImageLatestGatewayTimeout with default headers values
func NewImageConfigurationMarkEveImageLatestGatewayTimeout() *ImageConfigurationMarkEveImageLatestGatewayTimeout {
	return &ImageConfigurationMarkEveImageLatestGatewayTimeout{}
}

/*
ImageConfigurationMarkEveImageLatestGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type ImageConfigurationMarkEveImageLatestGatewayTimeout struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this image configuration mark eve image latest gateway timeout response has a 2xx status code
func (o *ImageConfigurationMarkEveImageLatestGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this image configuration mark eve image latest gateway timeout response has a 3xx status code
func (o *ImageConfigurationMarkEveImageLatestGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this image configuration mark eve image latest gateway timeout response has a 4xx status code
func (o *ImageConfigurationMarkEveImageLatestGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this image configuration mark eve image latest gateway timeout response has a 5xx status code
func (o *ImageConfigurationMarkEveImageLatestGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this image configuration mark eve image latest gateway timeout response a status code equal to that given
func (o *ImageConfigurationMarkEveImageLatestGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the image configuration mark eve image latest gateway timeout response
func (o *ImageConfigurationMarkEveImageLatestGatewayTimeout) Code() int {
	return 504
}

func (o *ImageConfigurationMarkEveImageLatestGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /v1/apps/images/baseos/latest][%d] imageConfigurationMarkEveImageLatestGatewayTimeout  %+v", 504, o.Payload)
}

func (o *ImageConfigurationMarkEveImageLatestGatewayTimeout) String() string {
	return fmt.Sprintf("[PUT /v1/apps/images/baseos/latest][%d] imageConfigurationMarkEveImageLatestGatewayTimeout  %+v", 504, o.Payload)
}

func (o *ImageConfigurationMarkEveImageLatestGatewayTimeout) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ImageConfigurationMarkEveImageLatestGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageConfigurationMarkEveImageLatestDefault creates a ImageConfigurationMarkEveImageLatestDefault with default headers values
func NewImageConfigurationMarkEveImageLatestDefault(code int) *ImageConfigurationMarkEveImageLatestDefault {
	return &ImageConfigurationMarkEveImageLatestDefault{
		_statusCode: code,
	}
}

/*
ImageConfigurationMarkEveImageLatestDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ImageConfigurationMarkEveImageLatestDefault struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// IsSuccess returns true when this image configuration mark eve image latest default response has a 2xx status code
func (o *ImageConfigurationMarkEveImageLatestDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this image configuration mark eve image latest default response has a 3xx status code
func (o *ImageConfigurationMarkEveImageLatestDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this image configuration mark eve image latest default response has a 4xx status code
func (o *ImageConfigurationMarkEveImageLatestDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this image configuration mark eve image latest default response has a 5xx status code
func (o *ImageConfigurationMarkEveImageLatestDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this image configuration mark eve image latest default response a status code equal to that given
func (o *ImageConfigurationMarkEveImageLatestDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the image configuration mark eve image latest default response
func (o *ImageConfigurationMarkEveImageLatestDefault) Code() int {
	return o._statusCode
}

func (o *ImageConfigurationMarkEveImageLatestDefault) Error() string {
	return fmt.Sprintf("[PUT /v1/apps/images/baseos/latest][%d] ImageConfiguration_MarkEveImageLatest default  %+v", o._statusCode, o.Payload)
}

func (o *ImageConfigurationMarkEveImageLatestDefault) String() string {
	return fmt.Sprintf("[PUT /v1/apps/images/baseos/latest][%d] ImageConfiguration_MarkEveImageLatest default  %+v", o._statusCode, o.Payload)
}

func (o *ImageConfigurationMarkEveImageLatestDefault) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *ImageConfigurationMarkEveImageLatestDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
