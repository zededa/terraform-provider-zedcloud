package hardware_model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/terraform-provider-zedcloud/models"
)

// HardwareModelGetDeviceStatusLocationReader is a Reader for the HardwareModelGetDeviceStatusLocation structure.
type HardwareModelGetDeviceStatusLocationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *HardwareModelGetDeviceStatusLocationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewHardwareModelGetDeviceStatusLocationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewHardwareModelGetDeviceStatusLocationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewHardwareModelGetDeviceStatusLocationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewHardwareModelGetDeviceStatusLocationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewHardwareModelGetDeviceStatusLocationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewHardwareModelGetDeviceStatusLocationGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewHardwareModelGetDeviceStatusLocationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewHardwareModelGetDeviceStatusLocationOK creates a HardwareModelGetDeviceStatusLocationOK with default headers values
func NewHardwareModelGetDeviceStatusLocationOK() *HardwareModelGetDeviceStatusLocationOK {
	return &HardwareModelGetDeviceStatusLocationOK{}
}

/*
HardwareModelGetDeviceStatusLocationOK describes a response with status code 200, with default header values.

A successful response.
*/
type HardwareModelGetDeviceStatusLocationOK struct {
	Payload *models.DeviceLocations
}

// IsSuccess returns true when this hardware model get device status location o k response has a 2xx status code
func (o *HardwareModelGetDeviceStatusLocationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this hardware model get device status location o k response has a 3xx status code
func (o *HardwareModelGetDeviceStatusLocationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this hardware model get device status location o k response has a 4xx status code
func (o *HardwareModelGetDeviceStatusLocationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this hardware model get device status location o k response has a 5xx status code
func (o *HardwareModelGetDeviceStatusLocationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this hardware model get device status location o k response a status code equal to that given
func (o *HardwareModelGetDeviceStatusLocationOK) IsCode(code int) bool {
	return code == 200
}

func (o *HardwareModelGetDeviceStatusLocationOK) Error() string {
	return fmt.Sprintf("[GET /v1/devices/status/locations][%d] hardwareModelGetDeviceStatusLocationOK  %+v", 200, o.Payload)
}

func (o *HardwareModelGetDeviceStatusLocationOK) String() string {
	return fmt.Sprintf("[GET /v1/devices/status/locations][%d] hardwareModelGetDeviceStatusLocationOK  %+v", 200, o.Payload)
}

func (o *HardwareModelGetDeviceStatusLocationOK) GetPayload() *models.DeviceLocations {
	return o.Payload
}

func (o *HardwareModelGetDeviceStatusLocationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeviceLocations)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHardwareModelGetDeviceStatusLocationBadRequest creates a HardwareModelGetDeviceStatusLocationBadRequest with default headers values
func NewHardwareModelGetDeviceStatusLocationBadRequest() *HardwareModelGetDeviceStatusLocationBadRequest {
	return &HardwareModelGetDeviceStatusLocationBadRequest{}
}

/*
HardwareModelGetDeviceStatusLocationBadRequest describes a response with status code 400, with default header values.

Bad Request. The API gateway did not process the request because of invalid value of filter parameters.
*/
type HardwareModelGetDeviceStatusLocationBadRequest struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this hardware model get device status location bad request response has a 2xx status code
func (o *HardwareModelGetDeviceStatusLocationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this hardware model get device status location bad request response has a 3xx status code
func (o *HardwareModelGetDeviceStatusLocationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this hardware model get device status location bad request response has a 4xx status code
func (o *HardwareModelGetDeviceStatusLocationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this hardware model get device status location bad request response has a 5xx status code
func (o *HardwareModelGetDeviceStatusLocationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this hardware model get device status location bad request response a status code equal to that given
func (o *HardwareModelGetDeviceStatusLocationBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *HardwareModelGetDeviceStatusLocationBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/devices/status/locations][%d] hardwareModelGetDeviceStatusLocationBadRequest  %+v", 400, o.Payload)
}

func (o *HardwareModelGetDeviceStatusLocationBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/devices/status/locations][%d] hardwareModelGetDeviceStatusLocationBadRequest  %+v", 400, o.Payload)
}

func (o *HardwareModelGetDeviceStatusLocationBadRequest) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *HardwareModelGetDeviceStatusLocationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHardwareModelGetDeviceStatusLocationUnauthorized creates a HardwareModelGetDeviceStatusLocationUnauthorized with default headers values
func NewHardwareModelGetDeviceStatusLocationUnauthorized() *HardwareModelGetDeviceStatusLocationUnauthorized {
	return &HardwareModelGetDeviceStatusLocationUnauthorized{}
}

/*
HardwareModelGetDeviceStatusLocationUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type HardwareModelGetDeviceStatusLocationUnauthorized struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this hardware model get device status location unauthorized response has a 2xx status code
func (o *HardwareModelGetDeviceStatusLocationUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this hardware model get device status location unauthorized response has a 3xx status code
func (o *HardwareModelGetDeviceStatusLocationUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this hardware model get device status location unauthorized response has a 4xx status code
func (o *HardwareModelGetDeviceStatusLocationUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this hardware model get device status location unauthorized response has a 5xx status code
func (o *HardwareModelGetDeviceStatusLocationUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this hardware model get device status location unauthorized response a status code equal to that given
func (o *HardwareModelGetDeviceStatusLocationUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *HardwareModelGetDeviceStatusLocationUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/devices/status/locations][%d] hardwareModelGetDeviceStatusLocationUnauthorized  %+v", 401, o.Payload)
}

func (o *HardwareModelGetDeviceStatusLocationUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/devices/status/locations][%d] hardwareModelGetDeviceStatusLocationUnauthorized  %+v", 401, o.Payload)
}

func (o *HardwareModelGetDeviceStatusLocationUnauthorized) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *HardwareModelGetDeviceStatusLocationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHardwareModelGetDeviceStatusLocationForbidden creates a HardwareModelGetDeviceStatusLocationForbidden with default headers values
func NewHardwareModelGetDeviceStatusLocationForbidden() *HardwareModelGetDeviceStatusLocationForbidden {
	return &HardwareModelGetDeviceStatusLocationForbidden{}
}

/*
HardwareModelGetDeviceStatusLocationForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type HardwareModelGetDeviceStatusLocationForbidden struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this hardware model get device status location forbidden response has a 2xx status code
func (o *HardwareModelGetDeviceStatusLocationForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this hardware model get device status location forbidden response has a 3xx status code
func (o *HardwareModelGetDeviceStatusLocationForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this hardware model get device status location forbidden response has a 4xx status code
func (o *HardwareModelGetDeviceStatusLocationForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this hardware model get device status location forbidden response has a 5xx status code
func (o *HardwareModelGetDeviceStatusLocationForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this hardware model get device status location forbidden response a status code equal to that given
func (o *HardwareModelGetDeviceStatusLocationForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *HardwareModelGetDeviceStatusLocationForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/devices/status/locations][%d] hardwareModelGetDeviceStatusLocationForbidden  %+v", 403, o.Payload)
}

func (o *HardwareModelGetDeviceStatusLocationForbidden) String() string {
	return fmt.Sprintf("[GET /v1/devices/status/locations][%d] hardwareModelGetDeviceStatusLocationForbidden  %+v", 403, o.Payload)
}

func (o *HardwareModelGetDeviceStatusLocationForbidden) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *HardwareModelGetDeviceStatusLocationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHardwareModelGetDeviceStatusLocationInternalServerError creates a HardwareModelGetDeviceStatusLocationInternalServerError with default headers values
func NewHardwareModelGetDeviceStatusLocationInternalServerError() *HardwareModelGetDeviceStatusLocationInternalServerError {
	return &HardwareModelGetDeviceStatusLocationInternalServerError{}
}

/*
HardwareModelGetDeviceStatusLocationInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type HardwareModelGetDeviceStatusLocationInternalServerError struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this hardware model get device status location internal server error response has a 2xx status code
func (o *HardwareModelGetDeviceStatusLocationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this hardware model get device status location internal server error response has a 3xx status code
func (o *HardwareModelGetDeviceStatusLocationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this hardware model get device status location internal server error response has a 4xx status code
func (o *HardwareModelGetDeviceStatusLocationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this hardware model get device status location internal server error response has a 5xx status code
func (o *HardwareModelGetDeviceStatusLocationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this hardware model get device status location internal server error response a status code equal to that given
func (o *HardwareModelGetDeviceStatusLocationInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *HardwareModelGetDeviceStatusLocationInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/devices/status/locations][%d] hardwareModelGetDeviceStatusLocationInternalServerError  %+v", 500, o.Payload)
}

func (o *HardwareModelGetDeviceStatusLocationInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/devices/status/locations][%d] hardwareModelGetDeviceStatusLocationInternalServerError  %+v", 500, o.Payload)
}

func (o *HardwareModelGetDeviceStatusLocationInternalServerError) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *HardwareModelGetDeviceStatusLocationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHardwareModelGetDeviceStatusLocationGatewayTimeout creates a HardwareModelGetDeviceStatusLocationGatewayTimeout with default headers values
func NewHardwareModelGetDeviceStatusLocationGatewayTimeout() *HardwareModelGetDeviceStatusLocationGatewayTimeout {
	return &HardwareModelGetDeviceStatusLocationGatewayTimeout{}
}

/*
HardwareModelGetDeviceStatusLocationGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type HardwareModelGetDeviceStatusLocationGatewayTimeout struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this hardware model get device status location gateway timeout response has a 2xx status code
func (o *HardwareModelGetDeviceStatusLocationGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this hardware model get device status location gateway timeout response has a 3xx status code
func (o *HardwareModelGetDeviceStatusLocationGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this hardware model get device status location gateway timeout response has a 4xx status code
func (o *HardwareModelGetDeviceStatusLocationGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this hardware model get device status location gateway timeout response has a 5xx status code
func (o *HardwareModelGetDeviceStatusLocationGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this hardware model get device status location gateway timeout response a status code equal to that given
func (o *HardwareModelGetDeviceStatusLocationGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *HardwareModelGetDeviceStatusLocationGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/devices/status/locations][%d] hardwareModelGetDeviceStatusLocationGatewayTimeout  %+v", 504, o.Payload)
}

func (o *HardwareModelGetDeviceStatusLocationGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /v1/devices/status/locations][%d] hardwareModelGetDeviceStatusLocationGatewayTimeout  %+v", 504, o.Payload)
}

func (o *HardwareModelGetDeviceStatusLocationGatewayTimeout) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *HardwareModelGetDeviceStatusLocationGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHardwareModelGetDeviceStatusLocationDefault creates a HardwareModelGetDeviceStatusLocationDefault with default headers values
func NewHardwareModelGetDeviceStatusLocationDefault(code int) *HardwareModelGetDeviceStatusLocationDefault {
	return &HardwareModelGetDeviceStatusLocationDefault{
		_statusCode: code,
	}
}

/*
HardwareModelGetDeviceStatusLocationDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type HardwareModelGetDeviceStatusLocationDefault struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// Code gets the status code for the hardware model get device status location default response
func (o *HardwareModelGetDeviceStatusLocationDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this hardware model get device status location default response has a 2xx status code
func (o *HardwareModelGetDeviceStatusLocationDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this hardware model get device status location default response has a 3xx status code
func (o *HardwareModelGetDeviceStatusLocationDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this hardware model get device status location default response has a 4xx status code
func (o *HardwareModelGetDeviceStatusLocationDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this hardware model get device status location default response has a 5xx status code
func (o *HardwareModelGetDeviceStatusLocationDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this hardware model get device status location default response a status code equal to that given
func (o *HardwareModelGetDeviceStatusLocationDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *HardwareModelGetDeviceStatusLocationDefault) Error() string {
	return fmt.Sprintf("[GET /v1/devices/status/locations][%d] HardwareModel_GetDeviceStatusLocation default  %+v", o._statusCode, o.Payload)
}

func (o *HardwareModelGetDeviceStatusLocationDefault) String() string {
	return fmt.Sprintf("[GET /v1/devices/status/locations][%d] HardwareModel_GetDeviceStatusLocation default  %+v", o._statusCode, o.Payload)
}

func (o *HardwareModelGetDeviceStatusLocationDefault) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *HardwareModelGetDeviceStatusLocationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
