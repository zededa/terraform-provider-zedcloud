// Code generated by go-swagger; DO NOT EDIT.

package profile_deployment_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"encoding/json"
	"fmt"
	"io"
	"net/http"

	"errors"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/terraform-provider-zedcloud/v2/models"
)

// ProfileDeploymentServiceDeleteProfileDeploymentReader is a Reader for the ProfileDeploymentServiceDeleteProfileDeployment structure.
type ProfileDeploymentServiceDeleteProfileDeploymentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProfileDeploymentServiceDeleteProfileDeploymentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProfileDeploymentServiceDeleteProfileDeploymentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewProfileDeploymentServiceDeleteProfileDeploymentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewProfileDeploymentServiceDeleteProfileDeploymentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewProfileDeploymentServiceDeleteProfileDeploymentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewProfileDeploymentServiceDeleteProfileDeploymentConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewProfileDeploymentServiceDeleteProfileDeploymentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewProfileDeploymentServiceDeleteProfileDeploymentGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewProfileDeploymentServiceDeleteProfileDeploymentDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewProfileDeploymentServiceDeleteProfileDeploymentOK creates a ProfileDeploymentServiceDeleteProfileDeploymentOK with default headers values
func NewProfileDeploymentServiceDeleteProfileDeploymentOK() *ProfileDeploymentServiceDeleteProfileDeploymentOK {
	return &ProfileDeploymentServiceDeleteProfileDeploymentOK{}
}

/*
ProfileDeploymentServiceDeleteProfileDeploymentOK describes a response with status code 200, with default header values.

A successful response.
*/
type ProfileDeploymentServiceDeleteProfileDeploymentOK struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this profile deployment service delete profile deployment o k response has a 2xx status code
func (o *ProfileDeploymentServiceDeleteProfileDeploymentOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this profile deployment service delete profile deployment o k response has a 3xx status code
func (o *ProfileDeploymentServiceDeleteProfileDeploymentOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this profile deployment service delete profile deployment o k response has a 4xx status code
func (o *ProfileDeploymentServiceDeleteProfileDeploymentOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this profile deployment service delete profile deployment o k response has a 5xx status code
func (o *ProfileDeploymentServiceDeleteProfileDeploymentOK) IsServerError() bool {
	return false
}

// IsCode returns true when this profile deployment service delete profile deployment o k response a status code equal to that given
func (o *ProfileDeploymentServiceDeleteProfileDeploymentOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the profile deployment service delete profile deployment o k response
func (o *ProfileDeploymentServiceDeleteProfileDeploymentOK) Code() int {
	return 200
}

func (o *ProfileDeploymentServiceDeleteProfileDeploymentOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/profiledeployments/id/{id}][%d] profileDeploymentServiceDeleteProfileDeploymentOK %s", 200, payload)
}

func (o *ProfileDeploymentServiceDeleteProfileDeploymentOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/profiledeployments/id/{id}][%d] profileDeploymentServiceDeleteProfileDeploymentOK %s", 200, payload)
}

func (o *ProfileDeploymentServiceDeleteProfileDeploymentOK) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ProfileDeploymentServiceDeleteProfileDeploymentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProfileDeploymentServiceDeleteProfileDeploymentUnauthorized creates a ProfileDeploymentServiceDeleteProfileDeploymentUnauthorized with default headers values
func NewProfileDeploymentServiceDeleteProfileDeploymentUnauthorized() *ProfileDeploymentServiceDeleteProfileDeploymentUnauthorized {
	return &ProfileDeploymentServiceDeleteProfileDeploymentUnauthorized{}
}

/*
ProfileDeploymentServiceDeleteProfileDeploymentUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type ProfileDeploymentServiceDeleteProfileDeploymentUnauthorized struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this profile deployment service delete profile deployment unauthorized response has a 2xx status code
func (o *ProfileDeploymentServiceDeleteProfileDeploymentUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this profile deployment service delete profile deployment unauthorized response has a 3xx status code
func (o *ProfileDeploymentServiceDeleteProfileDeploymentUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this profile deployment service delete profile deployment unauthorized response has a 4xx status code
func (o *ProfileDeploymentServiceDeleteProfileDeploymentUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this profile deployment service delete profile deployment unauthorized response has a 5xx status code
func (o *ProfileDeploymentServiceDeleteProfileDeploymentUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this profile deployment service delete profile deployment unauthorized response a status code equal to that given
func (o *ProfileDeploymentServiceDeleteProfileDeploymentUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the profile deployment service delete profile deployment unauthorized response
func (o *ProfileDeploymentServiceDeleteProfileDeploymentUnauthorized) Code() int {
	return 401
}

func (o *ProfileDeploymentServiceDeleteProfileDeploymentUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/profiledeployments/id/{id}][%d] profileDeploymentServiceDeleteProfileDeploymentUnauthorized %s", 401, payload)
}

func (o *ProfileDeploymentServiceDeleteProfileDeploymentUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/profiledeployments/id/{id}][%d] profileDeploymentServiceDeleteProfileDeploymentUnauthorized %s", 401, payload)
}

func (o *ProfileDeploymentServiceDeleteProfileDeploymentUnauthorized) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ProfileDeploymentServiceDeleteProfileDeploymentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProfileDeploymentServiceDeleteProfileDeploymentForbidden creates a ProfileDeploymentServiceDeleteProfileDeploymentForbidden with default headers values
func NewProfileDeploymentServiceDeleteProfileDeploymentForbidden() *ProfileDeploymentServiceDeleteProfileDeploymentForbidden {
	return &ProfileDeploymentServiceDeleteProfileDeploymentForbidden{}
}

/*
ProfileDeploymentServiceDeleteProfileDeploymentForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.
*/
type ProfileDeploymentServiceDeleteProfileDeploymentForbidden struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this profile deployment service delete profile deployment forbidden response has a 2xx status code
func (o *ProfileDeploymentServiceDeleteProfileDeploymentForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this profile deployment service delete profile deployment forbidden response has a 3xx status code
func (o *ProfileDeploymentServiceDeleteProfileDeploymentForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this profile deployment service delete profile deployment forbidden response has a 4xx status code
func (o *ProfileDeploymentServiceDeleteProfileDeploymentForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this profile deployment service delete profile deployment forbidden response has a 5xx status code
func (o *ProfileDeploymentServiceDeleteProfileDeploymentForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this profile deployment service delete profile deployment forbidden response a status code equal to that given
func (o *ProfileDeploymentServiceDeleteProfileDeploymentForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the profile deployment service delete profile deployment forbidden response
func (o *ProfileDeploymentServiceDeleteProfileDeploymentForbidden) Code() int {
	return 403
}

func (o *ProfileDeploymentServiceDeleteProfileDeploymentForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/profiledeployments/id/{id}][%d] profileDeploymentServiceDeleteProfileDeploymentForbidden %s", 403, payload)
}

func (o *ProfileDeploymentServiceDeleteProfileDeploymentForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/profiledeployments/id/{id}][%d] profileDeploymentServiceDeleteProfileDeploymentForbidden %s", 403, payload)
}

func (o *ProfileDeploymentServiceDeleteProfileDeploymentForbidden) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ProfileDeploymentServiceDeleteProfileDeploymentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProfileDeploymentServiceDeleteProfileDeploymentNotFound creates a ProfileDeploymentServiceDeleteProfileDeploymentNotFound with default headers values
func NewProfileDeploymentServiceDeleteProfileDeploymentNotFound() *ProfileDeploymentServiceDeleteProfileDeploymentNotFound {
	return &ProfileDeploymentServiceDeleteProfileDeploymentNotFound{}
}

/*
ProfileDeploymentServiceDeleteProfileDeploymentNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type ProfileDeploymentServiceDeleteProfileDeploymentNotFound struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this profile deployment service delete profile deployment not found response has a 2xx status code
func (o *ProfileDeploymentServiceDeleteProfileDeploymentNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this profile deployment service delete profile deployment not found response has a 3xx status code
func (o *ProfileDeploymentServiceDeleteProfileDeploymentNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this profile deployment service delete profile deployment not found response has a 4xx status code
func (o *ProfileDeploymentServiceDeleteProfileDeploymentNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this profile deployment service delete profile deployment not found response has a 5xx status code
func (o *ProfileDeploymentServiceDeleteProfileDeploymentNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this profile deployment service delete profile deployment not found response a status code equal to that given
func (o *ProfileDeploymentServiceDeleteProfileDeploymentNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the profile deployment service delete profile deployment not found response
func (o *ProfileDeploymentServiceDeleteProfileDeploymentNotFound) Code() int {
	return 404
}

func (o *ProfileDeploymentServiceDeleteProfileDeploymentNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/profiledeployments/id/{id}][%d] profileDeploymentServiceDeleteProfileDeploymentNotFound %s", 404, payload)
}

func (o *ProfileDeploymentServiceDeleteProfileDeploymentNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/profiledeployments/id/{id}][%d] profileDeploymentServiceDeleteProfileDeploymentNotFound %s", 404, payload)
}

func (o *ProfileDeploymentServiceDeleteProfileDeploymentNotFound) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ProfileDeploymentServiceDeleteProfileDeploymentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProfileDeploymentServiceDeleteProfileDeploymentConflict creates a ProfileDeploymentServiceDeleteProfileDeploymentConflict with default headers values
func NewProfileDeploymentServiceDeleteProfileDeploymentConflict() *ProfileDeploymentServiceDeleteProfileDeploymentConflict {
	return &ProfileDeploymentServiceDeleteProfileDeploymentConflict{}
}

/*
ProfileDeploymentServiceDeleteProfileDeploymentConflict describes a response with status code 409, with default header values.

Conflict. The API gateway did not process the request because there are instances of this profile deployment deployed in edge node(s)
*/
type ProfileDeploymentServiceDeleteProfileDeploymentConflict struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this profile deployment service delete profile deployment conflict response has a 2xx status code
func (o *ProfileDeploymentServiceDeleteProfileDeploymentConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this profile deployment service delete profile deployment conflict response has a 3xx status code
func (o *ProfileDeploymentServiceDeleteProfileDeploymentConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this profile deployment service delete profile deployment conflict response has a 4xx status code
func (o *ProfileDeploymentServiceDeleteProfileDeploymentConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this profile deployment service delete profile deployment conflict response has a 5xx status code
func (o *ProfileDeploymentServiceDeleteProfileDeploymentConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this profile deployment service delete profile deployment conflict response a status code equal to that given
func (o *ProfileDeploymentServiceDeleteProfileDeploymentConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the profile deployment service delete profile deployment conflict response
func (o *ProfileDeploymentServiceDeleteProfileDeploymentConflict) Code() int {
	return 409
}

func (o *ProfileDeploymentServiceDeleteProfileDeploymentConflict) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/profiledeployments/id/{id}][%d] profileDeploymentServiceDeleteProfileDeploymentConflict %s", 409, payload)
}

func (o *ProfileDeploymentServiceDeleteProfileDeploymentConflict) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/profiledeployments/id/{id}][%d] profileDeploymentServiceDeleteProfileDeploymentConflict %s", 409, payload)
}

func (o *ProfileDeploymentServiceDeleteProfileDeploymentConflict) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ProfileDeploymentServiceDeleteProfileDeploymentConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProfileDeploymentServiceDeleteProfileDeploymentInternalServerError creates a ProfileDeploymentServiceDeleteProfileDeploymentInternalServerError with default headers values
func NewProfileDeploymentServiceDeleteProfileDeploymentInternalServerError() *ProfileDeploymentServiceDeleteProfileDeploymentInternalServerError {
	return &ProfileDeploymentServiceDeleteProfileDeploymentInternalServerError{}
}

/*
ProfileDeploymentServiceDeleteProfileDeploymentInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type ProfileDeploymentServiceDeleteProfileDeploymentInternalServerError struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this profile deployment service delete profile deployment internal server error response has a 2xx status code
func (o *ProfileDeploymentServiceDeleteProfileDeploymentInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this profile deployment service delete profile deployment internal server error response has a 3xx status code
func (o *ProfileDeploymentServiceDeleteProfileDeploymentInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this profile deployment service delete profile deployment internal server error response has a 4xx status code
func (o *ProfileDeploymentServiceDeleteProfileDeploymentInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this profile deployment service delete profile deployment internal server error response has a 5xx status code
func (o *ProfileDeploymentServiceDeleteProfileDeploymentInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this profile deployment service delete profile deployment internal server error response a status code equal to that given
func (o *ProfileDeploymentServiceDeleteProfileDeploymentInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the profile deployment service delete profile deployment internal server error response
func (o *ProfileDeploymentServiceDeleteProfileDeploymentInternalServerError) Code() int {
	return 500
}

func (o *ProfileDeploymentServiceDeleteProfileDeploymentInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/profiledeployments/id/{id}][%d] profileDeploymentServiceDeleteProfileDeploymentInternalServerError %s", 500, payload)
}

func (o *ProfileDeploymentServiceDeleteProfileDeploymentInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/profiledeployments/id/{id}][%d] profileDeploymentServiceDeleteProfileDeploymentInternalServerError %s", 500, payload)
}

func (o *ProfileDeploymentServiceDeleteProfileDeploymentInternalServerError) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ProfileDeploymentServiceDeleteProfileDeploymentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)
	var buf bytes.Buffer
	_, err := io.Copy(&buf, response.Body())
	if err != nil && err != io.EOF {
		return err
	}
	payload := buf.String()
	// response payload
	if err := consumer.Consume(&buf, o.Payload); err != nil && err != io.EOF {
		parsingErr := errors.New(payload)
		o.Payload.HTTPStatusCode = http.StatusInternalServerError
		o.Payload.Error = append(o.Payload.Error, &models.ZsrvError{Details: parsingErr.Error()})
		return nil
	}

	return nil
}

// NewProfileDeploymentServiceDeleteProfileDeploymentGatewayTimeout creates a ProfileDeploymentServiceDeleteProfileDeploymentGatewayTimeout with default headers values
func NewProfileDeploymentServiceDeleteProfileDeploymentGatewayTimeout() *ProfileDeploymentServiceDeleteProfileDeploymentGatewayTimeout {
	return &ProfileDeploymentServiceDeleteProfileDeploymentGatewayTimeout{}
}

/*
ProfileDeploymentServiceDeleteProfileDeploymentGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type ProfileDeploymentServiceDeleteProfileDeploymentGatewayTimeout struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this profile deployment service delete profile deployment gateway timeout response has a 2xx status code
func (o *ProfileDeploymentServiceDeleteProfileDeploymentGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this profile deployment service delete profile deployment gateway timeout response has a 3xx status code
func (o *ProfileDeploymentServiceDeleteProfileDeploymentGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this profile deployment service delete profile deployment gateway timeout response has a 4xx status code
func (o *ProfileDeploymentServiceDeleteProfileDeploymentGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this profile deployment service delete profile deployment gateway timeout response has a 5xx status code
func (o *ProfileDeploymentServiceDeleteProfileDeploymentGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this profile deployment service delete profile deployment gateway timeout response a status code equal to that given
func (o *ProfileDeploymentServiceDeleteProfileDeploymentGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the profile deployment service delete profile deployment gateway timeout response
func (o *ProfileDeploymentServiceDeleteProfileDeploymentGatewayTimeout) Code() int {
	return 504
}

func (o *ProfileDeploymentServiceDeleteProfileDeploymentGatewayTimeout) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/profiledeployments/id/{id}][%d] profileDeploymentServiceDeleteProfileDeploymentGatewayTimeout %s", 504, payload)
}

func (o *ProfileDeploymentServiceDeleteProfileDeploymentGatewayTimeout) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/profiledeployments/id/{id}][%d] profileDeploymentServiceDeleteProfileDeploymentGatewayTimeout %s", 504, payload)
}

func (o *ProfileDeploymentServiceDeleteProfileDeploymentGatewayTimeout) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ProfileDeploymentServiceDeleteProfileDeploymentGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProfileDeploymentServiceDeleteProfileDeploymentDefault creates a ProfileDeploymentServiceDeleteProfileDeploymentDefault with default headers values
func NewProfileDeploymentServiceDeleteProfileDeploymentDefault(code int) *ProfileDeploymentServiceDeleteProfileDeploymentDefault {
	return &ProfileDeploymentServiceDeleteProfileDeploymentDefault{
		_statusCode: code,
	}
}

/*
ProfileDeploymentServiceDeleteProfileDeploymentDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ProfileDeploymentServiceDeleteProfileDeploymentDefault struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// IsSuccess returns true when this profile deployment service delete profile deployment default response has a 2xx status code
func (o *ProfileDeploymentServiceDeleteProfileDeploymentDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this profile deployment service delete profile deployment default response has a 3xx status code
func (o *ProfileDeploymentServiceDeleteProfileDeploymentDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this profile deployment service delete profile deployment default response has a 4xx status code
func (o *ProfileDeploymentServiceDeleteProfileDeploymentDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this profile deployment service delete profile deployment default response has a 5xx status code
func (o *ProfileDeploymentServiceDeleteProfileDeploymentDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this profile deployment service delete profile deployment default response a status code equal to that given
func (o *ProfileDeploymentServiceDeleteProfileDeploymentDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the profile deployment service delete profile deployment default response
func (o *ProfileDeploymentServiceDeleteProfileDeploymentDefault) Code() int {
	return o._statusCode
}

func (o *ProfileDeploymentServiceDeleteProfileDeploymentDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/profiledeployments/id/{id}][%d] ProfileDeploymentService_DeleteProfileDeployment default %s", o._statusCode, payload)
}

func (o *ProfileDeploymentServiceDeleteProfileDeploymentDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/profiledeployments/id/{id}][%d] ProfileDeploymentService_DeleteProfileDeployment default %s", o._statusCode, payload)
}

func (o *ProfileDeploymentServiceDeleteProfileDeploymentDefault) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *ProfileDeploymentServiceDeleteProfileDeploymentDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
