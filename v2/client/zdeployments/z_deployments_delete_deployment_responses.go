// Code generated by go-swagger; DO NOT EDIT.

package z_deployments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/terraform-provider-zedcloud/v2/models"
)

// ZDeploymentsDeleteDeploymentReader is a Reader for the ZDeploymentsDeleteDeployment structure.
type ZDeploymentsDeleteDeploymentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ZDeploymentsDeleteDeploymentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewZDeploymentsDeleteDeploymentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewZDeploymentsDeleteDeploymentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewZDeploymentsDeleteDeploymentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewZDeploymentsDeleteDeploymentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewZDeploymentsDeleteDeploymentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewZDeploymentsDeleteDeploymentGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewZDeploymentsDeleteDeploymentDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewZDeploymentsDeleteDeploymentOK creates a ZDeploymentsDeleteDeploymentOK with default headers values
func NewZDeploymentsDeleteDeploymentOK() *ZDeploymentsDeleteDeploymentOK {
	return &ZDeploymentsDeleteDeploymentOK{}
}

/*
ZDeploymentsDeleteDeploymentOK describes a response with status code 200, with default header values.

A successful response.
*/
type ZDeploymentsDeleteDeploymentOK struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this z deployments delete deployment o k response has a 2xx status code
func (o *ZDeploymentsDeleteDeploymentOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this z deployments delete deployment o k response has a 3xx status code
func (o *ZDeploymentsDeleteDeploymentOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this z deployments delete deployment o k response has a 4xx status code
func (o *ZDeploymentsDeleteDeploymentOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this z deployments delete deployment o k response has a 5xx status code
func (o *ZDeploymentsDeleteDeploymentOK) IsServerError() bool {
	return false
}

// IsCode returns true when this z deployments delete deployment o k response a status code equal to that given
func (o *ZDeploymentsDeleteDeploymentOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the z deployments delete deployment o k response
func (o *ZDeploymentsDeleteDeploymentOK) Code() int {
	return 200
}

func (o *ZDeploymentsDeleteDeploymentOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/deployments/id/{deploymentId}][%d] zDeploymentsDeleteDeploymentOK %s", 200, payload)
}

func (o *ZDeploymentsDeleteDeploymentOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/deployments/id/{deploymentId}][%d] zDeploymentsDeleteDeploymentOK %s", 200, payload)
}

func (o *ZDeploymentsDeleteDeploymentOK) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ZDeploymentsDeleteDeploymentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewZDeploymentsDeleteDeploymentUnauthorized creates a ZDeploymentsDeleteDeploymentUnauthorized with default headers values
func NewZDeploymentsDeleteDeploymentUnauthorized() *ZDeploymentsDeleteDeploymentUnauthorized {
	return &ZDeploymentsDeleteDeploymentUnauthorized{}
}

/*
ZDeploymentsDeleteDeploymentUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type ZDeploymentsDeleteDeploymentUnauthorized struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this z deployments delete deployment unauthorized response has a 2xx status code
func (o *ZDeploymentsDeleteDeploymentUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this z deployments delete deployment unauthorized response has a 3xx status code
func (o *ZDeploymentsDeleteDeploymentUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this z deployments delete deployment unauthorized response has a 4xx status code
func (o *ZDeploymentsDeleteDeploymentUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this z deployments delete deployment unauthorized response has a 5xx status code
func (o *ZDeploymentsDeleteDeploymentUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this z deployments delete deployment unauthorized response a status code equal to that given
func (o *ZDeploymentsDeleteDeploymentUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the z deployments delete deployment unauthorized response
func (o *ZDeploymentsDeleteDeploymentUnauthorized) Code() int {
	return 401
}

func (o *ZDeploymentsDeleteDeploymentUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/deployments/id/{deploymentId}][%d] zDeploymentsDeleteDeploymentUnauthorized %s", 401, payload)
}

func (o *ZDeploymentsDeleteDeploymentUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/deployments/id/{deploymentId}][%d] zDeploymentsDeleteDeploymentUnauthorized %s", 401, payload)
}

func (o *ZDeploymentsDeleteDeploymentUnauthorized) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ZDeploymentsDeleteDeploymentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewZDeploymentsDeleteDeploymentForbidden creates a ZDeploymentsDeleteDeploymentForbidden with default headers values
func NewZDeploymentsDeleteDeploymentForbidden() *ZDeploymentsDeleteDeploymentForbidden {
	return &ZDeploymentsDeleteDeploymentForbidden{}
}

/*
ZDeploymentsDeleteDeploymentForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.
*/
type ZDeploymentsDeleteDeploymentForbidden struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this z deployments delete deployment forbidden response has a 2xx status code
func (o *ZDeploymentsDeleteDeploymentForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this z deployments delete deployment forbidden response has a 3xx status code
func (o *ZDeploymentsDeleteDeploymentForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this z deployments delete deployment forbidden response has a 4xx status code
func (o *ZDeploymentsDeleteDeploymentForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this z deployments delete deployment forbidden response has a 5xx status code
func (o *ZDeploymentsDeleteDeploymentForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this z deployments delete deployment forbidden response a status code equal to that given
func (o *ZDeploymentsDeleteDeploymentForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the z deployments delete deployment forbidden response
func (o *ZDeploymentsDeleteDeploymentForbidden) Code() int {
	return 403
}

func (o *ZDeploymentsDeleteDeploymentForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/deployments/id/{deploymentId}][%d] zDeploymentsDeleteDeploymentForbidden %s", 403, payload)
}

func (o *ZDeploymentsDeleteDeploymentForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/deployments/id/{deploymentId}][%d] zDeploymentsDeleteDeploymentForbidden %s", 403, payload)
}

func (o *ZDeploymentsDeleteDeploymentForbidden) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ZDeploymentsDeleteDeploymentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewZDeploymentsDeleteDeploymentNotFound creates a ZDeploymentsDeleteDeploymentNotFound with default headers values
func NewZDeploymentsDeleteDeploymentNotFound() *ZDeploymentsDeleteDeploymentNotFound {
	return &ZDeploymentsDeleteDeploymentNotFound{}
}

/*
ZDeploymentsDeleteDeploymentNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type ZDeploymentsDeleteDeploymentNotFound struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this z deployments delete deployment not found response has a 2xx status code
func (o *ZDeploymentsDeleteDeploymentNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this z deployments delete deployment not found response has a 3xx status code
func (o *ZDeploymentsDeleteDeploymentNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this z deployments delete deployment not found response has a 4xx status code
func (o *ZDeploymentsDeleteDeploymentNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this z deployments delete deployment not found response has a 5xx status code
func (o *ZDeploymentsDeleteDeploymentNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this z deployments delete deployment not found response a status code equal to that given
func (o *ZDeploymentsDeleteDeploymentNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the z deployments delete deployment not found response
func (o *ZDeploymentsDeleteDeploymentNotFound) Code() int {
	return 404
}

func (o *ZDeploymentsDeleteDeploymentNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/deployments/id/{deploymentId}][%d] zDeploymentsDeleteDeploymentNotFound %s", 404, payload)
}

func (o *ZDeploymentsDeleteDeploymentNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/deployments/id/{deploymentId}][%d] zDeploymentsDeleteDeploymentNotFound %s", 404, payload)
}

func (o *ZDeploymentsDeleteDeploymentNotFound) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ZDeploymentsDeleteDeploymentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewZDeploymentsDeleteDeploymentInternalServerError creates a ZDeploymentsDeleteDeploymentInternalServerError with default headers values
func NewZDeploymentsDeleteDeploymentInternalServerError() *ZDeploymentsDeleteDeploymentInternalServerError {
	return &ZDeploymentsDeleteDeploymentInternalServerError{}
}

/*
ZDeploymentsDeleteDeploymentInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type ZDeploymentsDeleteDeploymentInternalServerError struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this z deployments delete deployment internal server error response has a 2xx status code
func (o *ZDeploymentsDeleteDeploymentInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this z deployments delete deployment internal server error response has a 3xx status code
func (o *ZDeploymentsDeleteDeploymentInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this z deployments delete deployment internal server error response has a 4xx status code
func (o *ZDeploymentsDeleteDeploymentInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this z deployments delete deployment internal server error response has a 5xx status code
func (o *ZDeploymentsDeleteDeploymentInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this z deployments delete deployment internal server error response a status code equal to that given
func (o *ZDeploymentsDeleteDeploymentInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the z deployments delete deployment internal server error response
func (o *ZDeploymentsDeleteDeploymentInternalServerError) Code() int {
	return 500
}

func (o *ZDeploymentsDeleteDeploymentInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/deployments/id/{deploymentId}][%d] zDeploymentsDeleteDeploymentInternalServerError %s", 500, payload)
}

func (o *ZDeploymentsDeleteDeploymentInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/deployments/id/{deploymentId}][%d] zDeploymentsDeleteDeploymentInternalServerError %s", 500, payload)
}

func (o *ZDeploymentsDeleteDeploymentInternalServerError) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ZDeploymentsDeleteDeploymentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewZDeploymentsDeleteDeploymentGatewayTimeout creates a ZDeploymentsDeleteDeploymentGatewayTimeout with default headers values
func NewZDeploymentsDeleteDeploymentGatewayTimeout() *ZDeploymentsDeleteDeploymentGatewayTimeout {
	return &ZDeploymentsDeleteDeploymentGatewayTimeout{}
}

/*
ZDeploymentsDeleteDeploymentGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type ZDeploymentsDeleteDeploymentGatewayTimeout struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this z deployments delete deployment gateway timeout response has a 2xx status code
func (o *ZDeploymentsDeleteDeploymentGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this z deployments delete deployment gateway timeout response has a 3xx status code
func (o *ZDeploymentsDeleteDeploymentGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this z deployments delete deployment gateway timeout response has a 4xx status code
func (o *ZDeploymentsDeleteDeploymentGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this z deployments delete deployment gateway timeout response has a 5xx status code
func (o *ZDeploymentsDeleteDeploymentGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this z deployments delete deployment gateway timeout response a status code equal to that given
func (o *ZDeploymentsDeleteDeploymentGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the z deployments delete deployment gateway timeout response
func (o *ZDeploymentsDeleteDeploymentGatewayTimeout) Code() int {
	return 504
}

func (o *ZDeploymentsDeleteDeploymentGatewayTimeout) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/deployments/id/{deploymentId}][%d] zDeploymentsDeleteDeploymentGatewayTimeout %s", 504, payload)
}

func (o *ZDeploymentsDeleteDeploymentGatewayTimeout) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/deployments/id/{deploymentId}][%d] zDeploymentsDeleteDeploymentGatewayTimeout %s", 504, payload)
}

func (o *ZDeploymentsDeleteDeploymentGatewayTimeout) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ZDeploymentsDeleteDeploymentGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewZDeploymentsDeleteDeploymentDefault creates a ZDeploymentsDeleteDeploymentDefault with default headers values
func NewZDeploymentsDeleteDeploymentDefault(code int) *ZDeploymentsDeleteDeploymentDefault {
	return &ZDeploymentsDeleteDeploymentDefault{
		_statusCode: code,
	}
}

/*
ZDeploymentsDeleteDeploymentDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ZDeploymentsDeleteDeploymentDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this z deployments delete deployment default response has a 2xx status code
func (o *ZDeploymentsDeleteDeploymentDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this z deployments delete deployment default response has a 3xx status code
func (o *ZDeploymentsDeleteDeploymentDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this z deployments delete deployment default response has a 4xx status code
func (o *ZDeploymentsDeleteDeploymentDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this z deployments delete deployment default response has a 5xx status code
func (o *ZDeploymentsDeleteDeploymentDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this z deployments delete deployment default response a status code equal to that given
func (o *ZDeploymentsDeleteDeploymentDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the z deployments delete deployment default response
func (o *ZDeploymentsDeleteDeploymentDefault) Code() int {
	return o._statusCode
}

func (o *ZDeploymentsDeleteDeploymentDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/deployments/id/{deploymentId}][%d] ZDeployments_DeleteDeployment default %s", o._statusCode, payload)
}

func (o *ZDeploymentsDeleteDeploymentDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/deployments/id/{deploymentId}][%d] ZDeployments_DeleteDeployment default %s", o._statusCode, payload)
}

func (o *ZDeploymentsDeleteDeploymentDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *ZDeploymentsDeleteDeploymentDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
