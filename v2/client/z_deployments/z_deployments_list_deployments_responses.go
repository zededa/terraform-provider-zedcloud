// Code generated by go-swagger; DO NOT EDIT.

package z_deployments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/terraform-provider-zedcloud/v2/models"
)

// ZDeploymentsListDeploymentsReader is a Reader for the ZDeploymentsListDeployments structure.
type ZDeploymentsListDeploymentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ZDeploymentsListDeploymentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewZDeploymentsListDeploymentsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewZDeploymentsListDeploymentsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewZDeploymentsListDeploymentsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewZDeploymentsListDeploymentsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewZDeploymentsListDeploymentsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewZDeploymentsListDeploymentsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewZDeploymentsListDeploymentsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewZDeploymentsListDeploymentsOK creates a ZDeploymentsListDeploymentsOK with default headers values
func NewZDeploymentsListDeploymentsOK() *ZDeploymentsListDeploymentsOK {
	return &ZDeploymentsListDeploymentsOK{}
}

/*
ZDeploymentsListDeploymentsOK describes a response with status code 200, with default header values.

A successful response.
*/
type ZDeploymentsListDeploymentsOK struct {
	Payload *models.ZserviceDeploymentListResponse
}

// IsSuccess returns true when this z deployments list deployments o k response has a 2xx status code
func (o *ZDeploymentsListDeploymentsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this z deployments list deployments o k response has a 3xx status code
func (o *ZDeploymentsListDeploymentsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this z deployments list deployments o k response has a 4xx status code
func (o *ZDeploymentsListDeploymentsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this z deployments list deployments o k response has a 5xx status code
func (o *ZDeploymentsListDeploymentsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this z deployments list deployments o k response a status code equal to that given
func (o *ZDeploymentsListDeploymentsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the z deployments list deployments o k response
func (o *ZDeploymentsListDeploymentsOK) Code() int {
	return 200
}

func (o *ZDeploymentsListDeploymentsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/deployments][%d] zDeploymentsListDeploymentsOK %s", 200, payload)
}

func (o *ZDeploymentsListDeploymentsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/deployments][%d] zDeploymentsListDeploymentsOK %s", 200, payload)
}

func (o *ZDeploymentsListDeploymentsOK) GetPayload() *models.ZserviceDeploymentListResponse {
	return o.Payload
}

func (o *ZDeploymentsListDeploymentsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZserviceDeploymentListResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewZDeploymentsListDeploymentsBadRequest creates a ZDeploymentsListDeploymentsBadRequest with default headers values
func NewZDeploymentsListDeploymentsBadRequest() *ZDeploymentsListDeploymentsBadRequest {
	return &ZDeploymentsListDeploymentsBadRequest{}
}

/*
ZDeploymentsListDeploymentsBadRequest describes a response with status code 400, with default header values.

Bad Request. The API gateway did not process the request because of invalid value of filter parameters.
*/
type ZDeploymentsListDeploymentsBadRequest struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this z deployments list deployments bad request response has a 2xx status code
func (o *ZDeploymentsListDeploymentsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this z deployments list deployments bad request response has a 3xx status code
func (o *ZDeploymentsListDeploymentsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this z deployments list deployments bad request response has a 4xx status code
func (o *ZDeploymentsListDeploymentsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this z deployments list deployments bad request response has a 5xx status code
func (o *ZDeploymentsListDeploymentsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this z deployments list deployments bad request response a status code equal to that given
func (o *ZDeploymentsListDeploymentsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the z deployments list deployments bad request response
func (o *ZDeploymentsListDeploymentsBadRequest) Code() int {
	return 400
}

func (o *ZDeploymentsListDeploymentsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/deployments][%d] zDeploymentsListDeploymentsBadRequest %s", 400, payload)
}

func (o *ZDeploymentsListDeploymentsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/deployments][%d] zDeploymentsListDeploymentsBadRequest %s", 400, payload)
}

func (o *ZDeploymentsListDeploymentsBadRequest) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ZDeploymentsListDeploymentsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewZDeploymentsListDeploymentsUnauthorized creates a ZDeploymentsListDeploymentsUnauthorized with default headers values
func NewZDeploymentsListDeploymentsUnauthorized() *ZDeploymentsListDeploymentsUnauthorized {
	return &ZDeploymentsListDeploymentsUnauthorized{}
}

/*
ZDeploymentsListDeploymentsUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type ZDeploymentsListDeploymentsUnauthorized struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this z deployments list deployments unauthorized response has a 2xx status code
func (o *ZDeploymentsListDeploymentsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this z deployments list deployments unauthorized response has a 3xx status code
func (o *ZDeploymentsListDeploymentsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this z deployments list deployments unauthorized response has a 4xx status code
func (o *ZDeploymentsListDeploymentsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this z deployments list deployments unauthorized response has a 5xx status code
func (o *ZDeploymentsListDeploymentsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this z deployments list deployments unauthorized response a status code equal to that given
func (o *ZDeploymentsListDeploymentsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the z deployments list deployments unauthorized response
func (o *ZDeploymentsListDeploymentsUnauthorized) Code() int {
	return 401
}

func (o *ZDeploymentsListDeploymentsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/deployments][%d] zDeploymentsListDeploymentsUnauthorized %s", 401, payload)
}

func (o *ZDeploymentsListDeploymentsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/deployments][%d] zDeploymentsListDeploymentsUnauthorized %s", 401, payload)
}

func (o *ZDeploymentsListDeploymentsUnauthorized) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ZDeploymentsListDeploymentsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewZDeploymentsListDeploymentsForbidden creates a ZDeploymentsListDeploymentsForbidden with default headers values
func NewZDeploymentsListDeploymentsForbidden() *ZDeploymentsListDeploymentsForbidden {
	return &ZDeploymentsListDeploymentsForbidden{}
}

/*
ZDeploymentsListDeploymentsForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.
*/
type ZDeploymentsListDeploymentsForbidden struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this z deployments list deployments forbidden response has a 2xx status code
func (o *ZDeploymentsListDeploymentsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this z deployments list deployments forbidden response has a 3xx status code
func (o *ZDeploymentsListDeploymentsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this z deployments list deployments forbidden response has a 4xx status code
func (o *ZDeploymentsListDeploymentsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this z deployments list deployments forbidden response has a 5xx status code
func (o *ZDeploymentsListDeploymentsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this z deployments list deployments forbidden response a status code equal to that given
func (o *ZDeploymentsListDeploymentsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the z deployments list deployments forbidden response
func (o *ZDeploymentsListDeploymentsForbidden) Code() int {
	return 403
}

func (o *ZDeploymentsListDeploymentsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/deployments][%d] zDeploymentsListDeploymentsForbidden %s", 403, payload)
}

func (o *ZDeploymentsListDeploymentsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/deployments][%d] zDeploymentsListDeploymentsForbidden %s", 403, payload)
}

func (o *ZDeploymentsListDeploymentsForbidden) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ZDeploymentsListDeploymentsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewZDeploymentsListDeploymentsInternalServerError creates a ZDeploymentsListDeploymentsInternalServerError with default headers values
func NewZDeploymentsListDeploymentsInternalServerError() *ZDeploymentsListDeploymentsInternalServerError {
	return &ZDeploymentsListDeploymentsInternalServerError{}
}

/*
ZDeploymentsListDeploymentsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type ZDeploymentsListDeploymentsInternalServerError struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this z deployments list deployments internal server error response has a 2xx status code
func (o *ZDeploymentsListDeploymentsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this z deployments list deployments internal server error response has a 3xx status code
func (o *ZDeploymentsListDeploymentsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this z deployments list deployments internal server error response has a 4xx status code
func (o *ZDeploymentsListDeploymentsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this z deployments list deployments internal server error response has a 5xx status code
func (o *ZDeploymentsListDeploymentsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this z deployments list deployments internal server error response a status code equal to that given
func (o *ZDeploymentsListDeploymentsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the z deployments list deployments internal server error response
func (o *ZDeploymentsListDeploymentsInternalServerError) Code() int {
	return 500
}

func (o *ZDeploymentsListDeploymentsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/deployments][%d] zDeploymentsListDeploymentsInternalServerError %s", 500, payload)
}

func (o *ZDeploymentsListDeploymentsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/deployments][%d] zDeploymentsListDeploymentsInternalServerError %s", 500, payload)
}

func (o *ZDeploymentsListDeploymentsInternalServerError) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ZDeploymentsListDeploymentsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewZDeploymentsListDeploymentsGatewayTimeout creates a ZDeploymentsListDeploymentsGatewayTimeout with default headers values
func NewZDeploymentsListDeploymentsGatewayTimeout() *ZDeploymentsListDeploymentsGatewayTimeout {
	return &ZDeploymentsListDeploymentsGatewayTimeout{}
}

/*
ZDeploymentsListDeploymentsGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type ZDeploymentsListDeploymentsGatewayTimeout struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this z deployments list deployments gateway timeout response has a 2xx status code
func (o *ZDeploymentsListDeploymentsGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this z deployments list deployments gateway timeout response has a 3xx status code
func (o *ZDeploymentsListDeploymentsGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this z deployments list deployments gateway timeout response has a 4xx status code
func (o *ZDeploymentsListDeploymentsGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this z deployments list deployments gateway timeout response has a 5xx status code
func (o *ZDeploymentsListDeploymentsGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this z deployments list deployments gateway timeout response a status code equal to that given
func (o *ZDeploymentsListDeploymentsGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the z deployments list deployments gateway timeout response
func (o *ZDeploymentsListDeploymentsGatewayTimeout) Code() int {
	return 504
}

func (o *ZDeploymentsListDeploymentsGatewayTimeout) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/deployments][%d] zDeploymentsListDeploymentsGatewayTimeout %s", 504, payload)
}

func (o *ZDeploymentsListDeploymentsGatewayTimeout) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/deployments][%d] zDeploymentsListDeploymentsGatewayTimeout %s", 504, payload)
}

func (o *ZDeploymentsListDeploymentsGatewayTimeout) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ZDeploymentsListDeploymentsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewZDeploymentsListDeploymentsDefault creates a ZDeploymentsListDeploymentsDefault with default headers values
func NewZDeploymentsListDeploymentsDefault(code int) *ZDeploymentsListDeploymentsDefault {
	return &ZDeploymentsListDeploymentsDefault{
		_statusCode: code,
	}
}

/*
ZDeploymentsListDeploymentsDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ZDeploymentsListDeploymentsDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this z deployments list deployments default response has a 2xx status code
func (o *ZDeploymentsListDeploymentsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this z deployments list deployments default response has a 3xx status code
func (o *ZDeploymentsListDeploymentsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this z deployments list deployments default response has a 4xx status code
func (o *ZDeploymentsListDeploymentsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this z deployments list deployments default response has a 5xx status code
func (o *ZDeploymentsListDeploymentsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this z deployments list deployments default response a status code equal to that given
func (o *ZDeploymentsListDeploymentsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the z deployments list deployments default response
func (o *ZDeploymentsListDeploymentsDefault) Code() int {
	return o._statusCode
}

func (o *ZDeploymentsListDeploymentsDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/deployments][%d] ZDeployments_ListDeployments default %s", o._statusCode, payload)
}

func (o *ZDeploymentsListDeploymentsDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/deployments][%d] ZDeployments_ListDeployments default %s", o._statusCode, payload)
}

func (o *ZDeploymentsListDeploymentsDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *ZDeploymentsListDeploymentsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
