// Code generated by go-swagger; DO NOT EDIT.

package z_deployments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/terraform-provider-zedcloud/v2/models"
)

// ZDeploymentsCreateDploymentReader is a Reader for the ZDeploymentsCreateDployment structure.
type ZDeploymentsCreateDploymentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ZDeploymentsCreateDploymentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewZDeploymentsCreateDploymentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewZDeploymentsCreateDploymentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewZDeploymentsCreateDploymentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewZDeploymentsCreateDploymentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewZDeploymentsCreateDploymentConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewZDeploymentsCreateDploymentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewZDeploymentsCreateDploymentGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewZDeploymentsCreateDploymentDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewZDeploymentsCreateDploymentOK creates a ZDeploymentsCreateDploymentOK with default headers values
func NewZDeploymentsCreateDploymentOK() *ZDeploymentsCreateDploymentOK {
	return &ZDeploymentsCreateDploymentOK{}
}

/*
ZDeploymentsCreateDploymentOK describes a response with status code 200, with default header values.

A successful response.
*/
type ZDeploymentsCreateDploymentOK struct {
	Payload *models.ZserviceDeploymentCreateResponse
}

// IsSuccess returns true when this z deployments create dployment o k response has a 2xx status code
func (o *ZDeploymentsCreateDploymentOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this z deployments create dployment o k response has a 3xx status code
func (o *ZDeploymentsCreateDploymentOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this z deployments create dployment o k response has a 4xx status code
func (o *ZDeploymentsCreateDploymentOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this z deployments create dployment o k response has a 5xx status code
func (o *ZDeploymentsCreateDploymentOK) IsServerError() bool {
	return false
}

// IsCode returns true when this z deployments create dployment o k response a status code equal to that given
func (o *ZDeploymentsCreateDploymentOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the z deployments create dployment o k response
func (o *ZDeploymentsCreateDploymentOK) Code() int {
	return 200
}

func (o *ZDeploymentsCreateDploymentOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/deployments][%d] zDeploymentsCreateDploymentOK %s", 200, payload)
}

func (o *ZDeploymentsCreateDploymentOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/deployments][%d] zDeploymentsCreateDploymentOK %s", 200, payload)
}

func (o *ZDeploymentsCreateDploymentOK) GetPayload() *models.ZserviceDeploymentCreateResponse {
	return o.Payload
}

func (o *ZDeploymentsCreateDploymentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZserviceDeploymentCreateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewZDeploymentsCreateDploymentBadRequest creates a ZDeploymentsCreateDploymentBadRequest with default headers values
func NewZDeploymentsCreateDploymentBadRequest() *ZDeploymentsCreateDploymentBadRequest {
	return &ZDeploymentsCreateDploymentBadRequest{}
}

/*
ZDeploymentsCreateDploymentBadRequest describes a response with status code 400, with default header values.

Bad Request. The API gateway did not process the request because of missing parameter or invalid value of parameters.
*/
type ZDeploymentsCreateDploymentBadRequest struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this z deployments create dployment bad request response has a 2xx status code
func (o *ZDeploymentsCreateDploymentBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this z deployments create dployment bad request response has a 3xx status code
func (o *ZDeploymentsCreateDploymentBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this z deployments create dployment bad request response has a 4xx status code
func (o *ZDeploymentsCreateDploymentBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this z deployments create dployment bad request response has a 5xx status code
func (o *ZDeploymentsCreateDploymentBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this z deployments create dployment bad request response a status code equal to that given
func (o *ZDeploymentsCreateDploymentBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the z deployments create dployment bad request response
func (o *ZDeploymentsCreateDploymentBadRequest) Code() int {
	return 400
}

func (o *ZDeploymentsCreateDploymentBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/deployments][%d] zDeploymentsCreateDploymentBadRequest %s", 400, payload)
}

func (o *ZDeploymentsCreateDploymentBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/deployments][%d] zDeploymentsCreateDploymentBadRequest %s", 400, payload)
}

func (o *ZDeploymentsCreateDploymentBadRequest) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ZDeploymentsCreateDploymentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewZDeploymentsCreateDploymentUnauthorized creates a ZDeploymentsCreateDploymentUnauthorized with default headers values
func NewZDeploymentsCreateDploymentUnauthorized() *ZDeploymentsCreateDploymentUnauthorized {
	return &ZDeploymentsCreateDploymentUnauthorized{}
}

/*
ZDeploymentsCreateDploymentUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type ZDeploymentsCreateDploymentUnauthorized struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this z deployments create dployment unauthorized response has a 2xx status code
func (o *ZDeploymentsCreateDploymentUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this z deployments create dployment unauthorized response has a 3xx status code
func (o *ZDeploymentsCreateDploymentUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this z deployments create dployment unauthorized response has a 4xx status code
func (o *ZDeploymentsCreateDploymentUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this z deployments create dployment unauthorized response has a 5xx status code
func (o *ZDeploymentsCreateDploymentUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this z deployments create dployment unauthorized response a status code equal to that given
func (o *ZDeploymentsCreateDploymentUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the z deployments create dployment unauthorized response
func (o *ZDeploymentsCreateDploymentUnauthorized) Code() int {
	return 401
}

func (o *ZDeploymentsCreateDploymentUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/deployments][%d] zDeploymentsCreateDploymentUnauthorized %s", 401, payload)
}

func (o *ZDeploymentsCreateDploymentUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/deployments][%d] zDeploymentsCreateDploymentUnauthorized %s", 401, payload)
}

func (o *ZDeploymentsCreateDploymentUnauthorized) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ZDeploymentsCreateDploymentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewZDeploymentsCreateDploymentForbidden creates a ZDeploymentsCreateDploymentForbidden with default headers values
func NewZDeploymentsCreateDploymentForbidden() *ZDeploymentsCreateDploymentForbidden {
	return &ZDeploymentsCreateDploymentForbidden{}
}

/*
ZDeploymentsCreateDploymentForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.
*/
type ZDeploymentsCreateDploymentForbidden struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this z deployments create dployment forbidden response has a 2xx status code
func (o *ZDeploymentsCreateDploymentForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this z deployments create dployment forbidden response has a 3xx status code
func (o *ZDeploymentsCreateDploymentForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this z deployments create dployment forbidden response has a 4xx status code
func (o *ZDeploymentsCreateDploymentForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this z deployments create dployment forbidden response has a 5xx status code
func (o *ZDeploymentsCreateDploymentForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this z deployments create dployment forbidden response a status code equal to that given
func (o *ZDeploymentsCreateDploymentForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the z deployments create dployment forbidden response
func (o *ZDeploymentsCreateDploymentForbidden) Code() int {
	return 403
}

func (o *ZDeploymentsCreateDploymentForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/deployments][%d] zDeploymentsCreateDploymentForbidden %s", 403, payload)
}

func (o *ZDeploymentsCreateDploymentForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/deployments][%d] zDeploymentsCreateDploymentForbidden %s", 403, payload)
}

func (o *ZDeploymentsCreateDploymentForbidden) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ZDeploymentsCreateDploymentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewZDeploymentsCreateDploymentConflict creates a ZDeploymentsCreateDploymentConflict with default headers values
func NewZDeploymentsCreateDploymentConflict() *ZDeploymentsCreateDploymentConflict {
	return &ZDeploymentsCreateDploymentConflict{}
}

/*
ZDeploymentsCreateDploymentConflict describes a response with status code 409, with default header values.

Conflict. record with same deployment name already exist
*/
type ZDeploymentsCreateDploymentConflict struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this z deployments create dployment conflict response has a 2xx status code
func (o *ZDeploymentsCreateDploymentConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this z deployments create dployment conflict response has a 3xx status code
func (o *ZDeploymentsCreateDploymentConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this z deployments create dployment conflict response has a 4xx status code
func (o *ZDeploymentsCreateDploymentConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this z deployments create dployment conflict response has a 5xx status code
func (o *ZDeploymentsCreateDploymentConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this z deployments create dployment conflict response a status code equal to that given
func (o *ZDeploymentsCreateDploymentConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the z deployments create dployment conflict response
func (o *ZDeploymentsCreateDploymentConflict) Code() int {
	return 409
}

func (o *ZDeploymentsCreateDploymentConflict) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/deployments][%d] zDeploymentsCreateDploymentConflict %s", 409, payload)
}

func (o *ZDeploymentsCreateDploymentConflict) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/deployments][%d] zDeploymentsCreateDploymentConflict %s", 409, payload)
}

func (o *ZDeploymentsCreateDploymentConflict) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ZDeploymentsCreateDploymentConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewZDeploymentsCreateDploymentInternalServerError creates a ZDeploymentsCreateDploymentInternalServerError with default headers values
func NewZDeploymentsCreateDploymentInternalServerError() *ZDeploymentsCreateDploymentInternalServerError {
	return &ZDeploymentsCreateDploymentInternalServerError{}
}

/*
ZDeploymentsCreateDploymentInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type ZDeploymentsCreateDploymentInternalServerError struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this z deployments create dployment internal server error response has a 2xx status code
func (o *ZDeploymentsCreateDploymentInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this z deployments create dployment internal server error response has a 3xx status code
func (o *ZDeploymentsCreateDploymentInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this z deployments create dployment internal server error response has a 4xx status code
func (o *ZDeploymentsCreateDploymentInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this z deployments create dployment internal server error response has a 5xx status code
func (o *ZDeploymentsCreateDploymentInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this z deployments create dployment internal server error response a status code equal to that given
func (o *ZDeploymentsCreateDploymentInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the z deployments create dployment internal server error response
func (o *ZDeploymentsCreateDploymentInternalServerError) Code() int {
	return 500
}

func (o *ZDeploymentsCreateDploymentInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/deployments][%d] zDeploymentsCreateDploymentInternalServerError %s", 500, payload)
}

func (o *ZDeploymentsCreateDploymentInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/deployments][%d] zDeploymentsCreateDploymentInternalServerError %s", 500, payload)
}

func (o *ZDeploymentsCreateDploymentInternalServerError) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ZDeploymentsCreateDploymentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewZDeploymentsCreateDploymentGatewayTimeout creates a ZDeploymentsCreateDploymentGatewayTimeout with default headers values
func NewZDeploymentsCreateDploymentGatewayTimeout() *ZDeploymentsCreateDploymentGatewayTimeout {
	return &ZDeploymentsCreateDploymentGatewayTimeout{}
}

/*
ZDeploymentsCreateDploymentGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type ZDeploymentsCreateDploymentGatewayTimeout struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this z deployments create dployment gateway timeout response has a 2xx status code
func (o *ZDeploymentsCreateDploymentGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this z deployments create dployment gateway timeout response has a 3xx status code
func (o *ZDeploymentsCreateDploymentGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this z deployments create dployment gateway timeout response has a 4xx status code
func (o *ZDeploymentsCreateDploymentGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this z deployments create dployment gateway timeout response has a 5xx status code
func (o *ZDeploymentsCreateDploymentGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this z deployments create dployment gateway timeout response a status code equal to that given
func (o *ZDeploymentsCreateDploymentGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the z deployments create dployment gateway timeout response
func (o *ZDeploymentsCreateDploymentGatewayTimeout) Code() int {
	return 504
}

func (o *ZDeploymentsCreateDploymentGatewayTimeout) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/deployments][%d] zDeploymentsCreateDploymentGatewayTimeout %s", 504, payload)
}

func (o *ZDeploymentsCreateDploymentGatewayTimeout) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/deployments][%d] zDeploymentsCreateDploymentGatewayTimeout %s", 504, payload)
}

func (o *ZDeploymentsCreateDploymentGatewayTimeout) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ZDeploymentsCreateDploymentGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewZDeploymentsCreateDploymentDefault creates a ZDeploymentsCreateDploymentDefault with default headers values
func NewZDeploymentsCreateDploymentDefault(code int) *ZDeploymentsCreateDploymentDefault {
	return &ZDeploymentsCreateDploymentDefault{
		_statusCode: code,
	}
}

/*
ZDeploymentsCreateDploymentDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ZDeploymentsCreateDploymentDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this z deployments create dployment default response has a 2xx status code
func (o *ZDeploymentsCreateDploymentDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this z deployments create dployment default response has a 3xx status code
func (o *ZDeploymentsCreateDploymentDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this z deployments create dployment default response has a 4xx status code
func (o *ZDeploymentsCreateDploymentDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this z deployments create dployment default response has a 5xx status code
func (o *ZDeploymentsCreateDploymentDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this z deployments create dployment default response a status code equal to that given
func (o *ZDeploymentsCreateDploymentDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the z deployments create dployment default response
func (o *ZDeploymentsCreateDploymentDefault) Code() int {
	return o._statusCode
}

func (o *ZDeploymentsCreateDploymentDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/deployments][%d] ZDeployments_CreateDployment default %s", o._statusCode, payload)
}

func (o *ZDeploymentsCreateDploymentDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/deployments][%d] ZDeployments_CreateDployment default %s", o._statusCode, payload)
}

func (o *ZDeploymentsCreateDploymentDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *ZDeploymentsCreateDploymentDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
