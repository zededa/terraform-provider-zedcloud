// Code generated by go-swagger; DO NOT EDIT.

package z_asset_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/terraform-provider-zedcloud/v2/models"
)

// ZAssetGroupsGetAssetGroupByNameReader is a Reader for the ZAssetGroupsGetAssetGroupByName structure.
type ZAssetGroupsGetAssetGroupByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ZAssetGroupsGetAssetGroupByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewZAssetGroupsGetAssetGroupByNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewZAssetGroupsGetAssetGroupByNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewZAssetGroupsGetAssetGroupByNameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewZAssetGroupsGetAssetGroupByNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewZAssetGroupsGetAssetGroupByNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewZAssetGroupsGetAssetGroupByNameGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewZAssetGroupsGetAssetGroupByNameDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewZAssetGroupsGetAssetGroupByNameOK creates a ZAssetGroupsGetAssetGroupByNameOK with default headers values
func NewZAssetGroupsGetAssetGroupByNameOK() *ZAssetGroupsGetAssetGroupByNameOK {
	return &ZAssetGroupsGetAssetGroupByNameOK{}
}

/*
ZAssetGroupsGetAssetGroupByNameOK describes a response with status code 200, with default header values.

A successful response.
*/
type ZAssetGroupsGetAssetGroupByNameOK struct {
	Payload *models.ZserviceAssetGroupReadRO
}

// IsSuccess returns true when this z asset groups get asset group by name o k response has a 2xx status code
func (o *ZAssetGroupsGetAssetGroupByNameOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this z asset groups get asset group by name o k response has a 3xx status code
func (o *ZAssetGroupsGetAssetGroupByNameOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this z asset groups get asset group by name o k response has a 4xx status code
func (o *ZAssetGroupsGetAssetGroupByNameOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this z asset groups get asset group by name o k response has a 5xx status code
func (o *ZAssetGroupsGetAssetGroupByNameOK) IsServerError() bool {
	return false
}

// IsCode returns true when this z asset groups get asset group by name o k response a status code equal to that given
func (o *ZAssetGroupsGetAssetGroupByNameOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the z asset groups get asset group by name o k response
func (o *ZAssetGroupsGetAssetGroupByNameOK) Code() int {
	return 200
}

func (o *ZAssetGroupsGetAssetGroupByNameOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/asset-groups/name/{name}][%d] zAssetGroupsGetAssetGroupByNameOK %s", 200, payload)
}

func (o *ZAssetGroupsGetAssetGroupByNameOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/asset-groups/name/{name}][%d] zAssetGroupsGetAssetGroupByNameOK %s", 200, payload)
}

func (o *ZAssetGroupsGetAssetGroupByNameOK) GetPayload() *models.ZserviceAssetGroupReadRO {
	return o.Payload
}

func (o *ZAssetGroupsGetAssetGroupByNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZserviceAssetGroupReadRO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewZAssetGroupsGetAssetGroupByNameUnauthorized creates a ZAssetGroupsGetAssetGroupByNameUnauthorized with default headers values
func NewZAssetGroupsGetAssetGroupByNameUnauthorized() *ZAssetGroupsGetAssetGroupByNameUnauthorized {
	return &ZAssetGroupsGetAssetGroupByNameUnauthorized{}
}

/*
ZAssetGroupsGetAssetGroupByNameUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type ZAssetGroupsGetAssetGroupByNameUnauthorized struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this z asset groups get asset group by name unauthorized response has a 2xx status code
func (o *ZAssetGroupsGetAssetGroupByNameUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this z asset groups get asset group by name unauthorized response has a 3xx status code
func (o *ZAssetGroupsGetAssetGroupByNameUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this z asset groups get asset group by name unauthorized response has a 4xx status code
func (o *ZAssetGroupsGetAssetGroupByNameUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this z asset groups get asset group by name unauthorized response has a 5xx status code
func (o *ZAssetGroupsGetAssetGroupByNameUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this z asset groups get asset group by name unauthorized response a status code equal to that given
func (o *ZAssetGroupsGetAssetGroupByNameUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the z asset groups get asset group by name unauthorized response
func (o *ZAssetGroupsGetAssetGroupByNameUnauthorized) Code() int {
	return 401
}

func (o *ZAssetGroupsGetAssetGroupByNameUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/asset-groups/name/{name}][%d] zAssetGroupsGetAssetGroupByNameUnauthorized %s", 401, payload)
}

func (o *ZAssetGroupsGetAssetGroupByNameUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/asset-groups/name/{name}][%d] zAssetGroupsGetAssetGroupByNameUnauthorized %s", 401, payload)
}

func (o *ZAssetGroupsGetAssetGroupByNameUnauthorized) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ZAssetGroupsGetAssetGroupByNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewZAssetGroupsGetAssetGroupByNameForbidden creates a ZAssetGroupsGetAssetGroupByNameForbidden with default headers values
func NewZAssetGroupsGetAssetGroupByNameForbidden() *ZAssetGroupsGetAssetGroupByNameForbidden {
	return &ZAssetGroupsGetAssetGroupByNameForbidden{}
}

/*
ZAssetGroupsGetAssetGroupByNameForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.
*/
type ZAssetGroupsGetAssetGroupByNameForbidden struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this z asset groups get asset group by name forbidden response has a 2xx status code
func (o *ZAssetGroupsGetAssetGroupByNameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this z asset groups get asset group by name forbidden response has a 3xx status code
func (o *ZAssetGroupsGetAssetGroupByNameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this z asset groups get asset group by name forbidden response has a 4xx status code
func (o *ZAssetGroupsGetAssetGroupByNameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this z asset groups get asset group by name forbidden response has a 5xx status code
func (o *ZAssetGroupsGetAssetGroupByNameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this z asset groups get asset group by name forbidden response a status code equal to that given
func (o *ZAssetGroupsGetAssetGroupByNameForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the z asset groups get asset group by name forbidden response
func (o *ZAssetGroupsGetAssetGroupByNameForbidden) Code() int {
	return 403
}

func (o *ZAssetGroupsGetAssetGroupByNameForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/asset-groups/name/{name}][%d] zAssetGroupsGetAssetGroupByNameForbidden %s", 403, payload)
}

func (o *ZAssetGroupsGetAssetGroupByNameForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/asset-groups/name/{name}][%d] zAssetGroupsGetAssetGroupByNameForbidden %s", 403, payload)
}

func (o *ZAssetGroupsGetAssetGroupByNameForbidden) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ZAssetGroupsGetAssetGroupByNameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewZAssetGroupsGetAssetGroupByNameNotFound creates a ZAssetGroupsGetAssetGroupByNameNotFound with default headers values
func NewZAssetGroupsGetAssetGroupByNameNotFound() *ZAssetGroupsGetAssetGroupByNameNotFound {
	return &ZAssetGroupsGetAssetGroupByNameNotFound{}
}

/*
ZAssetGroupsGetAssetGroupByNameNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type ZAssetGroupsGetAssetGroupByNameNotFound struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this z asset groups get asset group by name not found response has a 2xx status code
func (o *ZAssetGroupsGetAssetGroupByNameNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this z asset groups get asset group by name not found response has a 3xx status code
func (o *ZAssetGroupsGetAssetGroupByNameNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this z asset groups get asset group by name not found response has a 4xx status code
func (o *ZAssetGroupsGetAssetGroupByNameNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this z asset groups get asset group by name not found response has a 5xx status code
func (o *ZAssetGroupsGetAssetGroupByNameNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this z asset groups get asset group by name not found response a status code equal to that given
func (o *ZAssetGroupsGetAssetGroupByNameNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the z asset groups get asset group by name not found response
func (o *ZAssetGroupsGetAssetGroupByNameNotFound) Code() int {
	return 404
}

func (o *ZAssetGroupsGetAssetGroupByNameNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/asset-groups/name/{name}][%d] zAssetGroupsGetAssetGroupByNameNotFound %s", 404, payload)
}

func (o *ZAssetGroupsGetAssetGroupByNameNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/asset-groups/name/{name}][%d] zAssetGroupsGetAssetGroupByNameNotFound %s", 404, payload)
}

func (o *ZAssetGroupsGetAssetGroupByNameNotFound) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ZAssetGroupsGetAssetGroupByNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewZAssetGroupsGetAssetGroupByNameInternalServerError creates a ZAssetGroupsGetAssetGroupByNameInternalServerError with default headers values
func NewZAssetGroupsGetAssetGroupByNameInternalServerError() *ZAssetGroupsGetAssetGroupByNameInternalServerError {
	return &ZAssetGroupsGetAssetGroupByNameInternalServerError{}
}

/*
ZAssetGroupsGetAssetGroupByNameInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type ZAssetGroupsGetAssetGroupByNameInternalServerError struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this z asset groups get asset group by name internal server error response has a 2xx status code
func (o *ZAssetGroupsGetAssetGroupByNameInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this z asset groups get asset group by name internal server error response has a 3xx status code
func (o *ZAssetGroupsGetAssetGroupByNameInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this z asset groups get asset group by name internal server error response has a 4xx status code
func (o *ZAssetGroupsGetAssetGroupByNameInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this z asset groups get asset group by name internal server error response has a 5xx status code
func (o *ZAssetGroupsGetAssetGroupByNameInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this z asset groups get asset group by name internal server error response a status code equal to that given
func (o *ZAssetGroupsGetAssetGroupByNameInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the z asset groups get asset group by name internal server error response
func (o *ZAssetGroupsGetAssetGroupByNameInternalServerError) Code() int {
	return 500
}

func (o *ZAssetGroupsGetAssetGroupByNameInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/asset-groups/name/{name}][%d] zAssetGroupsGetAssetGroupByNameInternalServerError %s", 500, payload)
}

func (o *ZAssetGroupsGetAssetGroupByNameInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/asset-groups/name/{name}][%d] zAssetGroupsGetAssetGroupByNameInternalServerError %s", 500, payload)
}

func (o *ZAssetGroupsGetAssetGroupByNameInternalServerError) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ZAssetGroupsGetAssetGroupByNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewZAssetGroupsGetAssetGroupByNameGatewayTimeout creates a ZAssetGroupsGetAssetGroupByNameGatewayTimeout with default headers values
func NewZAssetGroupsGetAssetGroupByNameGatewayTimeout() *ZAssetGroupsGetAssetGroupByNameGatewayTimeout {
	return &ZAssetGroupsGetAssetGroupByNameGatewayTimeout{}
}

/*
ZAssetGroupsGetAssetGroupByNameGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type ZAssetGroupsGetAssetGroupByNameGatewayTimeout struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this z asset groups get asset group by name gateway timeout response has a 2xx status code
func (o *ZAssetGroupsGetAssetGroupByNameGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this z asset groups get asset group by name gateway timeout response has a 3xx status code
func (o *ZAssetGroupsGetAssetGroupByNameGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this z asset groups get asset group by name gateway timeout response has a 4xx status code
func (o *ZAssetGroupsGetAssetGroupByNameGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this z asset groups get asset group by name gateway timeout response has a 5xx status code
func (o *ZAssetGroupsGetAssetGroupByNameGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this z asset groups get asset group by name gateway timeout response a status code equal to that given
func (o *ZAssetGroupsGetAssetGroupByNameGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the z asset groups get asset group by name gateway timeout response
func (o *ZAssetGroupsGetAssetGroupByNameGatewayTimeout) Code() int {
	return 504
}

func (o *ZAssetGroupsGetAssetGroupByNameGatewayTimeout) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/asset-groups/name/{name}][%d] zAssetGroupsGetAssetGroupByNameGatewayTimeout %s", 504, payload)
}

func (o *ZAssetGroupsGetAssetGroupByNameGatewayTimeout) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/asset-groups/name/{name}][%d] zAssetGroupsGetAssetGroupByNameGatewayTimeout %s", 504, payload)
}

func (o *ZAssetGroupsGetAssetGroupByNameGatewayTimeout) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ZAssetGroupsGetAssetGroupByNameGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewZAssetGroupsGetAssetGroupByNameDefault creates a ZAssetGroupsGetAssetGroupByNameDefault with default headers values
func NewZAssetGroupsGetAssetGroupByNameDefault(code int) *ZAssetGroupsGetAssetGroupByNameDefault {
	return &ZAssetGroupsGetAssetGroupByNameDefault{
		_statusCode: code,
	}
}

/*
ZAssetGroupsGetAssetGroupByNameDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ZAssetGroupsGetAssetGroupByNameDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this z asset groups get asset group by name default response has a 2xx status code
func (o *ZAssetGroupsGetAssetGroupByNameDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this z asset groups get asset group by name default response has a 3xx status code
func (o *ZAssetGroupsGetAssetGroupByNameDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this z asset groups get asset group by name default response has a 4xx status code
func (o *ZAssetGroupsGetAssetGroupByNameDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this z asset groups get asset group by name default response has a 5xx status code
func (o *ZAssetGroupsGetAssetGroupByNameDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this z asset groups get asset group by name default response a status code equal to that given
func (o *ZAssetGroupsGetAssetGroupByNameDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the z asset groups get asset group by name default response
func (o *ZAssetGroupsGetAssetGroupByNameDefault) Code() int {
	return o._statusCode
}

func (o *ZAssetGroupsGetAssetGroupByNameDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/asset-groups/name/{name}][%d] ZAssetGroups_GetAssetGroupByName default %s", o._statusCode, payload)
}

func (o *ZAssetGroupsGetAssetGroupByNameDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/asset-groups/name/{name}][%d] ZAssetGroups_GetAssetGroupByName default %s", o._statusCode, payload)
}

func (o *ZAssetGroupsGetAssetGroupByNameDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *ZAssetGroupsGetAssetGroupByNameDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
