// Code generated by go-swagger; DO NOT EDIT.

package z_asset_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/terraform-provider-zedcloud/v2/models"
)

// ZAssetGroupsGetAssetGroupReader is a Reader for the ZAssetGroupsGetAssetGroup structure.
type ZAssetGroupsGetAssetGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ZAssetGroupsGetAssetGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewZAssetGroupsGetAssetGroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewZAssetGroupsGetAssetGroupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewZAssetGroupsGetAssetGroupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewZAssetGroupsGetAssetGroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewZAssetGroupsGetAssetGroupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewZAssetGroupsGetAssetGroupGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewZAssetGroupsGetAssetGroupDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewZAssetGroupsGetAssetGroupOK creates a ZAssetGroupsGetAssetGroupOK with default headers values
func NewZAssetGroupsGetAssetGroupOK() *ZAssetGroupsGetAssetGroupOK {
	return &ZAssetGroupsGetAssetGroupOK{}
}

/*
ZAssetGroupsGetAssetGroupOK describes a response with status code 200, with default header values.

A successful response.
*/
type ZAssetGroupsGetAssetGroupOK struct {
	Payload *models.ZserviceAssetGroupReadRO
}

// IsSuccess returns true when this z asset groups get asset group o k response has a 2xx status code
func (o *ZAssetGroupsGetAssetGroupOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this z asset groups get asset group o k response has a 3xx status code
func (o *ZAssetGroupsGetAssetGroupOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this z asset groups get asset group o k response has a 4xx status code
func (o *ZAssetGroupsGetAssetGroupOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this z asset groups get asset group o k response has a 5xx status code
func (o *ZAssetGroupsGetAssetGroupOK) IsServerError() bool {
	return false
}

// IsCode returns true when this z asset groups get asset group o k response a status code equal to that given
func (o *ZAssetGroupsGetAssetGroupOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the z asset groups get asset group o k response
func (o *ZAssetGroupsGetAssetGroupOK) Code() int {
	return 200
}

func (o *ZAssetGroupsGetAssetGroupOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/asset-groups/id/{id}][%d] zAssetGroupsGetAssetGroupOK %s", 200, payload)
}

func (o *ZAssetGroupsGetAssetGroupOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/asset-groups/id/{id}][%d] zAssetGroupsGetAssetGroupOK %s", 200, payload)
}

func (o *ZAssetGroupsGetAssetGroupOK) GetPayload() *models.ZserviceAssetGroupReadRO {
	return o.Payload
}

func (o *ZAssetGroupsGetAssetGroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZserviceAssetGroupReadRO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewZAssetGroupsGetAssetGroupUnauthorized creates a ZAssetGroupsGetAssetGroupUnauthorized with default headers values
func NewZAssetGroupsGetAssetGroupUnauthorized() *ZAssetGroupsGetAssetGroupUnauthorized {
	return &ZAssetGroupsGetAssetGroupUnauthorized{}
}

/*
ZAssetGroupsGetAssetGroupUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type ZAssetGroupsGetAssetGroupUnauthorized struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this z asset groups get asset group unauthorized response has a 2xx status code
func (o *ZAssetGroupsGetAssetGroupUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this z asset groups get asset group unauthorized response has a 3xx status code
func (o *ZAssetGroupsGetAssetGroupUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this z asset groups get asset group unauthorized response has a 4xx status code
func (o *ZAssetGroupsGetAssetGroupUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this z asset groups get asset group unauthorized response has a 5xx status code
func (o *ZAssetGroupsGetAssetGroupUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this z asset groups get asset group unauthorized response a status code equal to that given
func (o *ZAssetGroupsGetAssetGroupUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the z asset groups get asset group unauthorized response
func (o *ZAssetGroupsGetAssetGroupUnauthorized) Code() int {
	return 401
}

func (o *ZAssetGroupsGetAssetGroupUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/asset-groups/id/{id}][%d] zAssetGroupsGetAssetGroupUnauthorized %s", 401, payload)
}

func (o *ZAssetGroupsGetAssetGroupUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/asset-groups/id/{id}][%d] zAssetGroupsGetAssetGroupUnauthorized %s", 401, payload)
}

func (o *ZAssetGroupsGetAssetGroupUnauthorized) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ZAssetGroupsGetAssetGroupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewZAssetGroupsGetAssetGroupForbidden creates a ZAssetGroupsGetAssetGroupForbidden with default headers values
func NewZAssetGroupsGetAssetGroupForbidden() *ZAssetGroupsGetAssetGroupForbidden {
	return &ZAssetGroupsGetAssetGroupForbidden{}
}

/*
ZAssetGroupsGetAssetGroupForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.
*/
type ZAssetGroupsGetAssetGroupForbidden struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this z asset groups get asset group forbidden response has a 2xx status code
func (o *ZAssetGroupsGetAssetGroupForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this z asset groups get asset group forbidden response has a 3xx status code
func (o *ZAssetGroupsGetAssetGroupForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this z asset groups get asset group forbidden response has a 4xx status code
func (o *ZAssetGroupsGetAssetGroupForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this z asset groups get asset group forbidden response has a 5xx status code
func (o *ZAssetGroupsGetAssetGroupForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this z asset groups get asset group forbidden response a status code equal to that given
func (o *ZAssetGroupsGetAssetGroupForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the z asset groups get asset group forbidden response
func (o *ZAssetGroupsGetAssetGroupForbidden) Code() int {
	return 403
}

func (o *ZAssetGroupsGetAssetGroupForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/asset-groups/id/{id}][%d] zAssetGroupsGetAssetGroupForbidden %s", 403, payload)
}

func (o *ZAssetGroupsGetAssetGroupForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/asset-groups/id/{id}][%d] zAssetGroupsGetAssetGroupForbidden %s", 403, payload)
}

func (o *ZAssetGroupsGetAssetGroupForbidden) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ZAssetGroupsGetAssetGroupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewZAssetGroupsGetAssetGroupNotFound creates a ZAssetGroupsGetAssetGroupNotFound with default headers values
func NewZAssetGroupsGetAssetGroupNotFound() *ZAssetGroupsGetAssetGroupNotFound {
	return &ZAssetGroupsGetAssetGroupNotFound{}
}

/*
ZAssetGroupsGetAssetGroupNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type ZAssetGroupsGetAssetGroupNotFound struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this z asset groups get asset group not found response has a 2xx status code
func (o *ZAssetGroupsGetAssetGroupNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this z asset groups get asset group not found response has a 3xx status code
func (o *ZAssetGroupsGetAssetGroupNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this z asset groups get asset group not found response has a 4xx status code
func (o *ZAssetGroupsGetAssetGroupNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this z asset groups get asset group not found response has a 5xx status code
func (o *ZAssetGroupsGetAssetGroupNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this z asset groups get asset group not found response a status code equal to that given
func (o *ZAssetGroupsGetAssetGroupNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the z asset groups get asset group not found response
func (o *ZAssetGroupsGetAssetGroupNotFound) Code() int {
	return 404
}

func (o *ZAssetGroupsGetAssetGroupNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/asset-groups/id/{id}][%d] zAssetGroupsGetAssetGroupNotFound %s", 404, payload)
}

func (o *ZAssetGroupsGetAssetGroupNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/asset-groups/id/{id}][%d] zAssetGroupsGetAssetGroupNotFound %s", 404, payload)
}

func (o *ZAssetGroupsGetAssetGroupNotFound) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ZAssetGroupsGetAssetGroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewZAssetGroupsGetAssetGroupInternalServerError creates a ZAssetGroupsGetAssetGroupInternalServerError with default headers values
func NewZAssetGroupsGetAssetGroupInternalServerError() *ZAssetGroupsGetAssetGroupInternalServerError {
	return &ZAssetGroupsGetAssetGroupInternalServerError{}
}

/*
ZAssetGroupsGetAssetGroupInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type ZAssetGroupsGetAssetGroupInternalServerError struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this z asset groups get asset group internal server error response has a 2xx status code
func (o *ZAssetGroupsGetAssetGroupInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this z asset groups get asset group internal server error response has a 3xx status code
func (o *ZAssetGroupsGetAssetGroupInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this z asset groups get asset group internal server error response has a 4xx status code
func (o *ZAssetGroupsGetAssetGroupInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this z asset groups get asset group internal server error response has a 5xx status code
func (o *ZAssetGroupsGetAssetGroupInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this z asset groups get asset group internal server error response a status code equal to that given
func (o *ZAssetGroupsGetAssetGroupInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the z asset groups get asset group internal server error response
func (o *ZAssetGroupsGetAssetGroupInternalServerError) Code() int {
	return 500
}

func (o *ZAssetGroupsGetAssetGroupInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/asset-groups/id/{id}][%d] zAssetGroupsGetAssetGroupInternalServerError %s", 500, payload)
}

func (o *ZAssetGroupsGetAssetGroupInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/asset-groups/id/{id}][%d] zAssetGroupsGetAssetGroupInternalServerError %s", 500, payload)
}

func (o *ZAssetGroupsGetAssetGroupInternalServerError) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ZAssetGroupsGetAssetGroupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewZAssetGroupsGetAssetGroupGatewayTimeout creates a ZAssetGroupsGetAssetGroupGatewayTimeout with default headers values
func NewZAssetGroupsGetAssetGroupGatewayTimeout() *ZAssetGroupsGetAssetGroupGatewayTimeout {
	return &ZAssetGroupsGetAssetGroupGatewayTimeout{}
}

/*
ZAssetGroupsGetAssetGroupGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type ZAssetGroupsGetAssetGroupGatewayTimeout struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this z asset groups get asset group gateway timeout response has a 2xx status code
func (o *ZAssetGroupsGetAssetGroupGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this z asset groups get asset group gateway timeout response has a 3xx status code
func (o *ZAssetGroupsGetAssetGroupGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this z asset groups get asset group gateway timeout response has a 4xx status code
func (o *ZAssetGroupsGetAssetGroupGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this z asset groups get asset group gateway timeout response has a 5xx status code
func (o *ZAssetGroupsGetAssetGroupGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this z asset groups get asset group gateway timeout response a status code equal to that given
func (o *ZAssetGroupsGetAssetGroupGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the z asset groups get asset group gateway timeout response
func (o *ZAssetGroupsGetAssetGroupGatewayTimeout) Code() int {
	return 504
}

func (o *ZAssetGroupsGetAssetGroupGatewayTimeout) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/asset-groups/id/{id}][%d] zAssetGroupsGetAssetGroupGatewayTimeout %s", 504, payload)
}

func (o *ZAssetGroupsGetAssetGroupGatewayTimeout) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/asset-groups/id/{id}][%d] zAssetGroupsGetAssetGroupGatewayTimeout %s", 504, payload)
}

func (o *ZAssetGroupsGetAssetGroupGatewayTimeout) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ZAssetGroupsGetAssetGroupGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewZAssetGroupsGetAssetGroupDefault creates a ZAssetGroupsGetAssetGroupDefault with default headers values
func NewZAssetGroupsGetAssetGroupDefault(code int) *ZAssetGroupsGetAssetGroupDefault {
	return &ZAssetGroupsGetAssetGroupDefault{
		_statusCode: code,
	}
}

/*
ZAssetGroupsGetAssetGroupDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ZAssetGroupsGetAssetGroupDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this z asset groups get asset group default response has a 2xx status code
func (o *ZAssetGroupsGetAssetGroupDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this z asset groups get asset group default response has a 3xx status code
func (o *ZAssetGroupsGetAssetGroupDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this z asset groups get asset group default response has a 4xx status code
func (o *ZAssetGroupsGetAssetGroupDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this z asset groups get asset group default response has a 5xx status code
func (o *ZAssetGroupsGetAssetGroupDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this z asset groups get asset group default response a status code equal to that given
func (o *ZAssetGroupsGetAssetGroupDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the z asset groups get asset group default response
func (o *ZAssetGroupsGetAssetGroupDefault) Code() int {
	return o._statusCode
}

func (o *ZAssetGroupsGetAssetGroupDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/asset-groups/id/{id}][%d] ZAssetGroups_GetAssetGroup default %s", o._statusCode, payload)
}

func (o *ZAssetGroupsGetAssetGroupDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/asset-groups/id/{id}][%d] ZAssetGroups_GetAssetGroup default %s", o._statusCode, payload)
}

func (o *ZAssetGroupsGetAssetGroupDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *ZAssetGroupsGetAssetGroupDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
