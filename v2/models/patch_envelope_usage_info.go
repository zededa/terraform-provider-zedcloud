// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PatchEnvelopeUsageInfo patch envelope usage info
//
// swagger:model PatchEnvelopeUsageInfo
type PatchEnvelopeUsageInfo struct {

	// count the number of times app instance actually downloaded
	// whole patch envelope or part of it
	//
	//  number of times app instance download whole patch envelope or part of it
	DownloadCount string `json:"downloadCount,omitempty"`

	// count the number of times app instance called patch APIs
	//
	// number of times app instance called patch APIs
	PatchAPICallCount uint64 `json:"patchApiCallCount,omitempty"`

	// UUID of PatchEnvelope
	//
	// Id of patch envelope
	UUID string `json:"uuid,omitempty"`

	// Version of PatchEnvelope
	//
	// version of patch envelope
	Version string `json:"version,omitempty"`
}

// Validate validates this patch envelope usage info
func (m *PatchEnvelopeUsageInfo) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this patch envelope usage info based on context it is used
func (m *PatchEnvelopeUsageInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PatchEnvelopeUsageInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PatchEnvelopeUsageInfo) UnmarshalBinary(b []byte) error {
	var res PatchEnvelopeUsageInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
