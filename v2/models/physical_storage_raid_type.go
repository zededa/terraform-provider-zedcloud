// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// PhysicalStorageRaidType physical storage raid type
//
// swagger:model PhysicalStorageRaidType
type PhysicalStorageRaidType string

func NewPhysicalStorageRaidType(value PhysicalStorageRaidType) *PhysicalStorageRaidType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated PhysicalStorageRaidType.
func (m PhysicalStorageRaidType) Pointer() *PhysicalStorageRaidType {
	return &m
}

const (

	// PhysicalStorageRaidTypePHYSICALSTORAGERAIDTYPEUNSPECIFIED captures enum value "PHYSICAL_STORAGE_RAID_TYPE_UNSPECIFIED"
	PhysicalStorageRaidTypePHYSICALSTORAGERAIDTYPEUNSPECIFIED PhysicalStorageRaidType = "PHYSICAL_STORAGE_RAID_TYPE_UNSPECIFIED"

	// PhysicalStorageRaidTypePHYSICALSTORAGERAIDTYPERAID0 captures enum value "PHYSICAL_STORAGE_RAID_TYPE_RAID0"
	PhysicalStorageRaidTypePHYSICALSTORAGERAIDTYPERAID0 PhysicalStorageRaidType = "PHYSICAL_STORAGE_RAID_TYPE_RAID0"

	// PhysicalStorageRaidTypePHYSICALSTORAGERAIDTYPERAIDMIRROR captures enum value "PHYSICAL_STORAGE_RAID_TYPE_RAID_MIRROR"
	PhysicalStorageRaidTypePHYSICALSTORAGERAIDTYPERAIDMIRROR PhysicalStorageRaidType = "PHYSICAL_STORAGE_RAID_TYPE_RAID_MIRROR"

	// PhysicalStorageRaidTypePHYSICALSTORAGERAIDTYPERAIDZ1 captures enum value "PHYSICAL_STORAGE_RAID_TYPE_RAIDZ1"
	PhysicalStorageRaidTypePHYSICALSTORAGERAIDTYPERAIDZ1 PhysicalStorageRaidType = "PHYSICAL_STORAGE_RAID_TYPE_RAIDZ1"

	// PhysicalStorageRaidTypePHYSICALSTORAGERAIDTYPERAIDZ2 captures enum value "PHYSICAL_STORAGE_RAID_TYPE_RAIDZ2"
	PhysicalStorageRaidTypePHYSICALSTORAGERAIDTYPERAIDZ2 PhysicalStorageRaidType = "PHYSICAL_STORAGE_RAID_TYPE_RAIDZ2"

	// PhysicalStorageRaidTypePHYSICALSTORAGERAIDTYPERAIDZ3 captures enum value "PHYSICAL_STORAGE_RAID_TYPE_RAIDZ3"
	PhysicalStorageRaidTypePHYSICALSTORAGERAIDTYPERAIDZ3 PhysicalStorageRaidType = "PHYSICAL_STORAGE_RAID_TYPE_RAIDZ3"

	// PhysicalStorageRaidTypePHYSICALSTORAGERAIDTYPENORAID captures enum value "PHYSICAL_STORAGE_RAID_TYPE_NORAID"
	PhysicalStorageRaidTypePHYSICALSTORAGERAIDTYPENORAID PhysicalStorageRaidType = "PHYSICAL_STORAGE_RAID_TYPE_NORAID"
)

// for schema
var physicalStorageRaidTypeEnum []interface{}

func init() {
	var res []PhysicalStorageRaidType
	if err := json.Unmarshal([]byte(`["PHYSICAL_STORAGE_RAID_TYPE_UNSPECIFIED","PHYSICAL_STORAGE_RAID_TYPE_RAID0","PHYSICAL_STORAGE_RAID_TYPE_RAID_MIRROR","PHYSICAL_STORAGE_RAID_TYPE_RAIDZ1","PHYSICAL_STORAGE_RAID_TYPE_RAIDZ2","PHYSICAL_STORAGE_RAID_TYPE_RAIDZ3","PHYSICAL_STORAGE_RAID_TYPE_NORAID"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		physicalStorageRaidTypeEnum = append(physicalStorageRaidTypeEnum, v)
	}
}

func (m PhysicalStorageRaidType) validatePhysicalStorageRaidTypeEnum(path, location string, value PhysicalStorageRaidType) error {
	if err := validate.EnumCase(path, location, value, physicalStorageRaidTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this physical storage raid type
func (m PhysicalStorageRaidType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validatePhysicalStorageRaidTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this physical storage raid type based on context it is used
func (m PhysicalStorageRaidType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
