// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// AttestPolicyType  - ATTEST_POLICY_TYPE_ACCEPT: Do not enforce attestation. All devices are marked as successfully attested.
//   - ATTEST_POLICY_TYPE_ENFORCE: Enforce attestation. Devices failing attestation are marked accordingly.
//
// swagger:model AttestPolicyType
type AttestPolicyType string

func NewAttestPolicyType(value AttestPolicyType) *AttestPolicyType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated AttestPolicyType.
func (m AttestPolicyType) Pointer() *AttestPolicyType {
	return &m
}

const (

	// AttestPolicyTypeATTESTPOLICYTYPEUNSPECIFIED captures enum value "ATTEST_POLICY_TYPE_UNSPECIFIED"
	AttestPolicyTypeATTESTPOLICYTYPEUNSPECIFIED AttestPolicyType = "ATTEST_POLICY_TYPE_UNSPECIFIED"

	// AttestPolicyTypeATTESTPOLICYTYPEACCEPT captures enum value "ATTEST_POLICY_TYPE_ACCEPT"
	AttestPolicyTypeATTESTPOLICYTYPEACCEPT AttestPolicyType = "ATTEST_POLICY_TYPE_ACCEPT"

	// AttestPolicyTypeATTESTPOLICYTYPEENFORCE captures enum value "ATTEST_POLICY_TYPE_ENFORCE"
	AttestPolicyTypeATTESTPOLICYTYPEENFORCE AttestPolicyType = "ATTEST_POLICY_TYPE_ENFORCE"
)

// for schema
var attestPolicyTypeEnum []interface{}

func init() {
	var res []AttestPolicyType
	if err := json.Unmarshal([]byte(`["ATTEST_POLICY_TYPE_UNSPECIFIED","ATTEST_POLICY_TYPE_ACCEPT","ATTEST_POLICY_TYPE_ENFORCE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		attestPolicyTypeEnum = append(attestPolicyTypeEnum, v)
	}
}

func (m AttestPolicyType) validateAttestPolicyTypeEnum(path, location string, value AttestPolicyType) error {
	if err := validate.EnumCase(path, location, value, attestPolicyTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this attest policy type
func (m AttestPolicyType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAttestPolicyTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this attest policy type based on context it is used
func (m AttestPolicyType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
