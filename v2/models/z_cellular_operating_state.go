// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ZCellularOperatingState z cellular operating state
//
// swagger:model ZCellularOperatingState
type ZCellularOperatingState string

func NewZCellularOperatingState(value ZCellularOperatingState) *ZCellularOperatingState {
	return &value
}

// Pointer returns a pointer to a freshly-allocated ZCellularOperatingState.
func (m ZCellularOperatingState) Pointer() *ZCellularOperatingState {
	return &m
}

const (

	// ZCellularOperatingStateZCELLULAROPERATINGSTATEUNSPECIFIED captures enum value "Z_CELLULAR_OPERATING_STATE_UNSPECIFIED"
	ZCellularOperatingStateZCELLULAROPERATINGSTATEUNSPECIFIED ZCellularOperatingState = "Z_CELLULAR_OPERATING_STATE_UNSPECIFIED"

	// ZCellularOperatingStateZCELLULAROPERATINGSTATEOFFLINE captures enum value "Z_CELLULAR_OPERATING_STATE_OFFLINE"
	ZCellularOperatingStateZCELLULAROPERATINGSTATEOFFLINE ZCellularOperatingState = "Z_CELLULAR_OPERATING_STATE_OFFLINE"

	// ZCellularOperatingStateZCELLULAROPERATINGSTATERADIOOFF captures enum value "Z_CELLULAR_OPERATING_STATE_RADIO_OFF"
	ZCellularOperatingStateZCELLULAROPERATINGSTATERADIOOFF ZCellularOperatingState = "Z_CELLULAR_OPERATING_STATE_RADIO_OFF"

	// ZCellularOperatingStateZCELLULAROPERATINGSTATEONLINE captures enum value "Z_CELLULAR_OPERATING_STATE_ONLINE"
	ZCellularOperatingStateZCELLULAROPERATINGSTATEONLINE ZCellularOperatingState = "Z_CELLULAR_OPERATING_STATE_ONLINE"

	// ZCellularOperatingStateZCELLULAROPERATINGSTATEONLINEANDCONNECTED captures enum value "Z_CELLULAR_OPERATING_STATE_ONLINE_AND_CONNECTED"
	ZCellularOperatingStateZCELLULAROPERATINGSTATEONLINEANDCONNECTED ZCellularOperatingState = "Z_CELLULAR_OPERATING_STATE_ONLINE_AND_CONNECTED"

	// ZCellularOperatingStateZCELLULAROPERATINGSTATEUNRECOGNIZED captures enum value "Z_CELLULAR_OPERATING_STATE_UNRECOGNIZED"
	ZCellularOperatingStateZCELLULAROPERATINGSTATEUNRECOGNIZED ZCellularOperatingState = "Z_CELLULAR_OPERATING_STATE_UNRECOGNIZED"
)

// for schema
var zCellularOperatingStateEnum []interface{}

func init() {
	var res []ZCellularOperatingState
	if err := json.Unmarshal([]byte(`["Z_CELLULAR_OPERATING_STATE_UNSPECIFIED","Z_CELLULAR_OPERATING_STATE_OFFLINE","Z_CELLULAR_OPERATING_STATE_RADIO_OFF","Z_CELLULAR_OPERATING_STATE_ONLINE","Z_CELLULAR_OPERATING_STATE_ONLINE_AND_CONNECTED","Z_CELLULAR_OPERATING_STATE_UNRECOGNIZED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		zCellularOperatingStateEnum = append(zCellularOperatingStateEnum, v)
	}
}

func (m ZCellularOperatingState) validateZCellularOperatingStateEnum(path, location string, value ZCellularOperatingState) error {
	if err := validate.EnumCase(path, location, value, zCellularOperatingStateEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this z cellular operating state
func (m ZCellularOperatingState) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateZCellularOperatingStateEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this z cellular operating state based on context it is used
func (m ZCellularOperatingState) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
