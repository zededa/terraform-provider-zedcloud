// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ZserviceAssetType Enum for AssetType
//
// swagger:model zserviceAssetType
type ZserviceAssetType string

func NewZserviceAssetType(value ZserviceAssetType) *ZserviceAssetType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated ZserviceAssetType.
func (m ZserviceAssetType) Pointer() *ZserviceAssetType {
	return &m
}

const (

	// ZserviceAssetTypeEVE captures enum value "EVE"
	ZserviceAssetTypeEVE ZserviceAssetType = "EVE"

	// ZserviceAssetTypeK8S captures enum value "K8S"
	ZserviceAssetTypeK8S ZserviceAssetType = "K8S"

	// ZserviceAssetTypeK3S captures enum value "K3S"
	ZserviceAssetTypeK3S ZserviceAssetType = "K3S"
)

// for schema
var zserviceAssetTypeEnum []interface{}

func init() {
	var res []ZserviceAssetType
	if err := json.Unmarshal([]byte(`["EVE","K8S","K3S"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		zserviceAssetTypeEnum = append(zserviceAssetTypeEnum, v)
	}
}

func (m ZserviceAssetType) validateZserviceAssetTypeEnum(path, location string, value ZserviceAssetType) error {
	if err := validate.EnumCase(path, location, value, zserviceAssetTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this zservice asset type
func (m ZserviceAssetType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateZserviceAssetTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this zservice asset type based on context it is used
func (m ZserviceAssetType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
