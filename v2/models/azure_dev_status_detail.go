// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AzureDevStatusDetail azure dev status detail
//
// swagger:model AzureDevStatusDetail
type AzureDevStatusDetail struct {

	// a state
	AState string `json:"aState,omitempty"`

	// connection state updated time
	ConnectionStateUpdatedTime string `json:"connectionStateUpdatedTime,omitempty"`

	// last activity time
	LastActivityTime string `json:"lastActivityTime,omitempty"`

	// o state
	OState string `json:"oState,omitempty"`

	// status update time
	StatusUpdateTime string `json:"statusUpdateTime,omitempty"`

	// twin
	Twin *TwinDetail `json:"twin,omitempty"`
}

// Validate validates this azure dev status detail
func (m *AzureDevStatusDetail) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTwin(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AzureDevStatusDetail) validateTwin(formats strfmt.Registry) error {
	if swag.IsZero(m.Twin) { // not required
		return nil
	}

	if m.Twin != nil {
		if err := m.Twin.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("twin")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("twin")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this azure dev status detail based on the context it is used
func (m *AzureDevStatusDetail) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateTwin(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AzureDevStatusDetail) contextValidateTwin(ctx context.Context, formats strfmt.Registry) error {

	if m.Twin != nil {
		if err := m.Twin.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("twin")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("twin")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AzureDevStatusDetail) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AzureDevStatusDetail) UnmarshalBinary(b []byte) error {
	var res AzureDevStatusDetail
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
