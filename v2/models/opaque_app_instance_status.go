// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// OpaqueAppInstanceStatus Opaque App Instance Status
//
// Opaque Status for the app instance.
//
// swagger:model OpaqueAppInstanceStatus
type OpaqueAppInstanceStatus struct {

	// User defined name of the device, unique across the enterprise.
	// Max Length: 256
	// Min Length: 3
	// Pattern: [a-zA-Z0-9][a-zA-Z0-9_.-]+
	DeviceID string `json:"deviceId,omitempty"`

	// System defined universally unique Id of the app instance
	// Pattern: [0-9A-Za-z-]+
	ID string `json:"id,omitempty"`

	// last update time
	// Format: date-time
	LastUpdateTime strfmt.DateTime `json:"lastUpdateTime,omitempty"`

	// App instance name. Unique across the application instance
	Name string `json:"name,omitempty"`

	// opaque app instance status info
	// Format: byte
	OpaqueAppInstanceStatus strfmt.Base64 `json:"opaqueAppInstanceStatus,omitempty"`
}

// Validate validates this opaque app instance status
func (m *OpaqueAppInstanceStatus) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDeviceID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLastUpdateTime(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OpaqueAppInstanceStatus) validateDeviceID(formats strfmt.Registry) error {
	if swag.IsZero(m.DeviceID) { // not required
		return nil
	}

	if err := validate.MinLength("deviceId", "body", m.DeviceID, 3); err != nil {
		return err
	}

	if err := validate.MaxLength("deviceId", "body", m.DeviceID, 256); err != nil {
		return err
	}

	if err := validate.Pattern("deviceId", "body", m.DeviceID, `[a-zA-Z0-9][a-zA-Z0-9_.-]+`); err != nil {
		return err
	}

	return nil
}

func (m *OpaqueAppInstanceStatus) validateID(formats strfmt.Registry) error {
	if swag.IsZero(m.ID) { // not required
		return nil
	}

	if err := validate.Pattern("id", "body", m.ID, `[0-9A-Za-z-]+`); err != nil {
		return err
	}

	return nil
}

func (m *OpaqueAppInstanceStatus) validateLastUpdateTime(formats strfmt.Registry) error {
	if swag.IsZero(m.LastUpdateTime) { // not required
		return nil
	}

	if err := validate.FormatOf("lastUpdateTime", "body", "date-time", m.LastUpdateTime.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this opaque app instance status based on context it is used
func (m *OpaqueAppInstanceStatus) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OpaqueAppInstanceStatus) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OpaqueAppInstanceStatus) UnmarshalBinary(b []byte) error {
	var res OpaqueAppInstanceStatus
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
