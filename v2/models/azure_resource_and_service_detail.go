// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AzureResourceAndServiceDetail azure resource and service detail
//
// swagger:model AzureResourceAndServiceDetail
type AzureResourceAndServiceDetail struct {

	// s k u
	SKU *SKUDetail `json:"SKU,omitempty"`

	// create by default
	CreateByDefault bool `json:"createByDefault,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// region
	Region string `json:"region,omitempty"`

	// resource group name
	ResourceGroupName string `json:"resourceGroupName,omitempty"`

	// subscription Id
	SubscriptionID string `json:"subscriptionId,omitempty"`
}

// Validate validates this azure resource and service detail
func (m *AzureResourceAndServiceDetail) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSKU(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AzureResourceAndServiceDetail) validateSKU(formats strfmt.Registry) error {
	if swag.IsZero(m.SKU) { // not required
		return nil
	}

	if m.SKU != nil {
		if err := m.SKU.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("SKU")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("SKU")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this azure resource and service detail based on the context it is used
func (m *AzureResourceAndServiceDetail) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateSKU(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AzureResourceAndServiceDetail) contextValidateSKU(ctx context.Context, formats strfmt.Registry) error {

	if m.SKU != nil {
		if err := m.SKU.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("SKU")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("SKU")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AzureResourceAndServiceDetail) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AzureResourceAndServiceDetail) UnmarshalBinary(b []byte) error {
	var res AzureResourceAndServiceDetail
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
