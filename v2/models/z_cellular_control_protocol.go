// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ZCellularControlProtocol z cellular control protocol
//
// swagger:model ZCellularControlProtocol
type ZCellularControlProtocol string

func NewZCellularControlProtocol(value ZCellularControlProtocol) *ZCellularControlProtocol {
	return &value
}

// Pointer returns a pointer to a freshly-allocated ZCellularControlProtocol.
func (m ZCellularControlProtocol) Pointer() *ZCellularControlProtocol {
	return &m
}

const (

	// ZCellularControlProtocolZCELLULARCONTROLPROTOCOLUNSPECIFIED captures enum value "Z_CELLULAR_CONTROL_PROTOCOL_UNSPECIFIED"
	ZCellularControlProtocolZCELLULARCONTROLPROTOCOLUNSPECIFIED ZCellularControlProtocol = "Z_CELLULAR_CONTROL_PROTOCOL_UNSPECIFIED"

	// ZCellularControlProtocolZCELLULARCONTROLPROTOCOLQMI captures enum value "Z_CELLULAR_CONTROL_PROTOCOL_QMI"
	ZCellularControlProtocolZCELLULARCONTROLPROTOCOLQMI ZCellularControlProtocol = "Z_CELLULAR_CONTROL_PROTOCOL_QMI"

	// ZCellularControlProtocolZCELLULARCONTROLPROTOCOLMBIM captures enum value "Z_CELLULAR_CONTROL_PROTOCOL_MBIM"
	ZCellularControlProtocolZCELLULARCONTROLPROTOCOLMBIM ZCellularControlProtocol = "Z_CELLULAR_CONTROL_PROTOCOL_MBIM"
)

// for schema
var zCellularControlProtocolEnum []interface{}

func init() {
	var res []ZCellularControlProtocol
	if err := json.Unmarshal([]byte(`["Z_CELLULAR_CONTROL_PROTOCOL_UNSPECIFIED","Z_CELLULAR_CONTROL_PROTOCOL_QMI","Z_CELLULAR_CONTROL_PROTOCOL_MBIM"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		zCellularControlProtocolEnum = append(zCellularControlProtocolEnum, v)
	}
}

func (m ZCellularControlProtocol) validateZCellularControlProtocolEnum(path, location string, value ZCellularControlProtocol) error {
	if err := validate.EnumCase(path, location, value, zCellularControlProtocolEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this z cellular control protocol
func (m ZCellularControlProtocol) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateZCellularControlProtocolEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this z cellular control protocol based on context it is used
func (m ZCellularControlProtocol) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
