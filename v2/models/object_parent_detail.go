// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ObjectParentDetail Object Import Detail
//
// # ObjectImportDetail consists of various object attributes like idOfParentObject, versionOfParentObject, updateAvailable, referenceExists
//
// swagger:model ObjectParentDetail
type ObjectParentDetail struct {

	// system defined unique id of parent object
	// Required: true
	// Read Only: true
	// Pattern: [0-9A-Za-z-]+
	IDOfParentObject string `json:"idOfParentObject"`

	// Relation with child and parent object exists or not
	ReferenceExists bool `json:"referenceExists,omitempty"`

	// Update required flag
	UpdateAvailable bool `json:"updateAvailable,omitempty"`

	// version of object present in parent
	// Read Only: true
	VersionOfParentObject int64 `json:"versionOfParentObject,omitempty"`
}

// Validate validates this object parent detail
func (m *ObjectParentDetail) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIDOfParentObject(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ObjectParentDetail) validateIDOfParentObject(formats strfmt.Registry) error {

	if err := validate.RequiredString("idOfParentObject", "body", m.IDOfParentObject); err != nil {
		return err
	}

	if err := validate.Pattern("idOfParentObject", "body", m.IDOfParentObject, `[0-9A-Za-z-]+`); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this object parent detail based on the context it is used
func (m *ObjectParentDetail) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateIDOfParentObject(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateVersionOfParentObject(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ObjectParentDetail) contextValidateIDOfParentObject(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "idOfParentObject", "body", string(m.IDOfParentObject)); err != nil {
		return err
	}

	return nil
}

func (m *ObjectParentDetail) contextValidateVersionOfParentObject(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "versionOfParentObject", "body", int64(m.VersionOfParentObject)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ObjectParentDetail) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ObjectParentDetail) UnmarshalBinary(b []byte) error {
	var res ObjectParentDetail
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
