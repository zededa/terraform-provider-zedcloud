// Code generated by go-swagger; DO NOT EDIT.

package cluster

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/terraform-provider-zedcloud/v2/models"
)

// DeleteReader is a Reader for the Delete structure.
type DeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 412:
		result := NewDeletePreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeleteGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteOK creates a DeleteOK with default headers values
func NewDeleteOK() *DeleteOK {
	return &DeleteOK{}
}

/*
DeleteOK describes a response with status code 200, with default header values.

A successful response.
*/
type DeleteOK struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this edge node cluster configuration delete cluster o k response has a 2xx status code
func (o *DeleteOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this edge node cluster configuration delete cluster o k response has a 3xx status code
func (o *DeleteOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edge node cluster configuration delete cluster o k response has a 4xx status code
func (o *DeleteOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this edge node cluster configuration delete cluster o k response has a 5xx status code
func (o *DeleteOK) IsServerError() bool {
	return false
}

// IsCode returns true when this edge node cluster configuration delete cluster o k response a status code equal to that given
func (o *DeleteOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the edge node cluster configuration delete cluster o k response
func (o *DeleteOK) Code() int {
	return 200
}

func (o *DeleteOK) Error() string {
	return fmt.Sprintf("[DELETE /v1/cluster/id/{id}][%d] edgeNodeConfigurationDeleteOK  %+v", 200, o.Payload)
}

func (o *DeleteOK) String() string {
	return fmt.Sprintf("[DELETE /v1/cluster/id/{id}][%d] edgeNodeConfigurationDeleteOK  %+v", 200, o.Payload)
}

func (o *DeleteOK) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *DeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteBadRequest creates a DeleteBadRequest with default headers values
func NewDeleteBadRequest() *DeleteBadRequest {
	return &DeleteBadRequest{}
}

/*
DeleteBadRequest describes a response with status code 400, with default header values.

Bad Request. The API gateway did not process the request because of missing parameter or invalid value of parameters.
*/
type DeleteBadRequest struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this edge node cluster configuration delete cluster bad request response has a 2xx status code
func (o *DeleteBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edge node cluster configuration delete cluster bad request response has a 3xx status code
func (o *DeleteBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edge node cluster configuration delete cluster bad request response has a 4xx status code
func (o *DeleteBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this edge node cluster configuration delete cluster bad request response has a 5xx status code
func (o *DeleteBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this edge node cluster configuration delete cluster bad request response a status code equal to that given
func (o *DeleteBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the edge node cluster configuration delete cluster bad request response
func (o *DeleteBadRequest) Code() int {
	return 400
}

func (o *DeleteBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /v1/cluster/id/{id}][%d] edgeNodeConfigurationDeleteBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteBadRequest) String() string {
	return fmt.Sprintf("[DELETE /v1/cluster/id/{id}][%d] edgeNodeConfigurationDeleteBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteBadRequest) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *DeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUnauthorized creates a DeleteUnauthorized with default headers values
func NewDeleteUnauthorized() *DeleteUnauthorized {
	return &DeleteUnauthorized{}
}

/*
DeleteUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type DeleteUnauthorized struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this edge node cluster configuration delete cluster unauthorized response has a 2xx status code
func (o *DeleteUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edge node cluster configuration delete cluster unauthorized response has a 3xx status code
func (o *DeleteUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edge node cluster configuration delete cluster unauthorized response has a 4xx status code
func (o *DeleteUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this edge node cluster configuration delete cluster unauthorized response has a 5xx status code
func (o *DeleteUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this edge node cluster configuration delete cluster unauthorized response a status code equal to that given
func (o *DeleteUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the edge node cluster configuration delete cluster unauthorized response
func (o *DeleteUnauthorized) Code() int {
	return 401
}

func (o *DeleteUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /v1/cluster/id/{id}][%d] edgeNodeConfigurationDeleteUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /v1/cluster/id/{id}][%d] edgeNodeConfigurationDeleteUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteUnauthorized) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *DeleteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteForbidden creates a DeleteForbidden with default headers values
func NewDeleteForbidden() *DeleteForbidden {
	return &DeleteForbidden{}
}

/*
DeleteForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.
*/
type DeleteForbidden struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this edge node cluster configuration delete cluster forbidden response has a 2xx status code
func (o *DeleteForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edge node cluster configuration delete cluster forbidden response has a 3xx status code
func (o *DeleteForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edge node cluster configuration delete cluster forbidden response has a 4xx status code
func (o *DeleteForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this edge node cluster configuration delete cluster forbidden response has a 5xx status code
func (o *DeleteForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this edge node cluster configuration delete cluster forbidden response a status code equal to that given
func (o *DeleteForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the edge node cluster configuration delete cluster forbidden response
func (o *DeleteForbidden) Code() int {
	return 403
}

func (o *DeleteForbidden) Error() string {
	return fmt.Sprintf("[DELETE /v1/cluster/id/{id}][%d] edgeNodeConfigurationDeleteForbidden  %+v", 403, o.Payload)
}

func (o *DeleteForbidden) String() string {
	return fmt.Sprintf("[DELETE /v1/cluster/id/{id}][%d] edgeNodeConfigurationDeleteForbidden  %+v", 403, o.Payload)
}

func (o *DeleteForbidden) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *DeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteNotFound creates a DeleteNotFound with default headers values
func NewDeleteNotFound() *DeleteNotFound {
	return &DeleteNotFound{}
}

/*
DeleteNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type DeleteNotFound struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this edge node cluster configuration delete cluster not found response has a 2xx status code
func (o *DeleteNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edge node cluster configuration delete cluster not found response has a 3xx status code
func (o *DeleteNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edge node cluster configuration delete cluster not found response has a 4xx status code
func (o *DeleteNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this edge node cluster configuration delete cluster not found response has a 5xx status code
func (o *DeleteNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this edge node cluster configuration delete cluster not found response a status code equal to that given
func (o *DeleteNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the edge node cluster configuration delete cluster not found response
func (o *DeleteNotFound) Code() int {
	return 404
}

func (o *DeleteNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/cluster/id/{id}][%d] edgeNodeConfigurationDeleteNotFound  %+v", 404, o.Payload)
}

func (o *DeleteNotFound) String() string {
	return fmt.Sprintf("[DELETE /v1/cluster/id/{id}][%d] edgeNodeConfigurationDeleteNotFound  %+v", 404, o.Payload)
}

func (o *DeleteNotFound) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *DeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteConflict creates a DeleteConflict with default headers values
func NewDeleteConflict() *DeleteConflict {
	return &DeleteConflict{}
}

/*
DeleteConflict describes a response with status code 409, with default header values.

Conflict. The API gateway did not process the request because this edge-node cluster record will conflict with an already existing edge-node cluster record.
*/
type DeleteConflict struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this edge node cluster configuration delete cluster conflict response has a 2xx status code
func (o *DeleteConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edge node cluster configuration delete cluster conflict response has a 3xx status code
func (o *DeleteConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edge node cluster configuration delete cluster conflict response has a 4xx status code
func (o *DeleteConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this edge node cluster configuration delete cluster conflict response has a 5xx status code
func (o *DeleteConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this edge node cluster configuration delete cluster conflict response a status code equal to that given
func (o *DeleteConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the edge node cluster configuration delete cluster conflict response
func (o *DeleteConflict) Code() int {
	return 409
}

func (o *DeleteConflict) Error() string {
	return fmt.Sprintf("[DELETE /v1/cluster/id/{id}][%d] edgeNodeConfigurationDeleteConflict  %+v", 409, o.Payload)
}

func (o *DeleteConflict) String() string {
	return fmt.Sprintf("[DELETE /v1/cluster/id/{id}][%d] edgeNodeConfigurationDeleteConflict  %+v", 409, o.Payload)
}

func (o *DeleteConflict) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *DeleteConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePreconditionFailed creates a DeletePreconditionFailed with default headers values
func NewDeletePreconditionFailed() *DeletePreconditionFailed {
	return &DeletePreconditionFailed{}
}

/*
DeletePreconditionFailed describes a response with status code 412, with default header values.

Precondition failed. Some of preconditions haven't been met to start request processing.
*/
type DeletePreconditionFailed struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this edge node cluster configuration delete cluster precondition failed response has a 2xx status code
func (o *DeletePreconditionFailed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edge node cluster configuration delete cluster precondition failed response has a 3xx status code
func (o *DeletePreconditionFailed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edge node cluster configuration delete cluster precondition failed response has a 4xx status code
func (o *DeletePreconditionFailed) IsClientError() bool {
	return true
}

// IsServerError returns true when this edge node cluster configuration delete cluster precondition failed response has a 5xx status code
func (o *DeletePreconditionFailed) IsServerError() bool {
	return false
}

// IsCode returns true when this edge node cluster configuration delete cluster precondition failed response a status code equal to that given
func (o *DeletePreconditionFailed) IsCode(code int) bool {
	return code == 412
}

// Code gets the status code for the edge node cluster configuration delete cluster precondition failed response
func (o *DeletePreconditionFailed) Code() int {
	return 412
}

func (o *DeletePreconditionFailed) Error() string {
	return fmt.Sprintf("[DELETE /v1/cluster/id/{id}][%d] edgeNodeConfigurationDeletePreconditionFailed  %+v", 412, o.Payload)
}

func (o *DeletePreconditionFailed) String() string {
	return fmt.Sprintf("[DELETE /v1/cluster/id/{id}][%d] edgeNodeConfigurationDeletePreconditionFailed  %+v", 412, o.Payload)
}

func (o *DeletePreconditionFailed) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *DeletePreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteInternalServerError creates a DeleteInternalServerError with default headers values
func NewDeleteInternalServerError() *DeleteInternalServerError {
	return &DeleteInternalServerError{}
}

/*
DeleteInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type DeleteInternalServerError struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this edge node cluster configuration delete cluster internal server error response has a 2xx status code
func (o *DeleteInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edge node cluster configuration delete cluster internal server error response has a 3xx status code
func (o *DeleteInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edge node cluster configuration delete cluster internal server error response has a 4xx status code
func (o *DeleteInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this edge node cluster configuration delete cluster internal server error response has a 5xx status code
func (o *DeleteInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this edge node cluster configuration delete cluster internal server error response a status code equal to that given
func (o *DeleteInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the edge node cluster configuration delete cluster internal server error response
func (o *DeleteInternalServerError) Code() int {
	return 500
}

func (o *DeleteInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /v1/cluster/id/{id}][%d] edgeNodeConfigurationDeleteInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /v1/cluster/id/{id}][%d] edgeNodeConfigurationDeleteInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteInternalServerError) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *DeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteGatewayTimeout creates a DeleteGatewayTimeout with default headers values
func NewDeleteGatewayTimeout() *DeleteGatewayTimeout {
	return &DeleteGatewayTimeout{}
}

/*
DeleteGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type DeleteGatewayTimeout struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this edge node cluster configuration delete cluster gateway timeout response has a 2xx status code
func (o *DeleteGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edge node cluster configuration delete cluster gateway timeout response has a 3xx status code
func (o *DeleteGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edge node cluster configuration delete cluster gateway timeout response has a 4xx status code
func (o *DeleteGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this edge node cluster configuration delete cluster gateway timeout response has a 5xx status code
func (o *DeleteGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this edge node cluster configuration delete cluster gateway timeout response a status code equal to that given
func (o *DeleteGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the edge node cluster configuration delete cluster gateway timeout response
func (o *DeleteGatewayTimeout) Code() int {
	return 504
}

func (o *DeleteGatewayTimeout) Error() string {
	return fmt.Sprintf("[DELETE /v1/cluster/id/{id}][%d] edgeNodeConfigurationDeleteGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteGatewayTimeout) String() string {
	return fmt.Sprintf("[DELETE /v1/cluster/id/{id}][%d] edgeNodeConfigurationDeleteGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeleteGatewayTimeout) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *DeleteGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDefault creates a DeleteDefault with default headers values
func NewDeleteDefault(code int) *DeleteDefault {
	return &DeleteDefault{
		_statusCode: code,
	}
}

/*
DeleteDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type DeleteDefault struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// IsSuccess returns true when this edge node cluster configuration delete cluster default response has a 2xx status code
func (o *DeleteDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this edge node cluster configuration delete cluster default response has a 3xx status code
func (o *DeleteDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this edge node cluster configuration delete cluster default response has a 4xx status code
func (o *DeleteDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this edge node cluster configuration delete cluster default response has a 5xx status code
func (o *DeleteDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this edge node cluster configuration delete cluster default response a status code equal to that given
func (o *DeleteDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the edge node cluster configuration delete cluster default response
func (o *DeleteDefault) Code() int {
	return o._statusCode
}

func (o *DeleteDefault) Error() string {
	return fmt.Sprintf("[DELETE /v1/cluster/id/{id}][%d] _Delete default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteDefault) String() string {
	return fmt.Sprintf("[DELETE /v1/cluster/id/{id}][%d] _Delete default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteDefault) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *DeleteDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
