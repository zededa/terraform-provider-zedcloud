// Code generated by go-swagger; DO NOT EDIT.

package app_profile_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/zededa/terraform-provider-zedcloud/v2/models"
)

// AppProfileServiceUpdateAppProfileReader is a Reader for the AppProfileServiceUpdateAppProfile structure.
type AppProfileServiceUpdateAppProfileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AppProfileServiceUpdateAppProfileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAppProfileServiceUpdateAppProfileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewAppProfileServiceUpdateAppProfileUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAppProfileServiceUpdateAppProfileForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAppProfileServiceUpdateAppProfileNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewAppProfileServiceUpdateAppProfileConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAppProfileServiceUpdateAppProfileInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewAppProfileServiceUpdateAppProfileGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewAppProfileServiceUpdateAppProfileDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAppProfileServiceUpdateAppProfileOK creates a AppProfileServiceUpdateAppProfileOK with default headers values
func NewAppProfileServiceUpdateAppProfileOK() *AppProfileServiceUpdateAppProfileOK {
	return &AppProfileServiceUpdateAppProfileOK{}
}

/*
AppProfileServiceUpdateAppProfileOK describes a response with status code 200, with default header values.

A successful response.
*/
type AppProfileServiceUpdateAppProfileOK struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this app profile service update app profile o k response has a 2xx status code
func (o *AppProfileServiceUpdateAppProfileOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this app profile service update app profile o k response has a 3xx status code
func (o *AppProfileServiceUpdateAppProfileOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this app profile service update app profile o k response has a 4xx status code
func (o *AppProfileServiceUpdateAppProfileOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this app profile service update app profile o k response has a 5xx status code
func (o *AppProfileServiceUpdateAppProfileOK) IsServerError() bool {
	return false
}

// IsCode returns true when this app profile service update app profile o k response a status code equal to that given
func (o *AppProfileServiceUpdateAppProfileOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the app profile service update app profile o k response
func (o *AppProfileServiceUpdateAppProfileOK) Code() int {
	return 200
}

func (o *AppProfileServiceUpdateAppProfileOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/appprofiles/id/{id}][%d] appProfileServiceUpdateAppProfileOK %s", 200, payload)
}

func (o *AppProfileServiceUpdateAppProfileOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/appprofiles/id/{id}][%d] appProfileServiceUpdateAppProfileOK %s", 200, payload)
}

func (o *AppProfileServiceUpdateAppProfileOK) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *AppProfileServiceUpdateAppProfileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAppProfileServiceUpdateAppProfileUnauthorized creates a AppProfileServiceUpdateAppProfileUnauthorized with default headers values
func NewAppProfileServiceUpdateAppProfileUnauthorized() *AppProfileServiceUpdateAppProfileUnauthorized {
	return &AppProfileServiceUpdateAppProfileUnauthorized{}
}

/*
AppProfileServiceUpdateAppProfileUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type AppProfileServiceUpdateAppProfileUnauthorized struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this app profile service update app profile unauthorized response has a 2xx status code
func (o *AppProfileServiceUpdateAppProfileUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this app profile service update app profile unauthorized response has a 3xx status code
func (o *AppProfileServiceUpdateAppProfileUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this app profile service update app profile unauthorized response has a 4xx status code
func (o *AppProfileServiceUpdateAppProfileUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this app profile service update app profile unauthorized response has a 5xx status code
func (o *AppProfileServiceUpdateAppProfileUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this app profile service update app profile unauthorized response a status code equal to that given
func (o *AppProfileServiceUpdateAppProfileUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the app profile service update app profile unauthorized response
func (o *AppProfileServiceUpdateAppProfileUnauthorized) Code() int {
	return 401
}

func (o *AppProfileServiceUpdateAppProfileUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/appprofiles/id/{id}][%d] appProfileServiceUpdateAppProfileUnauthorized %s", 401, payload)
}

func (o *AppProfileServiceUpdateAppProfileUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/appprofiles/id/{id}][%d] appProfileServiceUpdateAppProfileUnauthorized %s", 401, payload)
}

func (o *AppProfileServiceUpdateAppProfileUnauthorized) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *AppProfileServiceUpdateAppProfileUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAppProfileServiceUpdateAppProfileForbidden creates a AppProfileServiceUpdateAppProfileForbidden with default headers values
func NewAppProfileServiceUpdateAppProfileForbidden() *AppProfileServiceUpdateAppProfileForbidden {
	return &AppProfileServiceUpdateAppProfileForbidden{}
}

/*
AppProfileServiceUpdateAppProfileForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.
*/
type AppProfileServiceUpdateAppProfileForbidden struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this app profile service update app profile forbidden response has a 2xx status code
func (o *AppProfileServiceUpdateAppProfileForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this app profile service update app profile forbidden response has a 3xx status code
func (o *AppProfileServiceUpdateAppProfileForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this app profile service update app profile forbidden response has a 4xx status code
func (o *AppProfileServiceUpdateAppProfileForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this app profile service update app profile forbidden response has a 5xx status code
func (o *AppProfileServiceUpdateAppProfileForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this app profile service update app profile forbidden response a status code equal to that given
func (o *AppProfileServiceUpdateAppProfileForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the app profile service update app profile forbidden response
func (o *AppProfileServiceUpdateAppProfileForbidden) Code() int {
	return 403
}

func (o *AppProfileServiceUpdateAppProfileForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/appprofiles/id/{id}][%d] appProfileServiceUpdateAppProfileForbidden %s", 403, payload)
}

func (o *AppProfileServiceUpdateAppProfileForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/appprofiles/id/{id}][%d] appProfileServiceUpdateAppProfileForbidden %s", 403, payload)
}

func (o *AppProfileServiceUpdateAppProfileForbidden) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *AppProfileServiceUpdateAppProfileForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAppProfileServiceUpdateAppProfileNotFound creates a AppProfileServiceUpdateAppProfileNotFound with default headers values
func NewAppProfileServiceUpdateAppProfileNotFound() *AppProfileServiceUpdateAppProfileNotFound {
	return &AppProfileServiceUpdateAppProfileNotFound{}
}

/*
AppProfileServiceUpdateAppProfileNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type AppProfileServiceUpdateAppProfileNotFound struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this app profile service update app profile not found response has a 2xx status code
func (o *AppProfileServiceUpdateAppProfileNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this app profile service update app profile not found response has a 3xx status code
func (o *AppProfileServiceUpdateAppProfileNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this app profile service update app profile not found response has a 4xx status code
func (o *AppProfileServiceUpdateAppProfileNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this app profile service update app profile not found response has a 5xx status code
func (o *AppProfileServiceUpdateAppProfileNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this app profile service update app profile not found response a status code equal to that given
func (o *AppProfileServiceUpdateAppProfileNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the app profile service update app profile not found response
func (o *AppProfileServiceUpdateAppProfileNotFound) Code() int {
	return 404
}

func (o *AppProfileServiceUpdateAppProfileNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/appprofiles/id/{id}][%d] appProfileServiceUpdateAppProfileNotFound %s", 404, payload)
}

func (o *AppProfileServiceUpdateAppProfileNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/appprofiles/id/{id}][%d] appProfileServiceUpdateAppProfileNotFound %s", 404, payload)
}

func (o *AppProfileServiceUpdateAppProfileNotFound) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *AppProfileServiceUpdateAppProfileNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAppProfileServiceUpdateAppProfileConflict creates a AppProfileServiceUpdateAppProfileConflict with default headers values
func NewAppProfileServiceUpdateAppProfileConflict() *AppProfileServiceUpdateAppProfileConflict {
	return &AppProfileServiceUpdateAppProfileConflict{}
}

/*
AppProfileServiceUpdateAppProfileConflict describes a response with status code 409, with default header values.

Conflict. The API gateway did not process the request because this operation will conflict with an already existing app profile record.
*/
type AppProfileServiceUpdateAppProfileConflict struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this app profile service update app profile conflict response has a 2xx status code
func (o *AppProfileServiceUpdateAppProfileConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this app profile service update app profile conflict response has a 3xx status code
func (o *AppProfileServiceUpdateAppProfileConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this app profile service update app profile conflict response has a 4xx status code
func (o *AppProfileServiceUpdateAppProfileConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this app profile service update app profile conflict response has a 5xx status code
func (o *AppProfileServiceUpdateAppProfileConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this app profile service update app profile conflict response a status code equal to that given
func (o *AppProfileServiceUpdateAppProfileConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the app profile service update app profile conflict response
func (o *AppProfileServiceUpdateAppProfileConflict) Code() int {
	return 409
}

func (o *AppProfileServiceUpdateAppProfileConflict) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/appprofiles/id/{id}][%d] appProfileServiceUpdateAppProfileConflict %s", 409, payload)
}

func (o *AppProfileServiceUpdateAppProfileConflict) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/appprofiles/id/{id}][%d] appProfileServiceUpdateAppProfileConflict %s", 409, payload)
}

func (o *AppProfileServiceUpdateAppProfileConflict) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *AppProfileServiceUpdateAppProfileConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAppProfileServiceUpdateAppProfileInternalServerError creates a AppProfileServiceUpdateAppProfileInternalServerError with default headers values
func NewAppProfileServiceUpdateAppProfileInternalServerError() *AppProfileServiceUpdateAppProfileInternalServerError {
	return &AppProfileServiceUpdateAppProfileInternalServerError{}
}

/*
AppProfileServiceUpdateAppProfileInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type AppProfileServiceUpdateAppProfileInternalServerError struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this app profile service update app profile internal server error response has a 2xx status code
func (o *AppProfileServiceUpdateAppProfileInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this app profile service update app profile internal server error response has a 3xx status code
func (o *AppProfileServiceUpdateAppProfileInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this app profile service update app profile internal server error response has a 4xx status code
func (o *AppProfileServiceUpdateAppProfileInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this app profile service update app profile internal server error response has a 5xx status code
func (o *AppProfileServiceUpdateAppProfileInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this app profile service update app profile internal server error response a status code equal to that given
func (o *AppProfileServiceUpdateAppProfileInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the app profile service update app profile internal server error response
func (o *AppProfileServiceUpdateAppProfileInternalServerError) Code() int {
	return 500
}

func (o *AppProfileServiceUpdateAppProfileInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/appprofiles/id/{id}][%d] appProfileServiceUpdateAppProfileInternalServerError %s", 500, payload)
}

func (o *AppProfileServiceUpdateAppProfileInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/appprofiles/id/{id}][%d] appProfileServiceUpdateAppProfileInternalServerError %s", 500, payload)
}

func (o *AppProfileServiceUpdateAppProfileInternalServerError) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *AppProfileServiceUpdateAppProfileInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAppProfileServiceUpdateAppProfileGatewayTimeout creates a AppProfileServiceUpdateAppProfileGatewayTimeout with default headers values
func NewAppProfileServiceUpdateAppProfileGatewayTimeout() *AppProfileServiceUpdateAppProfileGatewayTimeout {
	return &AppProfileServiceUpdateAppProfileGatewayTimeout{}
}

/*
AppProfileServiceUpdateAppProfileGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type AppProfileServiceUpdateAppProfileGatewayTimeout struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this app profile service update app profile gateway timeout response has a 2xx status code
func (o *AppProfileServiceUpdateAppProfileGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this app profile service update app profile gateway timeout response has a 3xx status code
func (o *AppProfileServiceUpdateAppProfileGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this app profile service update app profile gateway timeout response has a 4xx status code
func (o *AppProfileServiceUpdateAppProfileGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this app profile service update app profile gateway timeout response has a 5xx status code
func (o *AppProfileServiceUpdateAppProfileGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this app profile service update app profile gateway timeout response a status code equal to that given
func (o *AppProfileServiceUpdateAppProfileGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the app profile service update app profile gateway timeout response
func (o *AppProfileServiceUpdateAppProfileGatewayTimeout) Code() int {
	return 504
}

func (o *AppProfileServiceUpdateAppProfileGatewayTimeout) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/appprofiles/id/{id}][%d] appProfileServiceUpdateAppProfileGatewayTimeout %s", 504, payload)
}

func (o *AppProfileServiceUpdateAppProfileGatewayTimeout) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/appprofiles/id/{id}][%d] appProfileServiceUpdateAppProfileGatewayTimeout %s", 504, payload)
}

func (o *AppProfileServiceUpdateAppProfileGatewayTimeout) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *AppProfileServiceUpdateAppProfileGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAppProfileServiceUpdateAppProfileDefault creates a AppProfileServiceUpdateAppProfileDefault with default headers values
func NewAppProfileServiceUpdateAppProfileDefault(code int) *AppProfileServiceUpdateAppProfileDefault {
	return &AppProfileServiceUpdateAppProfileDefault{
		_statusCode: code,
	}
}

/*
AppProfileServiceUpdateAppProfileDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type AppProfileServiceUpdateAppProfileDefault struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// IsSuccess returns true when this app profile service update app profile default response has a 2xx status code
func (o *AppProfileServiceUpdateAppProfileDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this app profile service update app profile default response has a 3xx status code
func (o *AppProfileServiceUpdateAppProfileDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this app profile service update app profile default response has a 4xx status code
func (o *AppProfileServiceUpdateAppProfileDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this app profile service update app profile default response has a 5xx status code
func (o *AppProfileServiceUpdateAppProfileDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this app profile service update app profile default response a status code equal to that given
func (o *AppProfileServiceUpdateAppProfileDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the app profile service update app profile default response
func (o *AppProfileServiceUpdateAppProfileDefault) Code() int {
	return o._statusCode
}

func (o *AppProfileServiceUpdateAppProfileDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/appprofiles/id/{id}][%d] AppProfileService_UpdateAppProfile default %s", o._statusCode, payload)
}

func (o *AppProfileServiceUpdateAppProfileDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/appprofiles/id/{id}][%d] AppProfileService_UpdateAppProfile default %s", o._statusCode, payload)
}

func (o *AppProfileServiceUpdateAppProfileDefault) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *AppProfileServiceUpdateAppProfileDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
AppProfileServiceUpdateAppProfileBody app profile service update app profile body
swagger:model AppProfileServiceUpdateAppProfileBody
*/
type AppProfileServiceUpdateAppProfileBody struct {

	// list of app instance policies
	AppPolicies []*models.ProfileAppPolicy `json:"appPolicies"`

	// user defined name for the App profile
	Name string `json:"name,omitempty"`

	// list of network instance policies
	NetworkPolicies []*models.ProfileNetworkPolicy `json:"networkPolicies"`

	// user defined title for the app profile
	Title string `json:"title,omitempty"`

	// list of volume instance policies
	VolumePolicies []*models.ProfileVolumePolicy `json:"volumePolicies"`
}

// Validate validates this app profile service update app profile body
func (o *AppProfileServiceUpdateAppProfileBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAppPolicies(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateNetworkPolicies(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateVolumePolicies(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AppProfileServiceUpdateAppProfileBody) validateAppPolicies(formats strfmt.Registry) error {
	if swag.IsZero(o.AppPolicies) { // not required
		return nil
	}

	for i := 0; i < len(o.AppPolicies); i++ {
		if swag.IsZero(o.AppPolicies[i]) { // not required
			continue
		}

		if o.AppPolicies[i] != nil {
			if err := o.AppPolicies[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("body" + "." + "appPolicies" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("body" + "." + "appPolicies" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *AppProfileServiceUpdateAppProfileBody) validateNetworkPolicies(formats strfmt.Registry) error {
	if swag.IsZero(o.NetworkPolicies) { // not required
		return nil
	}

	for i := 0; i < len(o.NetworkPolicies); i++ {
		if swag.IsZero(o.NetworkPolicies[i]) { // not required
			continue
		}

		if o.NetworkPolicies[i] != nil {
			if err := o.NetworkPolicies[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("body" + "." + "networkPolicies" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("body" + "." + "networkPolicies" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *AppProfileServiceUpdateAppProfileBody) validateVolumePolicies(formats strfmt.Registry) error {
	if swag.IsZero(o.VolumePolicies) { // not required
		return nil
	}

	for i := 0; i < len(o.VolumePolicies); i++ {
		if swag.IsZero(o.VolumePolicies[i]) { // not required
			continue
		}

		if o.VolumePolicies[i] != nil {
			if err := o.VolumePolicies[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("body" + "." + "volumePolicies" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("body" + "." + "volumePolicies" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this app profile service update app profile body based on the context it is used
func (o *AppProfileServiceUpdateAppProfileBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateAppPolicies(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateNetworkPolicies(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateVolumePolicies(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AppProfileServiceUpdateAppProfileBody) contextValidateAppPolicies(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.AppPolicies); i++ {

		if o.AppPolicies[i] != nil {

			if swag.IsZero(o.AppPolicies[i]) { // not required
				return nil
			}

			if err := o.AppPolicies[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("body" + "." + "appPolicies" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("body" + "." + "appPolicies" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *AppProfileServiceUpdateAppProfileBody) contextValidateNetworkPolicies(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.NetworkPolicies); i++ {

		if o.NetworkPolicies[i] != nil {

			if swag.IsZero(o.NetworkPolicies[i]) { // not required
				return nil
			}

			if err := o.NetworkPolicies[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("body" + "." + "networkPolicies" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("body" + "." + "networkPolicies" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *AppProfileServiceUpdateAppProfileBody) contextValidateVolumePolicies(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.VolumePolicies); i++ {

		if o.VolumePolicies[i] != nil {

			if swag.IsZero(o.VolumePolicies[i]) { // not required
				return nil
			}

			if err := o.VolumePolicies[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("body" + "." + "volumePolicies" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("body" + "." + "volumePolicies" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *AppProfileServiceUpdateAppProfileBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AppProfileServiceUpdateAppProfileBody) UnmarshalBinary(b []byte) error {
	var res AppProfileServiceUpdateAppProfileBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
