// Code generated by go-swagger; DO NOT EDIT.

package profile_deployment_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/zededa/terraform-provider-zedcloud/v2/models"
)

// ProfileDeploymentServiceUpdateProfileDeploymentReader is a Reader for the ProfileDeploymentServiceUpdateProfileDeployment structure.
type ProfileDeploymentServiceUpdateProfileDeploymentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProfileDeploymentServiceUpdateProfileDeploymentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProfileDeploymentServiceUpdateProfileDeploymentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewProfileDeploymentServiceUpdateProfileDeploymentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewProfileDeploymentServiceUpdateProfileDeploymentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewProfileDeploymentServiceUpdateProfileDeploymentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewProfileDeploymentServiceUpdateProfileDeploymentConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewProfileDeploymentServiceUpdateProfileDeploymentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewProfileDeploymentServiceUpdateProfileDeploymentGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewProfileDeploymentServiceUpdateProfileDeploymentDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewProfileDeploymentServiceUpdateProfileDeploymentOK creates a ProfileDeploymentServiceUpdateProfileDeploymentOK with default headers values
func NewProfileDeploymentServiceUpdateProfileDeploymentOK() *ProfileDeploymentServiceUpdateProfileDeploymentOK {
	return &ProfileDeploymentServiceUpdateProfileDeploymentOK{}
}

/*
ProfileDeploymentServiceUpdateProfileDeploymentOK describes a response with status code 200, with default header values.

A successful response.
*/
type ProfileDeploymentServiceUpdateProfileDeploymentOK struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this profile deployment service update profile deployment o k response has a 2xx status code
func (o *ProfileDeploymentServiceUpdateProfileDeploymentOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this profile deployment service update profile deployment o k response has a 3xx status code
func (o *ProfileDeploymentServiceUpdateProfileDeploymentOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this profile deployment service update profile deployment o k response has a 4xx status code
func (o *ProfileDeploymentServiceUpdateProfileDeploymentOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this profile deployment service update profile deployment o k response has a 5xx status code
func (o *ProfileDeploymentServiceUpdateProfileDeploymentOK) IsServerError() bool {
	return false
}

// IsCode returns true when this profile deployment service update profile deployment o k response a status code equal to that given
func (o *ProfileDeploymentServiceUpdateProfileDeploymentOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the profile deployment service update profile deployment o k response
func (o *ProfileDeploymentServiceUpdateProfileDeploymentOK) Code() int {
	return 200
}

func (o *ProfileDeploymentServiceUpdateProfileDeploymentOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/profiledeployments/id/{id}][%d] profileDeploymentServiceUpdateProfileDeploymentOK %s", 200, payload)
}

func (o *ProfileDeploymentServiceUpdateProfileDeploymentOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/profiledeployments/id/{id}][%d] profileDeploymentServiceUpdateProfileDeploymentOK %s", 200, payload)
}

func (o *ProfileDeploymentServiceUpdateProfileDeploymentOK) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ProfileDeploymentServiceUpdateProfileDeploymentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProfileDeploymentServiceUpdateProfileDeploymentUnauthorized creates a ProfileDeploymentServiceUpdateProfileDeploymentUnauthorized with default headers values
func NewProfileDeploymentServiceUpdateProfileDeploymentUnauthorized() *ProfileDeploymentServiceUpdateProfileDeploymentUnauthorized {
	return &ProfileDeploymentServiceUpdateProfileDeploymentUnauthorized{}
}

/*
ProfileDeploymentServiceUpdateProfileDeploymentUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type ProfileDeploymentServiceUpdateProfileDeploymentUnauthorized struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this profile deployment service update profile deployment unauthorized response has a 2xx status code
func (o *ProfileDeploymentServiceUpdateProfileDeploymentUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this profile deployment service update profile deployment unauthorized response has a 3xx status code
func (o *ProfileDeploymentServiceUpdateProfileDeploymentUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this profile deployment service update profile deployment unauthorized response has a 4xx status code
func (o *ProfileDeploymentServiceUpdateProfileDeploymentUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this profile deployment service update profile deployment unauthorized response has a 5xx status code
func (o *ProfileDeploymentServiceUpdateProfileDeploymentUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this profile deployment service update profile deployment unauthorized response a status code equal to that given
func (o *ProfileDeploymentServiceUpdateProfileDeploymentUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the profile deployment service update profile deployment unauthorized response
func (o *ProfileDeploymentServiceUpdateProfileDeploymentUnauthorized) Code() int {
	return 401
}

func (o *ProfileDeploymentServiceUpdateProfileDeploymentUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/profiledeployments/id/{id}][%d] profileDeploymentServiceUpdateProfileDeploymentUnauthorized %s", 401, payload)
}

func (o *ProfileDeploymentServiceUpdateProfileDeploymentUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/profiledeployments/id/{id}][%d] profileDeploymentServiceUpdateProfileDeploymentUnauthorized %s", 401, payload)
}

func (o *ProfileDeploymentServiceUpdateProfileDeploymentUnauthorized) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ProfileDeploymentServiceUpdateProfileDeploymentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProfileDeploymentServiceUpdateProfileDeploymentForbidden creates a ProfileDeploymentServiceUpdateProfileDeploymentForbidden with default headers values
func NewProfileDeploymentServiceUpdateProfileDeploymentForbidden() *ProfileDeploymentServiceUpdateProfileDeploymentForbidden {
	return &ProfileDeploymentServiceUpdateProfileDeploymentForbidden{}
}

/*
ProfileDeploymentServiceUpdateProfileDeploymentForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have application level access permission for the operation or does not have access scope to the project.
*/
type ProfileDeploymentServiceUpdateProfileDeploymentForbidden struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this profile deployment service update profile deployment forbidden response has a 2xx status code
func (o *ProfileDeploymentServiceUpdateProfileDeploymentForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this profile deployment service update profile deployment forbidden response has a 3xx status code
func (o *ProfileDeploymentServiceUpdateProfileDeploymentForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this profile deployment service update profile deployment forbidden response has a 4xx status code
func (o *ProfileDeploymentServiceUpdateProfileDeploymentForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this profile deployment service update profile deployment forbidden response has a 5xx status code
func (o *ProfileDeploymentServiceUpdateProfileDeploymentForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this profile deployment service update profile deployment forbidden response a status code equal to that given
func (o *ProfileDeploymentServiceUpdateProfileDeploymentForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the profile deployment service update profile deployment forbidden response
func (o *ProfileDeploymentServiceUpdateProfileDeploymentForbidden) Code() int {
	return 403
}

func (o *ProfileDeploymentServiceUpdateProfileDeploymentForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/profiledeployments/id/{id}][%d] profileDeploymentServiceUpdateProfileDeploymentForbidden %s", 403, payload)
}

func (o *ProfileDeploymentServiceUpdateProfileDeploymentForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/profiledeployments/id/{id}][%d] profileDeploymentServiceUpdateProfileDeploymentForbidden %s", 403, payload)
}

func (o *ProfileDeploymentServiceUpdateProfileDeploymentForbidden) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ProfileDeploymentServiceUpdateProfileDeploymentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProfileDeploymentServiceUpdateProfileDeploymentNotFound creates a ProfileDeploymentServiceUpdateProfileDeploymentNotFound with default headers values
func NewProfileDeploymentServiceUpdateProfileDeploymentNotFound() *ProfileDeploymentServiceUpdateProfileDeploymentNotFound {
	return &ProfileDeploymentServiceUpdateProfileDeploymentNotFound{}
}

/*
ProfileDeploymentServiceUpdateProfileDeploymentNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type ProfileDeploymentServiceUpdateProfileDeploymentNotFound struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this profile deployment service update profile deployment not found response has a 2xx status code
func (o *ProfileDeploymentServiceUpdateProfileDeploymentNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this profile deployment service update profile deployment not found response has a 3xx status code
func (o *ProfileDeploymentServiceUpdateProfileDeploymentNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this profile deployment service update profile deployment not found response has a 4xx status code
func (o *ProfileDeploymentServiceUpdateProfileDeploymentNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this profile deployment service update profile deployment not found response has a 5xx status code
func (o *ProfileDeploymentServiceUpdateProfileDeploymentNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this profile deployment service update profile deployment not found response a status code equal to that given
func (o *ProfileDeploymentServiceUpdateProfileDeploymentNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the profile deployment service update profile deployment not found response
func (o *ProfileDeploymentServiceUpdateProfileDeploymentNotFound) Code() int {
	return 404
}

func (o *ProfileDeploymentServiceUpdateProfileDeploymentNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/profiledeployments/id/{id}][%d] profileDeploymentServiceUpdateProfileDeploymentNotFound %s", 404, payload)
}

func (o *ProfileDeploymentServiceUpdateProfileDeploymentNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/profiledeployments/id/{id}][%d] profileDeploymentServiceUpdateProfileDeploymentNotFound %s", 404, payload)
}

func (o *ProfileDeploymentServiceUpdateProfileDeploymentNotFound) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ProfileDeploymentServiceUpdateProfileDeploymentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProfileDeploymentServiceUpdateProfileDeploymentConflict creates a ProfileDeploymentServiceUpdateProfileDeploymentConflict with default headers values
func NewProfileDeploymentServiceUpdateProfileDeploymentConflict() *ProfileDeploymentServiceUpdateProfileDeploymentConflict {
	return &ProfileDeploymentServiceUpdateProfileDeploymentConflict{}
}

/*
ProfileDeploymentServiceUpdateProfileDeploymentConflict describes a response with status code 409, with default header values.

Conflict. The API gateway did not process the request because this operation will conflict with an already existing profile deployment record.
*/
type ProfileDeploymentServiceUpdateProfileDeploymentConflict struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this profile deployment service update profile deployment conflict response has a 2xx status code
func (o *ProfileDeploymentServiceUpdateProfileDeploymentConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this profile deployment service update profile deployment conflict response has a 3xx status code
func (o *ProfileDeploymentServiceUpdateProfileDeploymentConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this profile deployment service update profile deployment conflict response has a 4xx status code
func (o *ProfileDeploymentServiceUpdateProfileDeploymentConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this profile deployment service update profile deployment conflict response has a 5xx status code
func (o *ProfileDeploymentServiceUpdateProfileDeploymentConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this profile deployment service update profile deployment conflict response a status code equal to that given
func (o *ProfileDeploymentServiceUpdateProfileDeploymentConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the profile deployment service update profile deployment conflict response
func (o *ProfileDeploymentServiceUpdateProfileDeploymentConflict) Code() int {
	return 409
}

func (o *ProfileDeploymentServiceUpdateProfileDeploymentConflict) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/profiledeployments/id/{id}][%d] profileDeploymentServiceUpdateProfileDeploymentConflict %s", 409, payload)
}

func (o *ProfileDeploymentServiceUpdateProfileDeploymentConflict) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/profiledeployments/id/{id}][%d] profileDeploymentServiceUpdateProfileDeploymentConflict %s", 409, payload)
}

func (o *ProfileDeploymentServiceUpdateProfileDeploymentConflict) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ProfileDeploymentServiceUpdateProfileDeploymentConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProfileDeploymentServiceUpdateProfileDeploymentInternalServerError creates a ProfileDeploymentServiceUpdateProfileDeploymentInternalServerError with default headers values
func NewProfileDeploymentServiceUpdateProfileDeploymentInternalServerError() *ProfileDeploymentServiceUpdateProfileDeploymentInternalServerError {
	return &ProfileDeploymentServiceUpdateProfileDeploymentInternalServerError{}
}

/*
ProfileDeploymentServiceUpdateProfileDeploymentInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type ProfileDeploymentServiceUpdateProfileDeploymentInternalServerError struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this profile deployment service update profile deployment internal server error response has a 2xx status code
func (o *ProfileDeploymentServiceUpdateProfileDeploymentInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this profile deployment service update profile deployment internal server error response has a 3xx status code
func (o *ProfileDeploymentServiceUpdateProfileDeploymentInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this profile deployment service update profile deployment internal server error response has a 4xx status code
func (o *ProfileDeploymentServiceUpdateProfileDeploymentInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this profile deployment service update profile deployment internal server error response has a 5xx status code
func (o *ProfileDeploymentServiceUpdateProfileDeploymentInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this profile deployment service update profile deployment internal server error response a status code equal to that given
func (o *ProfileDeploymentServiceUpdateProfileDeploymentInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the profile deployment service update profile deployment internal server error response
func (o *ProfileDeploymentServiceUpdateProfileDeploymentInternalServerError) Code() int {
	return 500
}

func (o *ProfileDeploymentServiceUpdateProfileDeploymentInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/profiledeployments/id/{id}][%d] profileDeploymentServiceUpdateProfileDeploymentInternalServerError %s", 500, payload)
}

func (o *ProfileDeploymentServiceUpdateProfileDeploymentInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/profiledeployments/id/{id}][%d] profileDeploymentServiceUpdateProfileDeploymentInternalServerError %s", 500, payload)
}

func (o *ProfileDeploymentServiceUpdateProfileDeploymentInternalServerError) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ProfileDeploymentServiceUpdateProfileDeploymentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProfileDeploymentServiceUpdateProfileDeploymentGatewayTimeout creates a ProfileDeploymentServiceUpdateProfileDeploymentGatewayTimeout with default headers values
func NewProfileDeploymentServiceUpdateProfileDeploymentGatewayTimeout() *ProfileDeploymentServiceUpdateProfileDeploymentGatewayTimeout {
	return &ProfileDeploymentServiceUpdateProfileDeploymentGatewayTimeout{}
}

/*
ProfileDeploymentServiceUpdateProfileDeploymentGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type ProfileDeploymentServiceUpdateProfileDeploymentGatewayTimeout struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this profile deployment service update profile deployment gateway timeout response has a 2xx status code
func (o *ProfileDeploymentServiceUpdateProfileDeploymentGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this profile deployment service update profile deployment gateway timeout response has a 3xx status code
func (o *ProfileDeploymentServiceUpdateProfileDeploymentGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this profile deployment service update profile deployment gateway timeout response has a 4xx status code
func (o *ProfileDeploymentServiceUpdateProfileDeploymentGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this profile deployment service update profile deployment gateway timeout response has a 5xx status code
func (o *ProfileDeploymentServiceUpdateProfileDeploymentGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this profile deployment service update profile deployment gateway timeout response a status code equal to that given
func (o *ProfileDeploymentServiceUpdateProfileDeploymentGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the profile deployment service update profile deployment gateway timeout response
func (o *ProfileDeploymentServiceUpdateProfileDeploymentGatewayTimeout) Code() int {
	return 504
}

func (o *ProfileDeploymentServiceUpdateProfileDeploymentGatewayTimeout) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/profiledeployments/id/{id}][%d] profileDeploymentServiceUpdateProfileDeploymentGatewayTimeout %s", 504, payload)
}

func (o *ProfileDeploymentServiceUpdateProfileDeploymentGatewayTimeout) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/profiledeployments/id/{id}][%d] profileDeploymentServiceUpdateProfileDeploymentGatewayTimeout %s", 504, payload)
}

func (o *ProfileDeploymentServiceUpdateProfileDeploymentGatewayTimeout) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *ProfileDeploymentServiceUpdateProfileDeploymentGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProfileDeploymentServiceUpdateProfileDeploymentDefault creates a ProfileDeploymentServiceUpdateProfileDeploymentDefault with default headers values
func NewProfileDeploymentServiceUpdateProfileDeploymentDefault(code int) *ProfileDeploymentServiceUpdateProfileDeploymentDefault {
	return &ProfileDeploymentServiceUpdateProfileDeploymentDefault{
		_statusCode: code,
	}
}

/*
ProfileDeploymentServiceUpdateProfileDeploymentDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ProfileDeploymentServiceUpdateProfileDeploymentDefault struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// IsSuccess returns true when this profile deployment service update profile deployment default response has a 2xx status code
func (o *ProfileDeploymentServiceUpdateProfileDeploymentDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this profile deployment service update profile deployment default response has a 3xx status code
func (o *ProfileDeploymentServiceUpdateProfileDeploymentDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this profile deployment service update profile deployment default response has a 4xx status code
func (o *ProfileDeploymentServiceUpdateProfileDeploymentDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this profile deployment service update profile deployment default response has a 5xx status code
func (o *ProfileDeploymentServiceUpdateProfileDeploymentDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this profile deployment service update profile deployment default response a status code equal to that given
func (o *ProfileDeploymentServiceUpdateProfileDeploymentDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the profile deployment service update profile deployment default response
func (o *ProfileDeploymentServiceUpdateProfileDeploymentDefault) Code() int {
	return o._statusCode
}

func (o *ProfileDeploymentServiceUpdateProfileDeploymentDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/profiledeployments/id/{id}][%d] ProfileDeploymentService_UpdateProfileDeployment default %s", o._statusCode, payload)
}

func (o *ProfileDeploymentServiceUpdateProfileDeploymentDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/profiledeployments/id/{id}][%d] ProfileDeploymentService_UpdateProfileDeployment default %s", o._statusCode, payload)
}

func (o *ProfileDeploymentServiceUpdateProfileDeploymentDefault) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *ProfileDeploymentServiceUpdateProfileDeploymentDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
ProfileDeploymentServiceUpdateProfileDeploymentBody Deployments for Application profile
//
// Profile Deployment is a proto that should be used by user-agents to create/update deployments
swagger:model ProfileDeploymentServiceUpdateProfileDeploymentBody
*/
type ProfileDeploymentServiceUpdateProfileDeploymentBody struct {

	// app profile id
	// Required: true
	AppProfileInfo *models.AppProfileInfo `json:"appProfileInfo"`

	// Detailed description of the deployment.
	// Max Length: 256
	Description string `json:"description,omitempty"`

	// User defined name of the deployment, unique across the enterprise. Once deployment is created, name can’t be changed.
	// Required: true
	// Max Length: 256
	// Min Length: 3
	// Pattern: [a-zA-Z0-9][a-zA-Z0-9_.-]+
	Name *string `json:"name"`

	// project id
	// Required: true
	ProjectID *string `json:"projectId"`

	// status
	Status string `json:"status,omitempty"`

	// asset group info
	// Required: true
	TargetAssetGroup *models.TargetAssetGroup `json:"targetAssetGroup"`

	// User defined title of the deployment. Title can be changed at any time.
	// Max Length: 256
	// Min Length: 3
	// Pattern: [a-zA-Z0-9]+[a-zA-Z0-9!-~ ]+
	Title string `json:"title,omitempty"`
}

// Validate validates this profile deployment service update profile deployment body
func (o *ProfileDeploymentServiceUpdateProfileDeploymentBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAppProfileInfo(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDescription(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateProjectID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTargetAssetGroup(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTitle(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ProfileDeploymentServiceUpdateProfileDeploymentBody) validateAppProfileInfo(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"appProfileInfo", "body", o.AppProfileInfo); err != nil {
		return err
	}

	if o.AppProfileInfo != nil {
		if err := o.AppProfileInfo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "appProfileInfo")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "appProfileInfo")
			}
			return err
		}
	}

	return nil
}

func (o *ProfileDeploymentServiceUpdateProfileDeploymentBody) validateDescription(formats strfmt.Registry) error {
	if swag.IsZero(o.Description) { // not required
		return nil
	}

	if err := validate.MaxLength("body"+"."+"description", "body", o.Description, 256); err != nil {
		return err
	}

	return nil
}

func (o *ProfileDeploymentServiceUpdateProfileDeploymentBody) validateName(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"name", "body", o.Name); err != nil {
		return err
	}

	if err := validate.MinLength("body"+"."+"name", "body", *o.Name, 3); err != nil {
		return err
	}

	if err := validate.MaxLength("body"+"."+"name", "body", *o.Name, 256); err != nil {
		return err
	}

	if err := validate.Pattern("body"+"."+"name", "body", *o.Name, `[a-zA-Z0-9][a-zA-Z0-9_.-]+`); err != nil {
		return err
	}

	return nil
}

func (o *ProfileDeploymentServiceUpdateProfileDeploymentBody) validateProjectID(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"projectId", "body", o.ProjectID); err != nil {
		return err
	}

	return nil
}

func (o *ProfileDeploymentServiceUpdateProfileDeploymentBody) validateTargetAssetGroup(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"targetAssetGroup", "body", o.TargetAssetGroup); err != nil {
		return err
	}

	if o.TargetAssetGroup != nil {
		if err := o.TargetAssetGroup.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "targetAssetGroup")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "targetAssetGroup")
			}
			return err
		}
	}

	return nil
}

func (o *ProfileDeploymentServiceUpdateProfileDeploymentBody) validateTitle(formats strfmt.Registry) error {
	if swag.IsZero(o.Title) { // not required
		return nil
	}

	if err := validate.MinLength("body"+"."+"title", "body", o.Title, 3); err != nil {
		return err
	}

	if err := validate.MaxLength("body"+"."+"title", "body", o.Title, 256); err != nil {
		return err
	}

	if err := validate.Pattern("body"+"."+"title", "body", o.Title, `[a-zA-Z0-9]+[a-zA-Z0-9!-~ ]+`); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this profile deployment service update profile deployment body based on the context it is used
func (o *ProfileDeploymentServiceUpdateProfileDeploymentBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateAppProfileInfo(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateTargetAssetGroup(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ProfileDeploymentServiceUpdateProfileDeploymentBody) contextValidateAppProfileInfo(ctx context.Context, formats strfmt.Registry) error {

	if o.AppProfileInfo != nil {

		if err := o.AppProfileInfo.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "appProfileInfo")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "appProfileInfo")
			}
			return err
		}
	}

	return nil
}

func (o *ProfileDeploymentServiceUpdateProfileDeploymentBody) contextValidateTargetAssetGroup(ctx context.Context, formats strfmt.Registry) error {

	if o.TargetAssetGroup != nil {

		if err := o.TargetAssetGroup.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "targetAssetGroup")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "targetAssetGroup")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *ProfileDeploymentServiceUpdateProfileDeploymentBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ProfileDeploymentServiceUpdateProfileDeploymentBody) UnmarshalBinary(b []byte) error {
	var res ProfileDeploymentServiceUpdateProfileDeploymentBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
