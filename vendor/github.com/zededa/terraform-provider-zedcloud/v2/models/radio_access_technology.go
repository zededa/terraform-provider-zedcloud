// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// RadioAccessTechnology  - RADIO_ACCESS_TECHNOLOGY_GSM: Global System for Mobile Communications (2G).
//   - RADIO_ACCESS_TECHNOLOGY_UMTS: Universal Mobile Telecommunications System (3G).
//   - RADIO_ACCESS_TECHNOLOGY_LTE: Long Term Evolution (4G).
//   - RADIO_ACCESS_TECHNOLOGY_5GNR: 5G New Radio.
//
// swagger:model RadioAccessTechnology
type RadioAccessTechnology string

func NewRadioAccessTechnology(value RadioAccessTechnology) *RadioAccessTechnology {
	return &value
}

// Pointer returns a pointer to a freshly-allocated RadioAccessTechnology.
func (m RadioAccessTechnology) Pointer() *RadioAccessTechnology {
	return &m
}

const (

	// RadioAccessTechnologyRADIOACCESSTECHNOLOGYUNSPECIFIED captures enum value "RADIO_ACCESS_TECHNOLOGY_UNSPECIFIED"
	RadioAccessTechnologyRADIOACCESSTECHNOLOGYUNSPECIFIED RadioAccessTechnology = "RADIO_ACCESS_TECHNOLOGY_UNSPECIFIED"

	// RadioAccessTechnologyRADIOACCESSTECHNOLOGYGSM captures enum value "RADIO_ACCESS_TECHNOLOGY_GSM"
	RadioAccessTechnologyRADIOACCESSTECHNOLOGYGSM RadioAccessTechnology = "RADIO_ACCESS_TECHNOLOGY_GSM"

	// RadioAccessTechnologyRADIOACCESSTECHNOLOGYUMTS captures enum value "RADIO_ACCESS_TECHNOLOGY_UMTS"
	RadioAccessTechnologyRADIOACCESSTECHNOLOGYUMTS RadioAccessTechnology = "RADIO_ACCESS_TECHNOLOGY_UMTS"

	// RadioAccessTechnologyRADIOACCESSTECHNOLOGYLTE captures enum value "RADIO_ACCESS_TECHNOLOGY_LTE"
	RadioAccessTechnologyRADIOACCESSTECHNOLOGYLTE RadioAccessTechnology = "RADIO_ACCESS_TECHNOLOGY_LTE"

	// RadioAccessTechnologyRADIOACCESSTECHNOLOGY5GNR captures enum value "RADIO_ACCESS_TECHNOLOGY_5GNR"
	RadioAccessTechnologyRADIOACCESSTECHNOLOGY5GNR RadioAccessTechnology = "RADIO_ACCESS_TECHNOLOGY_5GNR"
)

// for schema
var radioAccessTechnologyEnum []interface{}

func init() {
	var res []RadioAccessTechnology
	if err := json.Unmarshal([]byte(`["RADIO_ACCESS_TECHNOLOGY_UNSPECIFIED","RADIO_ACCESS_TECHNOLOGY_GSM","RADIO_ACCESS_TECHNOLOGY_UMTS","RADIO_ACCESS_TECHNOLOGY_LTE","RADIO_ACCESS_TECHNOLOGY_5GNR"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		radioAccessTechnologyEnum = append(radioAccessTechnologyEnum, v)
	}
}

func (m RadioAccessTechnology) validateRadioAccessTechnologyEnum(path, location string, value RadioAccessTechnology) error {
	if err := validate.EnumCase(path, location, value, radioAccessTechnologyEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this radio access technology
func (m RadioAccessTechnology) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateRadioAccessTechnologyEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this radio access technology based on context it is used
func (m RadioAccessTechnology) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
