// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GPSLocation g p s location
//
// swagger:model GPSLocation
type GPSLocation struct {

	// Altitude from mean sea level
	Altitude float64 `json:"altitude,omitempty"`

	// Horizontal reliability
	HorizontalReliability int64 `json:"horizontalReliability,omitempty"`

	// Horizontal uncertainty
	HorizontalUncertainty float64 `json:"horizontalUncertainty,omitempty"`

	// Latitude
	Latitude float64 `json:"latitude,omitempty"`

	// Logical label of the adapter used to get GPS coordinates
	LogicalLabel string `json:"logicalLabel,omitempty"`

	// Longitude
	Longitude float64 `json:"longitude,omitempty"`

	// UTC timestamp
	Timestamp interface{} `json:"timestamp,omitempty"`

	// Vertical reliability
	VerticalReliability int64 `json:"verticalReliability,omitempty"`

	// Vertical uncertainty
	VerticalUncertainty float64 `json:"verticalUncertainty,omitempty"`
}

// Validate validates this g p s location
func (m *GPSLocation) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this g p s location based on context it is used
func (m *GPSLocation) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GPSLocation) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GPSLocation) UnmarshalBinary(b []byte) error {
	var res GPSLocation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
