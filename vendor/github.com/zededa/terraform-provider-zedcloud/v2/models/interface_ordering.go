// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// InterfaceOrdering this enum is used for enable and disable the interface ordering for app instances
// if the value of it set to INTERFACE_ORDERING_ENABLED then the interface ordering is
// sent to eve and therfaces will be mapped in same order during the deployment of app instances
//
// - INTERFACE_ORDERING_UNSPECIFIED: Default value. This value is not specified and should not be used.
//   - INTERFACE_ORDERING_ENABLED: interface ordering is enabled. interface order will be sent to eve according to app template
//   - INTERFACE_ORDERING_DISABLED: interface ordering is disabled. interface order will not be sent to eve
//
// swagger:model InterfaceOrdering
type InterfaceOrdering string

func NewInterfaceOrdering(value InterfaceOrdering) *InterfaceOrdering {
	return &value
}

// Pointer returns a pointer to a freshly-allocated InterfaceOrdering.
func (m InterfaceOrdering) Pointer() *InterfaceOrdering {
	return &m
}

const (

	// InterfaceOrderingINTERFACEORDERINGUNSPECIFIED captures enum value "INTERFACE_ORDERING_UNSPECIFIED"
	InterfaceOrderingINTERFACEORDERINGUNSPECIFIED InterfaceOrdering = "INTERFACE_ORDERING_UNSPECIFIED"

	// InterfaceOrderingINTERFACEORDERINGENABLED captures enum value "INTERFACE_ORDERING_ENABLED"
	InterfaceOrderingINTERFACEORDERINGENABLED InterfaceOrdering = "INTERFACE_ORDERING_ENABLED"

	// InterfaceOrderingINTERFACEORDERINGDISABLED captures enum value "INTERFACE_ORDERING_DISABLED"
	InterfaceOrderingINTERFACEORDERINGDISABLED InterfaceOrdering = "INTERFACE_ORDERING_DISABLED"
)

// for schema
var interfaceOrderingEnum []interface{}

func init() {
	var res []InterfaceOrdering
	if err := json.Unmarshal([]byte(`["INTERFACE_ORDERING_UNSPECIFIED","INTERFACE_ORDERING_ENABLED","INTERFACE_ORDERING_DISABLED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		interfaceOrderingEnum = append(interfaceOrderingEnum, v)
	}
}

func (m InterfaceOrdering) validateInterfaceOrderingEnum(path, location string, value InterfaceOrdering) error {
	if err := validate.EnumCase(path, location, value, interfaceOrderingEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this interface ordering
func (m InterfaceOrdering) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateInterfaceOrderingEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this interface ordering based on context it is used
func (m InterfaceOrdering) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
