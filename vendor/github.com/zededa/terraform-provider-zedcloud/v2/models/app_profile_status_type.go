// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// AppProfileStatusType app profile status type
//
// swagger:model AppProfileStatusType
type AppProfileStatusType string

func NewAppProfileStatusType(value AppProfileStatusType) *AppProfileStatusType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated AppProfileStatusType.
func (m AppProfileStatusType) Pointer() *AppProfileStatusType {
	return &m
}

const (

	// AppProfileStatusTypeAPPPROFILESTATUSTYPEINACTIVE captures enum value "APP_PROFILE_STATUS_TYPE_INACTIVE"
	AppProfileStatusTypeAPPPROFILESTATUSTYPEINACTIVE AppProfileStatusType = "APP_PROFILE_STATUS_TYPE_INACTIVE"

	// AppProfileStatusTypeAPPPROFILESTATUSTYPEACTIVE captures enum value "APP_PROFILE_STATUS_TYPE_ACTIVE"
	AppProfileStatusTypeAPPPROFILESTATUSTYPEACTIVE AppProfileStatusType = "APP_PROFILE_STATUS_TYPE_ACTIVE"
)

// for schema
var appProfileStatusTypeEnum []interface{}

func init() {
	var res []AppProfileStatusType
	if err := json.Unmarshal([]byte(`["APP_PROFILE_STATUS_TYPE_INACTIVE","APP_PROFILE_STATUS_TYPE_ACTIVE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		appProfileStatusTypeEnum = append(appProfileStatusTypeEnum, v)
	}
}

func (m AppProfileStatusType) validateAppProfileStatusTypeEnum(path, location string, value AppProfileStatusType) error {
	if err := validate.EnumCase(path, location, value, appProfileStatusTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this app profile status type
func (m AppProfileStatusType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAppProfileStatusTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this app profile status type based on context it is used
func (m AppProfileStatusType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
