// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// Proto network proxy proto
//
// swagger:model Proto
type Proto string

func NewNetworkProxyProto(value Proto) *Proto {
	return &value
}

// Pointer returns a pointer to a freshly-allocated NetworkProxyProto.
func (m Proto) Pointer() *Proto {
	return &m
}

const (

	// NetworkProxyProtoNETWORKPROXYPROTOHTTP captures enum value "NETWORK_PROXY_PROTO_HTTP"
	NetworkProxyProtoNETWORKPROXYPROTOHTTP Proto = "NETWORK_PROXY_PROTO_HTTP"

	// NetworkProxyProtoNETWORKPROXYPROTOHTTPS captures enum value "NETWORK_PROXY_PROTO_HTTPS"
	NetworkProxyProtoNETWORKPROXYPROTOHTTPS Proto = "NETWORK_PROXY_PROTO_HTTPS"

	// NetworkProxyProtoNETWORKPROXYPROTOSOCKS captures enum value "NETWORK_PROXY_PROTO_SOCKS"
	NetworkProxyProtoNETWORKPROXYPROTOSOCKS Proto = "NETWORK_PROXY_PROTO_SOCKS"

	// NetworkProxyProtoNETWORKPROXYPROTOFTP captures enum value "NETWORK_PROXY_PROTO_FTP"
	NetworkProxyProtoNETWORKPROXYPROTOFTP Proto = "NETWORK_PROXY_PROTO_FTP"

	// NetworkProxyProtoNETWORKPROXYPROTOOTHER captures enum value "NETWORK_PROXY_PROTO_OTHER"
	NetworkProxyProtoNETWORKPROXYPROTOOTHER Proto = "NETWORK_PROXY_PROTO_OTHER"
)

// for schema
var networkProxyProtoEnum []interface{}

func init() {
	var res []Proto
	if err := json.Unmarshal([]byte(`["NETWORK_PROXY_PROTO_HTTP","NETWORK_PROXY_PROTO_HTTPS","NETWORK_PROXY_PROTO_SOCKS","NETWORK_PROXY_PROTO_FTP","NETWORK_PROXY_PROTO_OTHER"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		networkProxyProtoEnum = append(networkProxyProtoEnum, v)
	}
}

func (m Proto) validateNetworkProxyProtoEnum(path, location string, value Proto) error {
	if err := validate.EnumCase(path, location, value, networkProxyProtoEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this network proxy proto
func (m Proto) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateNetworkProxyProtoEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this network proxy proto based on context it is used
func (m Proto) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
